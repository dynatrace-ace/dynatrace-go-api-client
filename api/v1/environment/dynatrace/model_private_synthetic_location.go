/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// PrivateSyntheticLocation Configuration of a private synthetic location.   **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.
type PrivateSyntheticLocation struct {
	SyntheticLocation
	// A list of synthetic nodes belonging to the location.    You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.
	Nodes []string `json:"nodes"`
	// The alerting of location outage is enabled (`true`) or disabled (`false`).
	AvailabilityLocationOutage *bool `json:"availabilityLocationOutage,omitempty"`
	// The alerting of node outage is enabled (`true`) or disabled (`false`).    If enabled, the outage of *any* node in the location triggers an alert.
	AvailabilityNodeOutage *bool `json:"availabilityNodeOutage,omitempty"`
	// Alert if the location or node outage lasts longer than *X* minutes.    Only applicable when **availabilityLocationOutage** or **availabilityNodeOutage** is set to `true`.
	LocationNodeOutageDelayInMinutes *int32 `json:"locationNodeOutageDelayInMinutes,omitempty"`
	// The notifications of location and node outage is enabled (`true`) or disabled (`false`).
	AvailabilityNotificationsEnabled *bool `json:"availabilityNotificationsEnabled,omitempty"`
}

// NewPrivateSyntheticLocation instantiates a new PrivateSyntheticLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSyntheticLocation(nodes []string, entityId string, type_ string, name string, latitude float64, longitude float64) *PrivateSyntheticLocation {
	this := PrivateSyntheticLocation{}
	this.EntityId = entityId
	this.Type = type_
	this.Name = name
	this.Latitude = latitude
	this.Longitude = longitude
	this.Nodes = nodes
	return &this
}

// NewPrivateSyntheticLocationWithDefaults instantiates a new PrivateSyntheticLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSyntheticLocationWithDefaults() *PrivateSyntheticLocation {
	this := PrivateSyntheticLocation{}
	return &this
}

// GetNodes returns the Nodes field value
func (o *PrivateSyntheticLocation) GetNodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *PrivateSyntheticLocation) GetNodesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Nodes, true
}

// SetNodes sets field value
func (o *PrivateSyntheticLocation) SetNodes(v []string) {
	o.Nodes = v
}

// GetAvailabilityLocationOutage returns the AvailabilityLocationOutage field value if set, zero value otherwise.
func (o *PrivateSyntheticLocation) GetAvailabilityLocationOutage() bool {
	if o == nil || o.AvailabilityLocationOutage == nil {
		var ret bool
		return ret
	}
	return *o.AvailabilityLocationOutage
}

// GetAvailabilityLocationOutageOk returns a tuple with the AvailabilityLocationOutage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSyntheticLocation) GetAvailabilityLocationOutageOk() (*bool, bool) {
	if o == nil || o.AvailabilityLocationOutage == nil {
		return nil, false
	}
	return o.AvailabilityLocationOutage, true
}

// HasAvailabilityLocationOutage returns a boolean if a field has been set.
func (o *PrivateSyntheticLocation) HasAvailabilityLocationOutage() bool {
	if o != nil && o.AvailabilityLocationOutage != nil {
		return true
	}

	return false
}

// SetAvailabilityLocationOutage gets a reference to the given bool and assigns it to the AvailabilityLocationOutage field.
func (o *PrivateSyntheticLocation) SetAvailabilityLocationOutage(v bool) {
	o.AvailabilityLocationOutage = &v
}

// GetAvailabilityNodeOutage returns the AvailabilityNodeOutage field value if set, zero value otherwise.
func (o *PrivateSyntheticLocation) GetAvailabilityNodeOutage() bool {
	if o == nil || o.AvailabilityNodeOutage == nil {
		var ret bool
		return ret
	}
	return *o.AvailabilityNodeOutage
}

// GetAvailabilityNodeOutageOk returns a tuple with the AvailabilityNodeOutage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSyntheticLocation) GetAvailabilityNodeOutageOk() (*bool, bool) {
	if o == nil || o.AvailabilityNodeOutage == nil {
		return nil, false
	}
	return o.AvailabilityNodeOutage, true
}

// HasAvailabilityNodeOutage returns a boolean if a field has been set.
func (o *PrivateSyntheticLocation) HasAvailabilityNodeOutage() bool {
	if o != nil && o.AvailabilityNodeOutage != nil {
		return true
	}

	return false
}

// SetAvailabilityNodeOutage gets a reference to the given bool and assigns it to the AvailabilityNodeOutage field.
func (o *PrivateSyntheticLocation) SetAvailabilityNodeOutage(v bool) {
	o.AvailabilityNodeOutage = &v
}

// GetLocationNodeOutageDelayInMinutes returns the LocationNodeOutageDelayInMinutes field value if set, zero value otherwise.
func (o *PrivateSyntheticLocation) GetLocationNodeOutageDelayInMinutes() int32 {
	if o == nil || o.LocationNodeOutageDelayInMinutes == nil {
		var ret int32
		return ret
	}
	return *o.LocationNodeOutageDelayInMinutes
}

// GetLocationNodeOutageDelayInMinutesOk returns a tuple with the LocationNodeOutageDelayInMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSyntheticLocation) GetLocationNodeOutageDelayInMinutesOk() (*int32, bool) {
	if o == nil || o.LocationNodeOutageDelayInMinutes == nil {
		return nil, false
	}
	return o.LocationNodeOutageDelayInMinutes, true
}

// HasLocationNodeOutageDelayInMinutes returns a boolean if a field has been set.
func (o *PrivateSyntheticLocation) HasLocationNodeOutageDelayInMinutes() bool {
	if o != nil && o.LocationNodeOutageDelayInMinutes != nil {
		return true
	}

	return false
}

// SetLocationNodeOutageDelayInMinutes gets a reference to the given int32 and assigns it to the LocationNodeOutageDelayInMinutes field.
func (o *PrivateSyntheticLocation) SetLocationNodeOutageDelayInMinutes(v int32) {
	o.LocationNodeOutageDelayInMinutes = &v
}

// GetAvailabilityNotificationsEnabled returns the AvailabilityNotificationsEnabled field value if set, zero value otherwise.
func (o *PrivateSyntheticLocation) GetAvailabilityNotificationsEnabled() bool {
	if o == nil || o.AvailabilityNotificationsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AvailabilityNotificationsEnabled
}

// GetAvailabilityNotificationsEnabledOk returns a tuple with the AvailabilityNotificationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSyntheticLocation) GetAvailabilityNotificationsEnabledOk() (*bool, bool) {
	if o == nil || o.AvailabilityNotificationsEnabled == nil {
		return nil, false
	}
	return o.AvailabilityNotificationsEnabled, true
}

// HasAvailabilityNotificationsEnabled returns a boolean if a field has been set.
func (o *PrivateSyntheticLocation) HasAvailabilityNotificationsEnabled() bool {
	if o != nil && o.AvailabilityNotificationsEnabled != nil {
		return true
	}

	return false
}

// SetAvailabilityNotificationsEnabled gets a reference to the given bool and assigns it to the AvailabilityNotificationsEnabled field.
func (o *PrivateSyntheticLocation) SetAvailabilityNotificationsEnabled(v bool) {
	o.AvailabilityNotificationsEnabled = &v
}

func (o PrivateSyntheticLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedSyntheticLocation, errSyntheticLocation := json.Marshal(o.SyntheticLocation)
	if errSyntheticLocation != nil {
		return []byte{}, errSyntheticLocation
	}
	errSyntheticLocation = json.Unmarshal([]byte(serializedSyntheticLocation), &toSerialize)
	if errSyntheticLocation != nil {
		return []byte{}, errSyntheticLocation
	}
	if true {
		toSerialize["nodes"] = o.Nodes
	}
	if o.AvailabilityLocationOutage != nil {
		toSerialize["availabilityLocationOutage"] = o.AvailabilityLocationOutage
	}
	if o.AvailabilityNodeOutage != nil {
		toSerialize["availabilityNodeOutage"] = o.AvailabilityNodeOutage
	}
	if o.LocationNodeOutageDelayInMinutes != nil {
		toSerialize["locationNodeOutageDelayInMinutes"] = o.LocationNodeOutageDelayInMinutes
	}
	if o.AvailabilityNotificationsEnabled != nil {
		toSerialize["availabilityNotificationsEnabled"] = o.AvailabilityNotificationsEnabled
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateSyntheticLocation struct {
	value *PrivateSyntheticLocation
	isSet bool
}

func (v NullablePrivateSyntheticLocation) Get() *PrivateSyntheticLocation {
	return v.value
}

func (v *NullablePrivateSyntheticLocation) Set(val *PrivateSyntheticLocation) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSyntheticLocation) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSyntheticLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSyntheticLocation(val *PrivateSyntheticLocation) *NullablePrivateSyntheticLocation {
	return &NullablePrivateSyntheticLocation{value: val, isSet: true}
}

func (v NullablePrivateSyntheticLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSyntheticLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


