/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// ServiceFromRelationships struct for ServiceFromRelationships
type ServiceFromRelationships struct {
	RunsOnProcessGroupInstance *[]string `json:"runsOnProcessGroupInstance,omitempty"`
	Calls *[]string `json:"calls,omitempty"`
	RunsOn *[]string `json:"runsOn,omitempty"`
}

// NewServiceFromRelationships instantiates a new ServiceFromRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceFromRelationships() *ServiceFromRelationships {
	this := ServiceFromRelationships{}
	return &this
}

// NewServiceFromRelationshipsWithDefaults instantiates a new ServiceFromRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceFromRelationshipsWithDefaults() *ServiceFromRelationships {
	this := ServiceFromRelationships{}
	return &this
}

// GetRunsOnProcessGroupInstance returns the RunsOnProcessGroupInstance field value if set, zero value otherwise.
func (o *ServiceFromRelationships) GetRunsOnProcessGroupInstance() []string {
	if o == nil || o.RunsOnProcessGroupInstance == nil {
		var ret []string
		return ret
	}
	return *o.RunsOnProcessGroupInstance
}

// GetRunsOnProcessGroupInstanceOk returns a tuple with the RunsOnProcessGroupInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceFromRelationships) GetRunsOnProcessGroupInstanceOk() (*[]string, bool) {
	if o == nil || o.RunsOnProcessGroupInstance == nil {
		return nil, false
	}
	return o.RunsOnProcessGroupInstance, true
}

// HasRunsOnProcessGroupInstance returns a boolean if a field has been set.
func (o *ServiceFromRelationships) HasRunsOnProcessGroupInstance() bool {
	if o != nil && o.RunsOnProcessGroupInstance != nil {
		return true
	}

	return false
}

// SetRunsOnProcessGroupInstance gets a reference to the given []string and assigns it to the RunsOnProcessGroupInstance field.
func (o *ServiceFromRelationships) SetRunsOnProcessGroupInstance(v []string) {
	o.RunsOnProcessGroupInstance = &v
}

// GetCalls returns the Calls field value if set, zero value otherwise.
func (o *ServiceFromRelationships) GetCalls() []string {
	if o == nil || o.Calls == nil {
		var ret []string
		return ret
	}
	return *o.Calls
}

// GetCallsOk returns a tuple with the Calls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceFromRelationships) GetCallsOk() (*[]string, bool) {
	if o == nil || o.Calls == nil {
		return nil, false
	}
	return o.Calls, true
}

// HasCalls returns a boolean if a field has been set.
func (o *ServiceFromRelationships) HasCalls() bool {
	if o != nil && o.Calls != nil {
		return true
	}

	return false
}

// SetCalls gets a reference to the given []string and assigns it to the Calls field.
func (o *ServiceFromRelationships) SetCalls(v []string) {
	o.Calls = &v
}

// GetRunsOn returns the RunsOn field value if set, zero value otherwise.
func (o *ServiceFromRelationships) GetRunsOn() []string {
	if o == nil || o.RunsOn == nil {
		var ret []string
		return ret
	}
	return *o.RunsOn
}

// GetRunsOnOk returns a tuple with the RunsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceFromRelationships) GetRunsOnOk() (*[]string, bool) {
	if o == nil || o.RunsOn == nil {
		return nil, false
	}
	return o.RunsOn, true
}

// HasRunsOn returns a boolean if a field has been set.
func (o *ServiceFromRelationships) HasRunsOn() bool {
	if o != nil && o.RunsOn != nil {
		return true
	}

	return false
}

// SetRunsOn gets a reference to the given []string and assigns it to the RunsOn field.
func (o *ServiceFromRelationships) SetRunsOn(v []string) {
	o.RunsOn = &v
}

func (o ServiceFromRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RunsOnProcessGroupInstance != nil {
		toSerialize["runsOnProcessGroupInstance"] = o.RunsOnProcessGroupInstance
	}
	if o.Calls != nil {
		toSerialize["calls"] = o.Calls
	}
	if o.RunsOn != nil {
		toSerialize["runsOn"] = o.RunsOn
	}
	return json.Marshal(toSerialize)
}

type NullableServiceFromRelationships struct {
	value *ServiceFromRelationships
	isSet bool
}

func (v NullableServiceFromRelationships) Get() *ServiceFromRelationships {
	return v.value
}

func (v *NullableServiceFromRelationships) Set(val *ServiceFromRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceFromRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceFromRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceFromRelationships(val *ServiceFromRelationships) *NullableServiceFromRelationships {
	return &NullableServiceFromRelationships{value: val, isSet: true}
}

func (v NullableServiceFromRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceFromRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


