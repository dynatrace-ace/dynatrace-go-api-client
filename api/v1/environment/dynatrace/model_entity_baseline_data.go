/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// EntityBaselineData The baseline data for a Dynatrace entity for a specific duration metric.
type EntityBaselineData struct {
	// The ID of the Dynatrace entity.
	EntityId string `json:"entityId"`
	// The display name of the entity.
	DisplayName *string `json:"displayName,omitempty"`
	// The error rate baseline.
	ErrorRate *float32 `json:"errorRate,omitempty"`
	// The entity has a load baseline (`true`) or doesn't (`false`).
	HasLoadBaseline *bool `json:"hasLoadBaseline,omitempty"`
	// The median baseline, in microseconds.
	MicrosMedian *float32 `json:"microsMedian,omitempty"`
	// The 90th percentile baseline, in microseconds.
	Micros90thPercentile *float32 `json:"micros90thPercentile,omitempty"`
	// The baseline data for child entities of this entity, for example a `SERVICE_METHOD` of a `SERVICE_METHOD_GROUP`.
	ChildBaselines *[]EntityBaselineData `json:"childBaselines,omitempty"`
}

// NewEntityBaselineData instantiates a new EntityBaselineData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityBaselineData(entityId string) *EntityBaselineData {
	this := EntityBaselineData{}
	this.EntityId = entityId
	return &this
}

// NewEntityBaselineDataWithDefaults instantiates a new EntityBaselineData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityBaselineDataWithDefaults() *EntityBaselineData {
	this := EntityBaselineData{}
	return &this
}

// GetEntityId returns the EntityId field value
func (o *EntityBaselineData) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetEntityIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *EntityBaselineData) SetEntityId(v string) {
	o.EntityId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EntityBaselineData) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EntityBaselineData) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EntityBaselineData) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetErrorRate returns the ErrorRate field value if set, zero value otherwise.
func (o *EntityBaselineData) GetErrorRate() float32 {
	if o == nil || o.ErrorRate == nil {
		var ret float32
		return ret
	}
	return *o.ErrorRate
}

// GetErrorRateOk returns a tuple with the ErrorRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetErrorRateOk() (*float32, bool) {
	if o == nil || o.ErrorRate == nil {
		return nil, false
	}
	return o.ErrorRate, true
}

// HasErrorRate returns a boolean if a field has been set.
func (o *EntityBaselineData) HasErrorRate() bool {
	if o != nil && o.ErrorRate != nil {
		return true
	}

	return false
}

// SetErrorRate gets a reference to the given float32 and assigns it to the ErrorRate field.
func (o *EntityBaselineData) SetErrorRate(v float32) {
	o.ErrorRate = &v
}

// GetHasLoadBaseline returns the HasLoadBaseline field value if set, zero value otherwise.
func (o *EntityBaselineData) GetHasLoadBaseline() bool {
	if o == nil || o.HasLoadBaseline == nil {
		var ret bool
		return ret
	}
	return *o.HasLoadBaseline
}

// GetHasLoadBaselineOk returns a tuple with the HasLoadBaseline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetHasLoadBaselineOk() (*bool, bool) {
	if o == nil || o.HasLoadBaseline == nil {
		return nil, false
	}
	return o.HasLoadBaseline, true
}

// HasHasLoadBaseline returns a boolean if a field has been set.
func (o *EntityBaselineData) HasHasLoadBaseline() bool {
	if o != nil && o.HasLoadBaseline != nil {
		return true
	}

	return false
}

// SetHasLoadBaseline gets a reference to the given bool and assigns it to the HasLoadBaseline field.
func (o *EntityBaselineData) SetHasLoadBaseline(v bool) {
	o.HasLoadBaseline = &v
}

// GetMicrosMedian returns the MicrosMedian field value if set, zero value otherwise.
func (o *EntityBaselineData) GetMicrosMedian() float32 {
	if o == nil || o.MicrosMedian == nil {
		var ret float32
		return ret
	}
	return *o.MicrosMedian
}

// GetMicrosMedianOk returns a tuple with the MicrosMedian field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetMicrosMedianOk() (*float32, bool) {
	if o == nil || o.MicrosMedian == nil {
		return nil, false
	}
	return o.MicrosMedian, true
}

// HasMicrosMedian returns a boolean if a field has been set.
func (o *EntityBaselineData) HasMicrosMedian() bool {
	if o != nil && o.MicrosMedian != nil {
		return true
	}

	return false
}

// SetMicrosMedian gets a reference to the given float32 and assigns it to the MicrosMedian field.
func (o *EntityBaselineData) SetMicrosMedian(v float32) {
	o.MicrosMedian = &v
}

// GetMicros90thPercentile returns the Micros90thPercentile field value if set, zero value otherwise.
func (o *EntityBaselineData) GetMicros90thPercentile() float32 {
	if o == nil || o.Micros90thPercentile == nil {
		var ret float32
		return ret
	}
	return *o.Micros90thPercentile
}

// GetMicros90thPercentileOk returns a tuple with the Micros90thPercentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetMicros90thPercentileOk() (*float32, bool) {
	if o == nil || o.Micros90thPercentile == nil {
		return nil, false
	}
	return o.Micros90thPercentile, true
}

// HasMicros90thPercentile returns a boolean if a field has been set.
func (o *EntityBaselineData) HasMicros90thPercentile() bool {
	if o != nil && o.Micros90thPercentile != nil {
		return true
	}

	return false
}

// SetMicros90thPercentile gets a reference to the given float32 and assigns it to the Micros90thPercentile field.
func (o *EntityBaselineData) SetMicros90thPercentile(v float32) {
	o.Micros90thPercentile = &v
}

// GetChildBaselines returns the ChildBaselines field value if set, zero value otherwise.
func (o *EntityBaselineData) GetChildBaselines() []EntityBaselineData {
	if o == nil || o.ChildBaselines == nil {
		var ret []EntityBaselineData
		return ret
	}
	return *o.ChildBaselines
}

// GetChildBaselinesOk returns a tuple with the ChildBaselines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityBaselineData) GetChildBaselinesOk() (*[]EntityBaselineData, bool) {
	if o == nil || o.ChildBaselines == nil {
		return nil, false
	}
	return o.ChildBaselines, true
}

// HasChildBaselines returns a boolean if a field has been set.
func (o *EntityBaselineData) HasChildBaselines() bool {
	if o != nil && o.ChildBaselines != nil {
		return true
	}

	return false
}

// SetChildBaselines gets a reference to the given []EntityBaselineData and assigns it to the ChildBaselines field.
func (o *EntityBaselineData) SetChildBaselines(v []EntityBaselineData) {
	o.ChildBaselines = &v
}

func (o EntityBaselineData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entityId"] = o.EntityId
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.ErrorRate != nil {
		toSerialize["errorRate"] = o.ErrorRate
	}
	if o.HasLoadBaseline != nil {
		toSerialize["hasLoadBaseline"] = o.HasLoadBaseline
	}
	if o.MicrosMedian != nil {
		toSerialize["microsMedian"] = o.MicrosMedian
	}
	if o.Micros90thPercentile != nil {
		toSerialize["micros90thPercentile"] = o.Micros90thPercentile
	}
	if o.ChildBaselines != nil {
		toSerialize["childBaselines"] = o.ChildBaselines
	}
	return json.Marshal(toSerialize)
}

type NullableEntityBaselineData struct {
	value *EntityBaselineData
	isSet bool
}

func (v NullableEntityBaselineData) Get() *EntityBaselineData {
	return v.value
}

func (v *NullableEntityBaselineData) Set(val *EntityBaselineData) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityBaselineData) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityBaselineData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityBaselineData(val *EntityBaselineData) *NullableEntityBaselineData {
	return &NullableEntityBaselineData{value: val, isSet: true}
}

func (v NullableEntityBaselineData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityBaselineData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


