/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// InstallerMetaInfoDto struct for InstallerMetaInfoDto
type InstallerMetaInfoDto struct {
	LatestAgentVersion *string `json:"latestAgentVersion,omitempty"`
}

// NewInstallerMetaInfoDto instantiates a new InstallerMetaInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallerMetaInfoDto() *InstallerMetaInfoDto {
	this := InstallerMetaInfoDto{}
	return &this
}

// NewInstallerMetaInfoDtoWithDefaults instantiates a new InstallerMetaInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallerMetaInfoDtoWithDefaults() *InstallerMetaInfoDto {
	this := InstallerMetaInfoDto{}
	return &this
}

// GetLatestAgentVersion returns the LatestAgentVersion field value if set, zero value otherwise.
func (o *InstallerMetaInfoDto) GetLatestAgentVersion() string {
	if o == nil || o.LatestAgentVersion == nil {
		var ret string
		return ret
	}
	return *o.LatestAgentVersion
}

// GetLatestAgentVersionOk returns a tuple with the LatestAgentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallerMetaInfoDto) GetLatestAgentVersionOk() (*string, bool) {
	if o == nil || o.LatestAgentVersion == nil {
		return nil, false
	}
	return o.LatestAgentVersion, true
}

// HasLatestAgentVersion returns a boolean if a field has been set.
func (o *InstallerMetaInfoDto) HasLatestAgentVersion() bool {
	if o != nil && o.LatestAgentVersion != nil {
		return true
	}

	return false
}

// SetLatestAgentVersion gets a reference to the given string and assigns it to the LatestAgentVersion field.
func (o *InstallerMetaInfoDto) SetLatestAgentVersion(v string) {
	o.LatestAgentVersion = &v
}

func (o InstallerMetaInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LatestAgentVersion != nil {
		toSerialize["latestAgentVersion"] = o.LatestAgentVersion
	}
	return json.Marshal(toSerialize)
}

type NullableInstallerMetaInfoDto struct {
	value *InstallerMetaInfoDto
	isSet bool
}

func (v NullableInstallerMetaInfoDto) Get() *InstallerMetaInfoDto {
	return v.value
}

func (v *NullableInstallerMetaInfoDto) Set(val *InstallerMetaInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallerMetaInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallerMetaInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallerMetaInfoDto(val *InstallerMetaInfoDto) *NullableInstallerMetaInfoDto {
	return &NullableInstallerMetaInfoDto{value: val, isSet: true}
}

func (v NullableInstallerMetaInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallerMetaInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


