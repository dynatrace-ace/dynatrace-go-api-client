/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// ProcessGroup Parameters of a process group.
type ProcessGroup struct {
	// The Dynatrace entity ID of the required entity.
	EntityId *string `json:"entityId,omitempty"`
	// The name of the Dynatrace entity as displayed in the UI.
	DisplayName *string `json:"displayName,omitempty"`
	// The customized name of the entity
	CustomizedName *string `json:"customizedName,omitempty"`
	// The discovered name of the entity
	DiscoveredName *string `json:"discoveredName,omitempty"`
	// The timestamp of when the entity was first detected, in UTC milliseconds
	FirstSeenTimestamp *int64 `json:"firstSeenTimestamp,omitempty"`
	// The timestamp of when the entity was last detected, in UTC milliseconds
	LastSeenTimestamp *int64 `json:"lastSeenTimestamp,omitempty"`
	// The list of entity tags.
	Tags *[]TagInfo `json:"tags,omitempty"`
	ToRelationships *ProcessGroupToRelationships `json:"toRelationships,omitempty"`
	Metadata *ProcessGroupMetadata `json:"metadata,omitempty"`
	AzureHostName *string `json:"azureHostName,omitempty"`
	SoftwareTechnologies *[]TechnologyInfo `json:"softwareTechnologies,omitempty"`
	ListenPorts *[]int32 `json:"listenPorts,omitempty"`
	AzureSiteName *string `json:"azureSiteName,omitempty"`
	// The management zones that the entity is part of.
	ManagementZones *[]EntityShortRepresentation `json:"managementZones,omitempty"`
	FromRelationships *ProcessGroupFromRelationships `json:"fromRelationships,omitempty"`
}

// NewProcessGroup instantiates a new ProcessGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessGroup() *ProcessGroup {
	this := ProcessGroup{}
	return &this
}

// NewProcessGroupWithDefaults instantiates a new ProcessGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessGroupWithDefaults() *ProcessGroup {
	this := ProcessGroup{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *ProcessGroup) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *ProcessGroup) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *ProcessGroup) SetEntityId(v string) {
	o.EntityId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProcessGroup) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProcessGroup) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProcessGroup) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetCustomizedName returns the CustomizedName field value if set, zero value otherwise.
func (o *ProcessGroup) GetCustomizedName() string {
	if o == nil || o.CustomizedName == nil {
		var ret string
		return ret
	}
	return *o.CustomizedName
}

// GetCustomizedNameOk returns a tuple with the CustomizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetCustomizedNameOk() (*string, bool) {
	if o == nil || o.CustomizedName == nil {
		return nil, false
	}
	return o.CustomizedName, true
}

// HasCustomizedName returns a boolean if a field has been set.
func (o *ProcessGroup) HasCustomizedName() bool {
	if o != nil && o.CustomizedName != nil {
		return true
	}

	return false
}

// SetCustomizedName gets a reference to the given string and assigns it to the CustomizedName field.
func (o *ProcessGroup) SetCustomizedName(v string) {
	o.CustomizedName = &v
}

// GetDiscoveredName returns the DiscoveredName field value if set, zero value otherwise.
func (o *ProcessGroup) GetDiscoveredName() string {
	if o == nil || o.DiscoveredName == nil {
		var ret string
		return ret
	}
	return *o.DiscoveredName
}

// GetDiscoveredNameOk returns a tuple with the DiscoveredName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetDiscoveredNameOk() (*string, bool) {
	if o == nil || o.DiscoveredName == nil {
		return nil, false
	}
	return o.DiscoveredName, true
}

// HasDiscoveredName returns a boolean if a field has been set.
func (o *ProcessGroup) HasDiscoveredName() bool {
	if o != nil && o.DiscoveredName != nil {
		return true
	}

	return false
}

// SetDiscoveredName gets a reference to the given string and assigns it to the DiscoveredName field.
func (o *ProcessGroup) SetDiscoveredName(v string) {
	o.DiscoveredName = &v
}

// GetFirstSeenTimestamp returns the FirstSeenTimestamp field value if set, zero value otherwise.
func (o *ProcessGroup) GetFirstSeenTimestamp() int64 {
	if o == nil || o.FirstSeenTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.FirstSeenTimestamp
}

// GetFirstSeenTimestampOk returns a tuple with the FirstSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetFirstSeenTimestampOk() (*int64, bool) {
	if o == nil || o.FirstSeenTimestamp == nil {
		return nil, false
	}
	return o.FirstSeenTimestamp, true
}

// HasFirstSeenTimestamp returns a boolean if a field has been set.
func (o *ProcessGroup) HasFirstSeenTimestamp() bool {
	if o != nil && o.FirstSeenTimestamp != nil {
		return true
	}

	return false
}

// SetFirstSeenTimestamp gets a reference to the given int64 and assigns it to the FirstSeenTimestamp field.
func (o *ProcessGroup) SetFirstSeenTimestamp(v int64) {
	o.FirstSeenTimestamp = &v
}

// GetLastSeenTimestamp returns the LastSeenTimestamp field value if set, zero value otherwise.
func (o *ProcessGroup) GetLastSeenTimestamp() int64 {
	if o == nil || o.LastSeenTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastSeenTimestamp
}

// GetLastSeenTimestampOk returns a tuple with the LastSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetLastSeenTimestampOk() (*int64, bool) {
	if o == nil || o.LastSeenTimestamp == nil {
		return nil, false
	}
	return o.LastSeenTimestamp, true
}

// HasLastSeenTimestamp returns a boolean if a field has been set.
func (o *ProcessGroup) HasLastSeenTimestamp() bool {
	if o != nil && o.LastSeenTimestamp != nil {
		return true
	}

	return false
}

// SetLastSeenTimestamp gets a reference to the given int64 and assigns it to the LastSeenTimestamp field.
func (o *ProcessGroup) SetLastSeenTimestamp(v int64) {
	o.LastSeenTimestamp = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProcessGroup) GetTags() []TagInfo {
	if o == nil || o.Tags == nil {
		var ret []TagInfo
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetTagsOk() (*[]TagInfo, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProcessGroup) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagInfo and assigns it to the Tags field.
func (o *ProcessGroup) SetTags(v []TagInfo) {
	o.Tags = &v
}

// GetToRelationships returns the ToRelationships field value if set, zero value otherwise.
func (o *ProcessGroup) GetToRelationships() ProcessGroupToRelationships {
	if o == nil || o.ToRelationships == nil {
		var ret ProcessGroupToRelationships
		return ret
	}
	return *o.ToRelationships
}

// GetToRelationshipsOk returns a tuple with the ToRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetToRelationshipsOk() (*ProcessGroupToRelationships, bool) {
	if o == nil || o.ToRelationships == nil {
		return nil, false
	}
	return o.ToRelationships, true
}

// HasToRelationships returns a boolean if a field has been set.
func (o *ProcessGroup) HasToRelationships() bool {
	if o != nil && o.ToRelationships != nil {
		return true
	}

	return false
}

// SetToRelationships gets a reference to the given ProcessGroupToRelationships and assigns it to the ToRelationships field.
func (o *ProcessGroup) SetToRelationships(v ProcessGroupToRelationships) {
	o.ToRelationships = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ProcessGroup) GetMetadata() ProcessGroupMetadata {
	if o == nil || o.Metadata == nil {
		var ret ProcessGroupMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetMetadataOk() (*ProcessGroupMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ProcessGroup) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ProcessGroupMetadata and assigns it to the Metadata field.
func (o *ProcessGroup) SetMetadata(v ProcessGroupMetadata) {
	o.Metadata = &v
}

// GetAzureHostName returns the AzureHostName field value if set, zero value otherwise.
func (o *ProcessGroup) GetAzureHostName() string {
	if o == nil || o.AzureHostName == nil {
		var ret string
		return ret
	}
	return *o.AzureHostName
}

// GetAzureHostNameOk returns a tuple with the AzureHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetAzureHostNameOk() (*string, bool) {
	if o == nil || o.AzureHostName == nil {
		return nil, false
	}
	return o.AzureHostName, true
}

// HasAzureHostName returns a boolean if a field has been set.
func (o *ProcessGroup) HasAzureHostName() bool {
	if o != nil && o.AzureHostName != nil {
		return true
	}

	return false
}

// SetAzureHostName gets a reference to the given string and assigns it to the AzureHostName field.
func (o *ProcessGroup) SetAzureHostName(v string) {
	o.AzureHostName = &v
}

// GetSoftwareTechnologies returns the SoftwareTechnologies field value if set, zero value otherwise.
func (o *ProcessGroup) GetSoftwareTechnologies() []TechnologyInfo {
	if o == nil || o.SoftwareTechnologies == nil {
		var ret []TechnologyInfo
		return ret
	}
	return *o.SoftwareTechnologies
}

// GetSoftwareTechnologiesOk returns a tuple with the SoftwareTechnologies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetSoftwareTechnologiesOk() (*[]TechnologyInfo, bool) {
	if o == nil || o.SoftwareTechnologies == nil {
		return nil, false
	}
	return o.SoftwareTechnologies, true
}

// HasSoftwareTechnologies returns a boolean if a field has been set.
func (o *ProcessGroup) HasSoftwareTechnologies() bool {
	if o != nil && o.SoftwareTechnologies != nil {
		return true
	}

	return false
}

// SetSoftwareTechnologies gets a reference to the given []TechnologyInfo and assigns it to the SoftwareTechnologies field.
func (o *ProcessGroup) SetSoftwareTechnologies(v []TechnologyInfo) {
	o.SoftwareTechnologies = &v
}

// GetListenPorts returns the ListenPorts field value if set, zero value otherwise.
func (o *ProcessGroup) GetListenPorts() []int32 {
	if o == nil || o.ListenPorts == nil {
		var ret []int32
		return ret
	}
	return *o.ListenPorts
}

// GetListenPortsOk returns a tuple with the ListenPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetListenPortsOk() (*[]int32, bool) {
	if o == nil || o.ListenPorts == nil {
		return nil, false
	}
	return o.ListenPorts, true
}

// HasListenPorts returns a boolean if a field has been set.
func (o *ProcessGroup) HasListenPorts() bool {
	if o != nil && o.ListenPorts != nil {
		return true
	}

	return false
}

// SetListenPorts gets a reference to the given []int32 and assigns it to the ListenPorts field.
func (o *ProcessGroup) SetListenPorts(v []int32) {
	o.ListenPorts = &v
}

// GetAzureSiteName returns the AzureSiteName field value if set, zero value otherwise.
func (o *ProcessGroup) GetAzureSiteName() string {
	if o == nil || o.AzureSiteName == nil {
		var ret string
		return ret
	}
	return *o.AzureSiteName
}

// GetAzureSiteNameOk returns a tuple with the AzureSiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetAzureSiteNameOk() (*string, bool) {
	if o == nil || o.AzureSiteName == nil {
		return nil, false
	}
	return o.AzureSiteName, true
}

// HasAzureSiteName returns a boolean if a field has been set.
func (o *ProcessGroup) HasAzureSiteName() bool {
	if o != nil && o.AzureSiteName != nil {
		return true
	}

	return false
}

// SetAzureSiteName gets a reference to the given string and assigns it to the AzureSiteName field.
func (o *ProcessGroup) SetAzureSiteName(v string) {
	o.AzureSiteName = &v
}

// GetManagementZones returns the ManagementZones field value if set, zero value otherwise.
func (o *ProcessGroup) GetManagementZones() []EntityShortRepresentation {
	if o == nil || o.ManagementZones == nil {
		var ret []EntityShortRepresentation
		return ret
	}
	return *o.ManagementZones
}

// GetManagementZonesOk returns a tuple with the ManagementZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetManagementZonesOk() (*[]EntityShortRepresentation, bool) {
	if o == nil || o.ManagementZones == nil {
		return nil, false
	}
	return o.ManagementZones, true
}

// HasManagementZones returns a boolean if a field has been set.
func (o *ProcessGroup) HasManagementZones() bool {
	if o != nil && o.ManagementZones != nil {
		return true
	}

	return false
}

// SetManagementZones gets a reference to the given []EntityShortRepresentation and assigns it to the ManagementZones field.
func (o *ProcessGroup) SetManagementZones(v []EntityShortRepresentation) {
	o.ManagementZones = &v
}

// GetFromRelationships returns the FromRelationships field value if set, zero value otherwise.
func (o *ProcessGroup) GetFromRelationships() ProcessGroupFromRelationships {
	if o == nil || o.FromRelationships == nil {
		var ret ProcessGroupFromRelationships
		return ret
	}
	return *o.FromRelationships
}

// GetFromRelationshipsOk returns a tuple with the FromRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroup) GetFromRelationshipsOk() (*ProcessGroupFromRelationships, bool) {
	if o == nil || o.FromRelationships == nil {
		return nil, false
	}
	return o.FromRelationships, true
}

// HasFromRelationships returns a boolean if a field has been set.
func (o *ProcessGroup) HasFromRelationships() bool {
	if o != nil && o.FromRelationships != nil {
		return true
	}

	return false
}

// SetFromRelationships gets a reference to the given ProcessGroupFromRelationships and assigns it to the FromRelationships field.
func (o *ProcessGroup) SetFromRelationships(v ProcessGroupFromRelationships) {
	o.FromRelationships = &v
}

func (o ProcessGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityId != nil {
		toSerialize["entityId"] = o.EntityId
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.CustomizedName != nil {
		toSerialize["customizedName"] = o.CustomizedName
	}
	if o.DiscoveredName != nil {
		toSerialize["discoveredName"] = o.DiscoveredName
	}
	if o.FirstSeenTimestamp != nil {
		toSerialize["firstSeenTimestamp"] = o.FirstSeenTimestamp
	}
	if o.LastSeenTimestamp != nil {
		toSerialize["lastSeenTimestamp"] = o.LastSeenTimestamp
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.ToRelationships != nil {
		toSerialize["toRelationships"] = o.ToRelationships
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.AzureHostName != nil {
		toSerialize["azureHostName"] = o.AzureHostName
	}
	if o.SoftwareTechnologies != nil {
		toSerialize["softwareTechnologies"] = o.SoftwareTechnologies
	}
	if o.ListenPorts != nil {
		toSerialize["listenPorts"] = o.ListenPorts
	}
	if o.AzureSiteName != nil {
		toSerialize["azureSiteName"] = o.AzureSiteName
	}
	if o.ManagementZones != nil {
		toSerialize["managementZones"] = o.ManagementZones
	}
	if o.FromRelationships != nil {
		toSerialize["fromRelationships"] = o.FromRelationships
	}
	return json.Marshal(toSerialize)
}

type NullableProcessGroup struct {
	value *ProcessGroup
	isSet bool
}

func (v NullableProcessGroup) Get() *ProcessGroup {
	return v.value
}

func (v *NullableProcessGroup) Set(val *ProcessGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessGroup(val *ProcessGroup) *NullableProcessGroup {
	return &NullableProcessGroup{value: val, isSet: true}
}

func (v NullableProcessGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


