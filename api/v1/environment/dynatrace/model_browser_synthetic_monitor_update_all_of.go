/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// BrowserSyntheticMonitorUpdateAllOf struct for BrowserSyntheticMonitorUpdateAllOf
type BrowserSyntheticMonitorUpdateAllOf struct {
	KeyPerformanceMetrics *KeyPerformanceMetrics `json:"keyPerformanceMetrics,omitempty"`
}

// NewBrowserSyntheticMonitorUpdateAllOf instantiates a new BrowserSyntheticMonitorUpdateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrowserSyntheticMonitorUpdateAllOf() *BrowserSyntheticMonitorUpdateAllOf {
	this := BrowserSyntheticMonitorUpdateAllOf{}
	return &this
}

// NewBrowserSyntheticMonitorUpdateAllOfWithDefaults instantiates a new BrowserSyntheticMonitorUpdateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrowserSyntheticMonitorUpdateAllOfWithDefaults() *BrowserSyntheticMonitorUpdateAllOf {
	this := BrowserSyntheticMonitorUpdateAllOf{}
	return &this
}

// GetKeyPerformanceMetrics returns the KeyPerformanceMetrics field value if set, zero value otherwise.
func (o *BrowserSyntheticMonitorUpdateAllOf) GetKeyPerformanceMetrics() KeyPerformanceMetrics {
	if o == nil || o.KeyPerformanceMetrics == nil {
		var ret KeyPerformanceMetrics
		return ret
	}
	return *o.KeyPerformanceMetrics
}

// GetKeyPerformanceMetricsOk returns a tuple with the KeyPerformanceMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserSyntheticMonitorUpdateAllOf) GetKeyPerformanceMetricsOk() (*KeyPerformanceMetrics, bool) {
	if o == nil || o.KeyPerformanceMetrics == nil {
		return nil, false
	}
	return o.KeyPerformanceMetrics, true
}

// HasKeyPerformanceMetrics returns a boolean if a field has been set.
func (o *BrowserSyntheticMonitorUpdateAllOf) HasKeyPerformanceMetrics() bool {
	if o != nil && o.KeyPerformanceMetrics != nil {
		return true
	}

	return false
}

// SetKeyPerformanceMetrics gets a reference to the given KeyPerformanceMetrics and assigns it to the KeyPerformanceMetrics field.
func (o *BrowserSyntheticMonitorUpdateAllOf) SetKeyPerformanceMetrics(v KeyPerformanceMetrics) {
	o.KeyPerformanceMetrics = &v
}

func (o BrowserSyntheticMonitorUpdateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyPerformanceMetrics != nil {
		toSerialize["keyPerformanceMetrics"] = o.KeyPerformanceMetrics
	}
	return json.Marshal(toSerialize)
}

type NullableBrowserSyntheticMonitorUpdateAllOf struct {
	value *BrowserSyntheticMonitorUpdateAllOf
	isSet bool
}

func (v NullableBrowserSyntheticMonitorUpdateAllOf) Get() *BrowserSyntheticMonitorUpdateAllOf {
	return v.value
}

func (v *NullableBrowserSyntheticMonitorUpdateAllOf) Set(val *BrowserSyntheticMonitorUpdateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBrowserSyntheticMonitorUpdateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBrowserSyntheticMonitorUpdateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrowserSyntheticMonitorUpdateAllOf(val *BrowserSyntheticMonitorUpdateAllOf) *NullableBrowserSyntheticMonitorUpdateAllOf {
	return &NullableBrowserSyntheticMonitorUpdateAllOf{value: val, isSet: true}
}

func (v NullableBrowserSyntheticMonitorUpdateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrowserSyntheticMonitorUpdateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


