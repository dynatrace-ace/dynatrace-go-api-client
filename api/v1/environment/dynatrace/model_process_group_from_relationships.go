/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// ProcessGroupFromRelationships struct for ProcessGroupFromRelationships
type ProcessGroupFromRelationships struct {
	IsNetworkClientOfProcessGroup *[]string `json:"isNetworkClientOfProcessGroup,omitempty"`
	RunsOn *[]string `json:"runsOn,omitempty"`
}

// NewProcessGroupFromRelationships instantiates a new ProcessGroupFromRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessGroupFromRelationships() *ProcessGroupFromRelationships {
	this := ProcessGroupFromRelationships{}
	return &this
}

// NewProcessGroupFromRelationshipsWithDefaults instantiates a new ProcessGroupFromRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessGroupFromRelationshipsWithDefaults() *ProcessGroupFromRelationships {
	this := ProcessGroupFromRelationships{}
	return &this
}

// GetIsNetworkClientOfProcessGroup returns the IsNetworkClientOfProcessGroup field value if set, zero value otherwise.
func (o *ProcessGroupFromRelationships) GetIsNetworkClientOfProcessGroup() []string {
	if o == nil || o.IsNetworkClientOfProcessGroup == nil {
		var ret []string
		return ret
	}
	return *o.IsNetworkClientOfProcessGroup
}

// GetIsNetworkClientOfProcessGroupOk returns a tuple with the IsNetworkClientOfProcessGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupFromRelationships) GetIsNetworkClientOfProcessGroupOk() (*[]string, bool) {
	if o == nil || o.IsNetworkClientOfProcessGroup == nil {
		return nil, false
	}
	return o.IsNetworkClientOfProcessGroup, true
}

// HasIsNetworkClientOfProcessGroup returns a boolean if a field has been set.
func (o *ProcessGroupFromRelationships) HasIsNetworkClientOfProcessGroup() bool {
	if o != nil && o.IsNetworkClientOfProcessGroup != nil {
		return true
	}

	return false
}

// SetIsNetworkClientOfProcessGroup gets a reference to the given []string and assigns it to the IsNetworkClientOfProcessGroup field.
func (o *ProcessGroupFromRelationships) SetIsNetworkClientOfProcessGroup(v []string) {
	o.IsNetworkClientOfProcessGroup = &v
}

// GetRunsOn returns the RunsOn field value if set, zero value otherwise.
func (o *ProcessGroupFromRelationships) GetRunsOn() []string {
	if o == nil || o.RunsOn == nil {
		var ret []string
		return ret
	}
	return *o.RunsOn
}

// GetRunsOnOk returns a tuple with the RunsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupFromRelationships) GetRunsOnOk() (*[]string, bool) {
	if o == nil || o.RunsOn == nil {
		return nil, false
	}
	return o.RunsOn, true
}

// HasRunsOn returns a boolean if a field has been set.
func (o *ProcessGroupFromRelationships) HasRunsOn() bool {
	if o != nil && o.RunsOn != nil {
		return true
	}

	return false
}

// SetRunsOn gets a reference to the given []string and assigns it to the RunsOn field.
func (o *ProcessGroupFromRelationships) SetRunsOn(v []string) {
	o.RunsOn = &v
}

func (o ProcessGroupFromRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsNetworkClientOfProcessGroup != nil {
		toSerialize["isNetworkClientOfProcessGroup"] = o.IsNetworkClientOfProcessGroup
	}
	if o.RunsOn != nil {
		toSerialize["runsOn"] = o.RunsOn
	}
	return json.Marshal(toSerialize)
}

type NullableProcessGroupFromRelationships struct {
	value *ProcessGroupFromRelationships
	isSet bool
}

func (v NullableProcessGroupFromRelationships) Get() *ProcessGroupFromRelationships {
	return v.value
}

func (v *NullableProcessGroupFromRelationships) Set(val *ProcessGroupFromRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessGroupFromRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessGroupFromRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessGroupFromRelationships(val *ProcessGroupFromRelationships) *NullableProcessGroupFromRelationships {
	return &NullableProcessGroupFromRelationships{value: val, isSet: true}
}

func (v NullableProcessGroupFromRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessGroupFromRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


