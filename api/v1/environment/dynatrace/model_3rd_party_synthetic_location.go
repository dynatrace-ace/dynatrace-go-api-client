/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// Model3rdPartySyntheticLocation The third-party Synthetic location.
type Model3rdPartySyntheticLocation struct {
	// The ID of the location.
	Id string `json:"id"`
	// The name of the location, displayed in the UI.
	Name string `json:"name"`
	// The IP address of the location.
	Ip *string `json:"ip,omitempty"`
}

// NewModel3rdPartySyntheticLocation instantiates a new Model3rdPartySyntheticLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel3rdPartySyntheticLocation(id string, name string) *Model3rdPartySyntheticLocation {
	this := Model3rdPartySyntheticLocation{}
	this.Id = id
	this.Name = name
	return &this
}

// NewModel3rdPartySyntheticLocationWithDefaults instantiates a new Model3rdPartySyntheticLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModel3rdPartySyntheticLocationWithDefaults() *Model3rdPartySyntheticLocation {
	this := Model3rdPartySyntheticLocation{}
	return &this
}

// GetId returns the Id field value
func (o *Model3rdPartySyntheticLocation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Model3rdPartySyntheticLocation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Model3rdPartySyntheticLocation) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Model3rdPartySyntheticLocation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Model3rdPartySyntheticLocation) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Model3rdPartySyntheticLocation) SetName(v string) {
	o.Name = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *Model3rdPartySyntheticLocation) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model3rdPartySyntheticLocation) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *Model3rdPartySyntheticLocation) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *Model3rdPartySyntheticLocation) SetIp(v string) {
	o.Ip = &v
}

func (o Model3rdPartySyntheticLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableModel3rdPartySyntheticLocation struct {
	value *Model3rdPartySyntheticLocation
	isSet bool
}

func (v NullableModel3rdPartySyntheticLocation) Get() *Model3rdPartySyntheticLocation {
	return v.value
}

func (v *NullableModel3rdPartySyntheticLocation) Set(val *Model3rdPartySyntheticLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableModel3rdPartySyntheticLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableModel3rdPartySyntheticLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel3rdPartySyntheticLocation(val *Model3rdPartySyntheticLocation) *NullableModel3rdPartySyntheticLocation {
	return &NullableModel3rdPartySyntheticLocation{value: val, isSet: true}
}

func (v NullableModel3rdPartySyntheticLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel3rdPartySyntheticLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


