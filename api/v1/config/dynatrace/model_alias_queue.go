/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// AliasQueue Define an alias for a so called base queue. This can either be a local queue owned by this queue manager, a local definition of a remote queue or a cluster queue visible but owned by another queue manager. The alias can be made visible in one or more clusters.
type AliasQueue struct {
	// The name of the alias queue.
	AliasQueue string `json:"aliasQueue"`
	// The name of the base queue, which the alias queue should point to.
	BaseQueue string `json:"baseQueue"`
	// The alias queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm). The queue manager must be part of these clusters.
	ClusterVisibility []string `json:"clusterVisibility"`
}

// NewAliasQueue instantiates a new AliasQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAliasQueue(aliasQueue string, baseQueue string, clusterVisibility []string, ) *AliasQueue {
	this := AliasQueue{}
	this.AliasQueue = aliasQueue
	this.BaseQueue = baseQueue
	this.ClusterVisibility = clusterVisibility
	return &this
}

// NewAliasQueueWithDefaults instantiates a new AliasQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliasQueueWithDefaults() *AliasQueue {
	this := AliasQueue{}
	return &this
}

// GetAliasQueue returns the AliasQueue field value
func (o *AliasQueue) GetAliasQueue() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AliasQueue
}

// GetAliasQueueOk returns a tuple with the AliasQueue field value
// and a boolean to check if the value has been set.
func (o *AliasQueue) GetAliasQueueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AliasQueue, true
}

// SetAliasQueue sets field value
func (o *AliasQueue) SetAliasQueue(v string) {
	o.AliasQueue = v
}

// GetBaseQueue returns the BaseQueue field value
func (o *AliasQueue) GetBaseQueue() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BaseQueue
}

// GetBaseQueueOk returns a tuple with the BaseQueue field value
// and a boolean to check if the value has been set.
func (o *AliasQueue) GetBaseQueueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseQueue, true
}

// SetBaseQueue sets field value
func (o *AliasQueue) SetBaseQueue(v string) {
	o.BaseQueue = v
}

// GetClusterVisibility returns the ClusterVisibility field value
func (o *AliasQueue) GetClusterVisibility() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.ClusterVisibility
}

// GetClusterVisibilityOk returns a tuple with the ClusterVisibility field value
// and a boolean to check if the value has been set.
func (o *AliasQueue) GetClusterVisibilityOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterVisibility, true
}

// SetClusterVisibility sets field value
func (o *AliasQueue) SetClusterVisibility(v []string) {
	o.ClusterVisibility = v
}

func (o AliasQueue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aliasQueue"] = o.AliasQueue
	}
	if true {
		toSerialize["baseQueue"] = o.BaseQueue
	}
	if true {
		toSerialize["clusterVisibility"] = o.ClusterVisibility
	}
	return json.Marshal(toSerialize)
}

type NullableAliasQueue struct {
	value *AliasQueue
	isSet bool
}

func (v NullableAliasQueue) Get() *AliasQueue {
	return v.value
}

func (v *NullableAliasQueue) Set(val *AliasQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableAliasQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableAliasQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAliasQueue(val *AliasQueue) *NullableAliasQueue {
	return &NullableAliasQueue{value: val, isSet: true}
}

func (v NullableAliasQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAliasQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


