/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// PagerDutyNotificationConfigAllOf struct for PagerDutyNotificationConfigAllOf
type PagerDutyNotificationConfigAllOf struct {
	// The name of the PagerDuty account.
	Account *string `json:"account,omitempty"`
	// The API key to access PagerDuty.
	ServiceApiKey *string `json:"serviceApiKey,omitempty"`
	// The name of the service.
	ServiceName *string `json:"serviceName,omitempty"`
}

// NewPagerDutyNotificationConfigAllOf instantiates a new PagerDutyNotificationConfigAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerDutyNotificationConfigAllOf() *PagerDutyNotificationConfigAllOf {
	this := PagerDutyNotificationConfigAllOf{}
	return &this
}

// NewPagerDutyNotificationConfigAllOfWithDefaults instantiates a new PagerDutyNotificationConfigAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerDutyNotificationConfigAllOfWithDefaults() *PagerDutyNotificationConfigAllOf {
	this := PagerDutyNotificationConfigAllOf{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *PagerDutyNotificationConfigAllOf) GetAccount() string {
	if o == nil || o.Account == nil {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfigAllOf) GetAccountOk() (*string, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *PagerDutyNotificationConfigAllOf) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *PagerDutyNotificationConfigAllOf) SetAccount(v string) {
	o.Account = &v
}

// GetServiceApiKey returns the ServiceApiKey field value if set, zero value otherwise.
func (o *PagerDutyNotificationConfigAllOf) GetServiceApiKey() string {
	if o == nil || o.ServiceApiKey == nil {
		var ret string
		return ret
	}
	return *o.ServiceApiKey
}

// GetServiceApiKeyOk returns a tuple with the ServiceApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfigAllOf) GetServiceApiKeyOk() (*string, bool) {
	if o == nil || o.ServiceApiKey == nil {
		return nil, false
	}
	return o.ServiceApiKey, true
}

// HasServiceApiKey returns a boolean if a field has been set.
func (o *PagerDutyNotificationConfigAllOf) HasServiceApiKey() bool {
	if o != nil && o.ServiceApiKey != nil {
		return true
	}

	return false
}

// SetServiceApiKey gets a reference to the given string and assigns it to the ServiceApiKey field.
func (o *PagerDutyNotificationConfigAllOf) SetServiceApiKey(v string) {
	o.ServiceApiKey = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *PagerDutyNotificationConfigAllOf) GetServiceName() string {
	if o == nil || o.ServiceName == nil {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfigAllOf) GetServiceNameOk() (*string, bool) {
	if o == nil || o.ServiceName == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *PagerDutyNotificationConfigAllOf) HasServiceName() bool {
	if o != nil && o.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *PagerDutyNotificationConfigAllOf) SetServiceName(v string) {
	o.ServiceName = &v
}

func (o PagerDutyNotificationConfigAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.ServiceApiKey != nil {
		toSerialize["serviceApiKey"] = o.ServiceApiKey
	}
	if o.ServiceName != nil {
		toSerialize["serviceName"] = o.ServiceName
	}
	return json.Marshal(toSerialize)
}

type NullablePagerDutyNotificationConfigAllOf struct {
	value *PagerDutyNotificationConfigAllOf
	isSet bool
}

func (v NullablePagerDutyNotificationConfigAllOf) Get() *PagerDutyNotificationConfigAllOf {
	return v.value
}

func (v *NullablePagerDutyNotificationConfigAllOf) Set(val *PagerDutyNotificationConfigAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerDutyNotificationConfigAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerDutyNotificationConfigAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerDutyNotificationConfigAllOf(val *PagerDutyNotificationConfigAllOf) *NullablePagerDutyNotificationConfigAllOf {
	return &NullablePagerDutyNotificationConfigAllOf{value: val, isSet: true}
}

func (v NullablePagerDutyNotificationConfigAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerDutyNotificationConfigAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


