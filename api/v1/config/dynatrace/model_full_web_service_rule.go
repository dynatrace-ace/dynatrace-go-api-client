/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dynatrace
// FullWebServiceRule The service detection rule of the `FULL_WEB_SERVICE` type.   If you have a condition with the **attributeType** set to `FRAMEWORK`, the **values** field from **compareOperations** is limited to the following possible values: * `AXIS`   * `CXF`   * `HESSIAN`   * `JAX_WS_RI`   * `JBOSS`   * `JERSEY`   * `PROGRESS`   * `RESTEASY`   * `RESTLET`   * `SPRING`   * `TIBCO`   * `WEBLOGIC`   * `WEBMETHODS`   * `WEBSPHERE`   * `WINK`
type FullWebServiceRule struct {
	Type string `json:"type,omitempty"`
	Metadata ConfigurationMetadata `json:"metadata,omitempty"`
	// Specifies the management zones of the process group for which this service detection rule should be created.
	ManagementZones []string `json:"managementZones,omitempty"`
	// The ID of the service detection rule.
	Id string `json:"id,omitempty"`
	// The order of the rule in the rules list.    The rules are evaluated from top to bottom. The first matching rule applies.
	Order string `json:"order,omitempty"`
	// The name of the rule.
	Name string `json:"name"`
	// A short description of the rule.
	Description string `json:"description,omitempty"`
	// The rule is enabled(`true`) or disabled (`false`).
	Enabled bool `json:"enabled"`
	// A list of conditions of the rule.   If several conditions are specified, the AND logic applies.
	Conditions []ConditionsFullWebServiceAttributeTypeDto `json:"conditions,omitempty"`
	// Detect the matching requests as full web services (`false`) or web request services (`true`).   Setting this field to `true` prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `FULL_WEB_REQUEST` type.   Default is `false`, detecting matching requests as full web services.
	DetectAsWebRequestService bool `json:"detectAsWebRequestService,omitempty"`
	WebServiceName WebServiceName `json:"webServiceName,omitempty"`
	WebServiceNameSpace WebServiceNameSpace `json:"webServiceNameSpace,omitempty"`
	ApplicationId ApplicationId `json:"applicationId,omitempty"`
	ContextRoot ContextRoot `json:"contextRoot,omitempty"`
	ServerName ServerName `json:"serverName,omitempty"`
}
