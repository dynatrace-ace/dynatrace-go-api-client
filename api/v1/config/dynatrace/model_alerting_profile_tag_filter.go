/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// AlertingProfileTagFilter Configuration of the tag filtering of the alerting profile.
type AlertingProfileTagFilter struct {
	// The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities.
	IncludeMode string `json:"includeMode"`
	// A list of required tags.
	TagFilters *[]TagFilter `json:"tagFilters,omitempty"`
}

// NewAlertingProfileTagFilter instantiates a new AlertingProfileTagFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingProfileTagFilter(includeMode string, ) *AlertingProfileTagFilter {
	this := AlertingProfileTagFilter{}
	this.IncludeMode = includeMode
	return &this
}

// NewAlertingProfileTagFilterWithDefaults instantiates a new AlertingProfileTagFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingProfileTagFilterWithDefaults() *AlertingProfileTagFilter {
	this := AlertingProfileTagFilter{}
	return &this
}

// GetIncludeMode returns the IncludeMode field value
func (o *AlertingProfileTagFilter) GetIncludeMode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IncludeMode
}

// GetIncludeModeOk returns a tuple with the IncludeMode field value
// and a boolean to check if the value has been set.
func (o *AlertingProfileTagFilter) GetIncludeModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncludeMode, true
}

// SetIncludeMode sets field value
func (o *AlertingProfileTagFilter) SetIncludeMode(v string) {
	o.IncludeMode = v
}

// GetTagFilters returns the TagFilters field value if set, zero value otherwise.
func (o *AlertingProfileTagFilter) GetTagFilters() []TagFilter {
	if o == nil || o.TagFilters == nil {
		var ret []TagFilter
		return ret
	}
	return *o.TagFilters
}

// GetTagFiltersOk returns a tuple with the TagFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingProfileTagFilter) GetTagFiltersOk() (*[]TagFilter, bool) {
	if o == nil || o.TagFilters == nil {
		return nil, false
	}
	return o.TagFilters, true
}

// HasTagFilters returns a boolean if a field has been set.
func (o *AlertingProfileTagFilter) HasTagFilters() bool {
	if o != nil && o.TagFilters != nil {
		return true
	}

	return false
}

// SetTagFilters gets a reference to the given []TagFilter and assigns it to the TagFilters field.
func (o *AlertingProfileTagFilter) SetTagFilters(v []TagFilter) {
	o.TagFilters = &v
}

func (o AlertingProfileTagFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["includeMode"] = o.IncludeMode
	}
	if o.TagFilters != nil {
		toSerialize["tagFilters"] = o.TagFilters
	}
	return json.Marshal(toSerialize)
}

type NullableAlertingProfileTagFilter struct {
	value *AlertingProfileTagFilter
	isSet bool
}

func (v NullableAlertingProfileTagFilter) Get() *AlertingProfileTagFilter {
	return v.value
}

func (v *NullableAlertingProfileTagFilter) Set(val *AlertingProfileTagFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingProfileTagFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingProfileTagFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingProfileTagFilter(val *AlertingProfileTagFilter) *NullableAlertingProfileTagFilter {
	return &NullableAlertingProfileTagFilter{value: val, isSet: true}
}

func (v NullableAlertingProfileTagFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingProfileTagFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


