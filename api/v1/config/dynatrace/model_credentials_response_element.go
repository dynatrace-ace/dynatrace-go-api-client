/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CredentialsResponseElement Metadata of the credentials set.
type CredentialsResponseElement struct {
	// The name of the credentials set.
	Name string `json:"name"`
	// The ID of the credentials set.
	Id *string `json:"id,omitempty"`
	// The type of the credentials set.
	Type string `json:"type"`
	// A short description of the credentials set.
	Description string `json:"description"`
	// The owner of the credential (user for which used API token was created).
	Owner string `json:"owner"`
	// Flag indicating that this credential is visible only to the owner.
	OwnerAccessOnly bool `json:"ownerAccessOnly"`
}

// NewCredentialsResponseElement instantiates a new CredentialsResponseElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsResponseElement(name string, type_ string, description string, owner string, ownerAccessOnly bool, ) *CredentialsResponseElement {
	this := CredentialsResponseElement{}
	this.Name = name
	this.Type = type_
	this.Description = description
	this.Owner = owner
	this.OwnerAccessOnly = ownerAccessOnly
	return &this
}

// NewCredentialsResponseElementWithDefaults instantiates a new CredentialsResponseElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsResponseElementWithDefaults() *CredentialsResponseElement {
	this := CredentialsResponseElement{}
	return &this
}

// GetName returns the Name field value
func (o *CredentialsResponseElement) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CredentialsResponseElement) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CredentialsResponseElement) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CredentialsResponseElement) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CredentialsResponseElement) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *CredentialsResponseElement) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CredentialsResponseElement) SetType(v string) {
	o.Type = v
}

// GetDescription returns the Description field value
func (o *CredentialsResponseElement) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CredentialsResponseElement) SetDescription(v string) {
	o.Description = v
}

// GetOwner returns the Owner field value
func (o *CredentialsResponseElement) GetOwner() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *CredentialsResponseElement) SetOwner(v string) {
	o.Owner = v
}

// GetOwnerAccessOnly returns the OwnerAccessOnly field value
func (o *CredentialsResponseElement) GetOwnerAccessOnly() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.OwnerAccessOnly
}

// GetOwnerAccessOnlyOk returns a tuple with the OwnerAccessOnly field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponseElement) GetOwnerAccessOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OwnerAccessOnly, true
}

// SetOwnerAccessOnly sets field value
func (o *CredentialsResponseElement) SetOwnerAccessOnly(v bool) {
	o.OwnerAccessOnly = v
}

func (o CredentialsResponseElement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["ownerAccessOnly"] = o.OwnerAccessOnly
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsResponseElement struct {
	value *CredentialsResponseElement
	isSet bool
}

func (v NullableCredentialsResponseElement) Get() *CredentialsResponseElement {
	return v.value
}

func (v *NullableCredentialsResponseElement) Set(val *CredentialsResponseElement) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsResponseElement) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsResponseElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsResponseElement(val *CredentialsResponseElement) *NullableCredentialsResponseElement {
	return &NullableCredentialsResponseElement{value: val, isSet: true}
}

func (v NullableCredentialsResponseElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsResponseElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


