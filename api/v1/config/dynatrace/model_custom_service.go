/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CustomService struct for CustomService
type CustomService struct {
	Metadata *ConfigurationMetadata `json:"metadata,omitempty"`
	// The ID of the custom service.
	Id *string `json:"id,omitempty"`
	// The name of the custom service, displayed in the UI.
	Name string `json:"name"`
	// The order string. Sorting custom services alphabetically by their order string determines their relative ordering.  Typically this is managed by Dynatrace internally and will not be present in GET responses.
	Order *string `json:"order,omitempty"`
	// Custom service enabled/disabled.
	Enabled bool `json:"enabled"`
	// The list of rules defining the custom service.
	Rules []DetectionRule `json:"rules"`
	// The queue entry point flag.   Set to `true` for custom messaging services.
	QueueEntryPoint bool `json:"queueEntryPoint"`
	// The queue entry point type..
	QueueEntryPointType *string `json:"queueEntryPointType,omitempty"`
	// The list of process groups the custom service should belong to.
	ProcessGroups *[]string `json:"processGroups,omitempty"`
}

// NewCustomService instantiates a new CustomService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomService(name string, enabled bool, rules []DetectionRule, queueEntryPoint bool, ) *CustomService {
	this := CustomService{}
	this.Name = name
	this.Enabled = enabled
	this.Rules = rules
	this.QueueEntryPoint = queueEntryPoint
	return &this
}

// NewCustomServiceWithDefaults instantiates a new CustomService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomServiceWithDefaults() *CustomService {
	this := CustomService{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CustomService) GetMetadata() ConfigurationMetadata {
	if o == nil || o.Metadata == nil {
		var ret ConfigurationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomService) GetMetadataOk() (*ConfigurationMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CustomService) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConfigurationMetadata and assigns it to the Metadata field.
func (o *CustomService) SetMetadata(v ConfigurationMetadata) {
	o.Metadata = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomService) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomService) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomService) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomService) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CustomService) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomService) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomService) SetName(v string) {
	o.Name = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *CustomService) GetOrder() string {
	if o == nil || o.Order == nil {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomService) GetOrderOk() (*string, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *CustomService) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *CustomService) SetOrder(v string) {
	o.Order = &v
}

// GetEnabled returns the Enabled field value
func (o *CustomService) GetEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CustomService) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CustomService) SetEnabled(v bool) {
	o.Enabled = v
}

// GetRules returns the Rules field value
func (o *CustomService) GetRules() []DetectionRule {
	if o == nil  {
		var ret []DetectionRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *CustomService) GetRulesOk() (*[]DetectionRule, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *CustomService) SetRules(v []DetectionRule) {
	o.Rules = v
}

// GetQueueEntryPoint returns the QueueEntryPoint field value
func (o *CustomService) GetQueueEntryPoint() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.QueueEntryPoint
}

// GetQueueEntryPointOk returns a tuple with the QueueEntryPoint field value
// and a boolean to check if the value has been set.
func (o *CustomService) GetQueueEntryPointOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.QueueEntryPoint, true
}

// SetQueueEntryPoint sets field value
func (o *CustomService) SetQueueEntryPoint(v bool) {
	o.QueueEntryPoint = v
}

// GetQueueEntryPointType returns the QueueEntryPointType field value if set, zero value otherwise.
func (o *CustomService) GetQueueEntryPointType() string {
	if o == nil || o.QueueEntryPointType == nil {
		var ret string
		return ret
	}
	return *o.QueueEntryPointType
}

// GetQueueEntryPointTypeOk returns a tuple with the QueueEntryPointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomService) GetQueueEntryPointTypeOk() (*string, bool) {
	if o == nil || o.QueueEntryPointType == nil {
		return nil, false
	}
	return o.QueueEntryPointType, true
}

// HasQueueEntryPointType returns a boolean if a field has been set.
func (o *CustomService) HasQueueEntryPointType() bool {
	if o != nil && o.QueueEntryPointType != nil {
		return true
	}

	return false
}

// SetQueueEntryPointType gets a reference to the given string and assigns it to the QueueEntryPointType field.
func (o *CustomService) SetQueueEntryPointType(v string) {
	o.QueueEntryPointType = &v
}

// GetProcessGroups returns the ProcessGroups field value if set, zero value otherwise.
func (o *CustomService) GetProcessGroups() []string {
	if o == nil || o.ProcessGroups == nil {
		var ret []string
		return ret
	}
	return *o.ProcessGroups
}

// GetProcessGroupsOk returns a tuple with the ProcessGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomService) GetProcessGroupsOk() (*[]string, bool) {
	if o == nil || o.ProcessGroups == nil {
		return nil, false
	}
	return o.ProcessGroups, true
}

// HasProcessGroups returns a boolean if a field has been set.
func (o *CustomService) HasProcessGroups() bool {
	if o != nil && o.ProcessGroups != nil {
		return true
	}

	return false
}

// SetProcessGroups gets a reference to the given []string and assigns it to the ProcessGroups field.
func (o *CustomService) SetProcessGroups(v []string) {
	o.ProcessGroups = &v
}

func (o CustomService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["rules"] = o.Rules
	}
	if true {
		toSerialize["queueEntryPoint"] = o.QueueEntryPoint
	}
	if o.QueueEntryPointType != nil {
		toSerialize["queueEntryPointType"] = o.QueueEntryPointType
	}
	if o.ProcessGroups != nil {
		toSerialize["processGroups"] = o.ProcessGroups
	}
	return json.Marshal(toSerialize)
}

type NullableCustomService struct {
	value *CustomService
	isSet bool
}

func (v NullableCustomService) Get() *CustomService {
	return v.value
}

func (v *NullableCustomService) Set(val *CustomService) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomService) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomService(val *CustomService) *NullableCustomService {
	return &NullableCustomService{value: val, isSet: true}
}

func (v NullableCustomService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


