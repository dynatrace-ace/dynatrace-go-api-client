/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// DiskSlowWritesAndReadsDetectionConfig Configuration of slow running disks detection.
type DiskSlowWritesAndReadsDetectionConfig struct {
	// The detection is enabled (`true`) or disabled (`false`).
	Enabled bool `json:"enabled"`
	CustomThresholds *DiskSlowWriteAndReadsThresholds `json:"customThresholds,omitempty"`
}

// NewDiskSlowWritesAndReadsDetectionConfig instantiates a new DiskSlowWritesAndReadsDetectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskSlowWritesAndReadsDetectionConfig(enabled bool, ) *DiskSlowWritesAndReadsDetectionConfig {
	this := DiskSlowWritesAndReadsDetectionConfig{}
	this.Enabled = enabled
	return &this
}

// NewDiskSlowWritesAndReadsDetectionConfigWithDefaults instantiates a new DiskSlowWritesAndReadsDetectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskSlowWritesAndReadsDetectionConfigWithDefaults() *DiskSlowWritesAndReadsDetectionConfig {
	this := DiskSlowWritesAndReadsDetectionConfig{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *DiskSlowWritesAndReadsDetectionConfig) GetEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *DiskSlowWritesAndReadsDetectionConfig) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *DiskSlowWritesAndReadsDetectionConfig) SetEnabled(v bool) {
	o.Enabled = v
}

// GetCustomThresholds returns the CustomThresholds field value if set, zero value otherwise.
func (o *DiskSlowWritesAndReadsDetectionConfig) GetCustomThresholds() DiskSlowWriteAndReadsThresholds {
	if o == nil || o.CustomThresholds == nil {
		var ret DiskSlowWriteAndReadsThresholds
		return ret
	}
	return *o.CustomThresholds
}

// GetCustomThresholdsOk returns a tuple with the CustomThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSlowWritesAndReadsDetectionConfig) GetCustomThresholdsOk() (*DiskSlowWriteAndReadsThresholds, bool) {
	if o == nil || o.CustomThresholds == nil {
		return nil, false
	}
	return o.CustomThresholds, true
}

// HasCustomThresholds returns a boolean if a field has been set.
func (o *DiskSlowWritesAndReadsDetectionConfig) HasCustomThresholds() bool {
	if o != nil && o.CustomThresholds != nil {
		return true
	}

	return false
}

// SetCustomThresholds gets a reference to the given DiskSlowWriteAndReadsThresholds and assigns it to the CustomThresholds field.
func (o *DiskSlowWritesAndReadsDetectionConfig) SetCustomThresholds(v DiskSlowWriteAndReadsThresholds) {
	o.CustomThresholds = &v
}

func (o DiskSlowWritesAndReadsDetectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if o.CustomThresholds != nil {
		toSerialize["customThresholds"] = o.CustomThresholds
	}
	return json.Marshal(toSerialize)
}

type NullableDiskSlowWritesAndReadsDetectionConfig struct {
	value *DiskSlowWritesAndReadsDetectionConfig
	isSet bool
}

func (v NullableDiskSlowWritesAndReadsDetectionConfig) Get() *DiskSlowWritesAndReadsDetectionConfig {
	return v.value
}

func (v *NullableDiskSlowWritesAndReadsDetectionConfig) Set(val *DiskSlowWritesAndReadsDetectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskSlowWritesAndReadsDetectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskSlowWritesAndReadsDetectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskSlowWritesAndReadsDetectionConfig(val *DiskSlowWritesAndReadsDetectionConfig) *NullableDiskSlowWritesAndReadsDetectionConfig {
	return &NullableDiskSlowWritesAndReadsDetectionConfig{value: val, isSet: true}
}

func (v NullableDiskSlowWritesAndReadsDetectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskSlowWritesAndReadsDetectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


