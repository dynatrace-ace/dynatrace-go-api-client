/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// RemoveCreditCardNumbersTransformation The transformation of the `REMOVE_CREDIT_CARDS` type.   The transformation automatically detects and removes credit card numbers. No additional parameters needed.
type RemoveCreditCardNumbersTransformation struct {
	TransformationBase
}

// NewRemoveCreditCardNumbersTransformation instantiates a new RemoveCreditCardNumbersTransformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveCreditCardNumbersTransformation() *RemoveCreditCardNumbersTransformation {
	this := RemoveCreditCardNumbersTransformation{}
	return &this
}

// NewRemoveCreditCardNumbersTransformationWithDefaults instantiates a new RemoveCreditCardNumbersTransformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveCreditCardNumbersTransformationWithDefaults() *RemoveCreditCardNumbersTransformation {
	this := RemoveCreditCardNumbersTransformation{}
	return &this
}

func (o RemoveCreditCardNumbersTransformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTransformationBase, errTransformationBase := json.Marshal(o.TransformationBase)
	if errTransformationBase != nil {
		return []byte{}, errTransformationBase
	}
	errTransformationBase = json.Unmarshal([]byte(serializedTransformationBase), &toSerialize)
	if errTransformationBase != nil {
		return []byte{}, errTransformationBase
	}
	return json.Marshal(toSerialize)
}

type NullableRemoveCreditCardNumbersTransformation struct {
	value *RemoveCreditCardNumbersTransformation
	isSet bool
}

func (v NullableRemoveCreditCardNumbersTransformation) Get() *RemoveCreditCardNumbersTransformation {
	return v.value
}

func (v *NullableRemoveCreditCardNumbersTransformation) Set(val *RemoveCreditCardNumbersTransformation) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveCreditCardNumbersTransformation) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveCreditCardNumbersTransformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveCreditCardNumbersTransformation(val *RemoveCreditCardNumbersTransformation) *NullableRemoveCreditCardNumbersTransformation {
	return &NullableRemoveCreditCardNumbersTransformation{value: val, isSet: true}
}

func (v NullableRemoveCreditCardNumbersTransformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveCreditCardNumbersTransformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


