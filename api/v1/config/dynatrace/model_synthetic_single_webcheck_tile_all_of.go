/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// SyntheticSingleWebcheckTileAllOf struct for SyntheticSingleWebcheckTileAllOf
type SyntheticSingleWebcheckTileAllOf struct {
	// The list of Dynatrace entities, assigned to the tile.
	AssignedEntities *[]string `json:"assignedEntities,omitempty"`
	// Include (`false') or exclude (`true`) maintenance windows from availability calculations.
	ExcludeMaintenanceWindows *bool `json:"excludeMaintenanceWindows,omitempty"`
}

// NewSyntheticSingleWebcheckTileAllOf instantiates a new SyntheticSingleWebcheckTileAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticSingleWebcheckTileAllOf() *SyntheticSingleWebcheckTileAllOf {
	this := SyntheticSingleWebcheckTileAllOf{}
	return &this
}

// NewSyntheticSingleWebcheckTileAllOfWithDefaults instantiates a new SyntheticSingleWebcheckTileAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticSingleWebcheckTileAllOfWithDefaults() *SyntheticSingleWebcheckTileAllOf {
	this := SyntheticSingleWebcheckTileAllOf{}
	return &this
}

// GetAssignedEntities returns the AssignedEntities field value if set, zero value otherwise.
func (o *SyntheticSingleWebcheckTileAllOf) GetAssignedEntities() []string {
	if o == nil || o.AssignedEntities == nil {
		var ret []string
		return ret
	}
	return *o.AssignedEntities
}

// GetAssignedEntitiesOk returns a tuple with the AssignedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticSingleWebcheckTileAllOf) GetAssignedEntitiesOk() (*[]string, bool) {
	if o == nil || o.AssignedEntities == nil {
		return nil, false
	}
	return o.AssignedEntities, true
}

// HasAssignedEntities returns a boolean if a field has been set.
func (o *SyntheticSingleWebcheckTileAllOf) HasAssignedEntities() bool {
	if o != nil && o.AssignedEntities != nil {
		return true
	}

	return false
}

// SetAssignedEntities gets a reference to the given []string and assigns it to the AssignedEntities field.
func (o *SyntheticSingleWebcheckTileAllOf) SetAssignedEntities(v []string) {
	o.AssignedEntities = &v
}

// GetExcludeMaintenanceWindows returns the ExcludeMaintenanceWindows field value if set, zero value otherwise.
func (o *SyntheticSingleWebcheckTileAllOf) GetExcludeMaintenanceWindows() bool {
	if o == nil || o.ExcludeMaintenanceWindows == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeMaintenanceWindows
}

// GetExcludeMaintenanceWindowsOk returns a tuple with the ExcludeMaintenanceWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticSingleWebcheckTileAllOf) GetExcludeMaintenanceWindowsOk() (*bool, bool) {
	if o == nil || o.ExcludeMaintenanceWindows == nil {
		return nil, false
	}
	return o.ExcludeMaintenanceWindows, true
}

// HasExcludeMaintenanceWindows returns a boolean if a field has been set.
func (o *SyntheticSingleWebcheckTileAllOf) HasExcludeMaintenanceWindows() bool {
	if o != nil && o.ExcludeMaintenanceWindows != nil {
		return true
	}

	return false
}

// SetExcludeMaintenanceWindows gets a reference to the given bool and assigns it to the ExcludeMaintenanceWindows field.
func (o *SyntheticSingleWebcheckTileAllOf) SetExcludeMaintenanceWindows(v bool) {
	o.ExcludeMaintenanceWindows = &v
}

func (o SyntheticSingleWebcheckTileAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedEntities != nil {
		toSerialize["assignedEntities"] = o.AssignedEntities
	}
	if o.ExcludeMaintenanceWindows != nil {
		toSerialize["excludeMaintenanceWindows"] = o.ExcludeMaintenanceWindows
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticSingleWebcheckTileAllOf struct {
	value *SyntheticSingleWebcheckTileAllOf
	isSet bool
}

func (v NullableSyntheticSingleWebcheckTileAllOf) Get() *SyntheticSingleWebcheckTileAllOf {
	return v.value
}

func (v *NullableSyntheticSingleWebcheckTileAllOf) Set(val *SyntheticSingleWebcheckTileAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticSingleWebcheckTileAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticSingleWebcheckTileAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticSingleWebcheckTileAllOf(val *SyntheticSingleWebcheckTileAllOf) *NullableSyntheticSingleWebcheckTileAllOf {
	return &NullableSyntheticSingleWebcheckTileAllOf{value: val, isSet: true}
}

func (v NullableSyntheticSingleWebcheckTileAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticSingleWebcheckTileAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


