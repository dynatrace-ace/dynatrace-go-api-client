/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CustomColumnDefinitionAllOf struct for CustomColumnDefinitionAllOf
type CustomColumnDefinitionAllOf struct {
	Prefix *string `json:"prefix,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
}

// NewCustomColumnDefinitionAllOf instantiates a new CustomColumnDefinitionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomColumnDefinitionAllOf() *CustomColumnDefinitionAllOf {
	this := CustomColumnDefinitionAllOf{}
	return &this
}

// NewCustomColumnDefinitionAllOfWithDefaults instantiates a new CustomColumnDefinitionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomColumnDefinitionAllOfWithDefaults() *CustomColumnDefinitionAllOf {
	this := CustomColumnDefinitionAllOf{}
	return &this
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *CustomColumnDefinitionAllOf) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColumnDefinitionAllOf) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *CustomColumnDefinitionAllOf) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *CustomColumnDefinitionAllOf) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *CustomColumnDefinitionAllOf) GetSuffix() string {
	if o == nil || o.Suffix == nil {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColumnDefinitionAllOf) GetSuffixOk() (*string, bool) {
	if o == nil || o.Suffix == nil {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *CustomColumnDefinitionAllOf) HasSuffix() bool {
	if o != nil && o.Suffix != nil {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *CustomColumnDefinitionAllOf) SetSuffix(v string) {
	o.Suffix = &v
}

func (o CustomColumnDefinitionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	if o.Suffix != nil {
		toSerialize["suffix"] = o.Suffix
	}
	return json.Marshal(toSerialize)
}

type NullableCustomColumnDefinitionAllOf struct {
	value *CustomColumnDefinitionAllOf
	isSet bool
}

func (v NullableCustomColumnDefinitionAllOf) Get() *CustomColumnDefinitionAllOf {
	return v.value
}

func (v *NullableCustomColumnDefinitionAllOf) Set(val *CustomColumnDefinitionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomColumnDefinitionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomColumnDefinitionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomColumnDefinitionAllOf(val *CustomColumnDefinitionAllOf) *NullableCustomColumnDefinitionAllOf {
	return &NullableCustomColumnDefinitionAllOf{value: val, isSet: true}
}

func (v NullableCustomColumnDefinitionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomColumnDefinitionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


