/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CustomErrorRule Configuration of the custom error in the web application.
type CustomErrorRule struct {
	// The key of the error to look for.
	KeyPattern string `json:"keyPattern"`
	// The matching operation for the **keyPattern**.
	KeyMatcher string `json:"keyMatcher"`
	// The value of the error to look for.
	ValuePattern *string `json:"valuePattern,omitempty"`
	// The matching operation for the **valuePattern**.
	ValueMatcher *string `json:"valueMatcher,omitempty"`
	// Capture (`true`) or ignore (`false`) the error.
	Capture bool `json:"capture"`
	// Include (`true`) or exclude (`false`) the error in Apdex calculation.
	ImpactApdex bool `json:"impactApdex"`
	// Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://www.dynatrace.com/support/help/shortlink/problems-hub).
	CustomAlerting bool `json:"customAlerting"`
}

// NewCustomErrorRule instantiates a new CustomErrorRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomErrorRule(keyPattern string, keyMatcher string, capture bool, impactApdex bool, customAlerting bool, ) *CustomErrorRule {
	this := CustomErrorRule{}
	this.KeyPattern = keyPattern
	this.KeyMatcher = keyMatcher
	this.Capture = capture
	this.ImpactApdex = impactApdex
	this.CustomAlerting = customAlerting
	return &this
}

// NewCustomErrorRuleWithDefaults instantiates a new CustomErrorRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomErrorRuleWithDefaults() *CustomErrorRule {
	this := CustomErrorRule{}
	return &this
}

// GetKeyPattern returns the KeyPattern field value
func (o *CustomErrorRule) GetKeyPattern() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeyPattern
}

// GetKeyPatternOk returns a tuple with the KeyPattern field value
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetKeyPatternOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyPattern, true
}

// SetKeyPattern sets field value
func (o *CustomErrorRule) SetKeyPattern(v string) {
	o.KeyPattern = v
}

// GetKeyMatcher returns the KeyMatcher field value
func (o *CustomErrorRule) GetKeyMatcher() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeyMatcher
}

// GetKeyMatcherOk returns a tuple with the KeyMatcher field value
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetKeyMatcherOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyMatcher, true
}

// SetKeyMatcher sets field value
func (o *CustomErrorRule) SetKeyMatcher(v string) {
	o.KeyMatcher = v
}

// GetValuePattern returns the ValuePattern field value if set, zero value otherwise.
func (o *CustomErrorRule) GetValuePattern() string {
	if o == nil || o.ValuePattern == nil {
		var ret string
		return ret
	}
	return *o.ValuePattern
}

// GetValuePatternOk returns a tuple with the ValuePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetValuePatternOk() (*string, bool) {
	if o == nil || o.ValuePattern == nil {
		return nil, false
	}
	return o.ValuePattern, true
}

// HasValuePattern returns a boolean if a field has been set.
func (o *CustomErrorRule) HasValuePattern() bool {
	if o != nil && o.ValuePattern != nil {
		return true
	}

	return false
}

// SetValuePattern gets a reference to the given string and assigns it to the ValuePattern field.
func (o *CustomErrorRule) SetValuePattern(v string) {
	o.ValuePattern = &v
}

// GetValueMatcher returns the ValueMatcher field value if set, zero value otherwise.
func (o *CustomErrorRule) GetValueMatcher() string {
	if o == nil || o.ValueMatcher == nil {
		var ret string
		return ret
	}
	return *o.ValueMatcher
}

// GetValueMatcherOk returns a tuple with the ValueMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetValueMatcherOk() (*string, bool) {
	if o == nil || o.ValueMatcher == nil {
		return nil, false
	}
	return o.ValueMatcher, true
}

// HasValueMatcher returns a boolean if a field has been set.
func (o *CustomErrorRule) HasValueMatcher() bool {
	if o != nil && o.ValueMatcher != nil {
		return true
	}

	return false
}

// SetValueMatcher gets a reference to the given string and assigns it to the ValueMatcher field.
func (o *CustomErrorRule) SetValueMatcher(v string) {
	o.ValueMatcher = &v
}

// GetCapture returns the Capture field value
func (o *CustomErrorRule) GetCapture() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Capture
}

// GetCaptureOk returns a tuple with the Capture field value
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetCaptureOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Capture, true
}

// SetCapture sets field value
func (o *CustomErrorRule) SetCapture(v bool) {
	o.Capture = v
}

// GetImpactApdex returns the ImpactApdex field value
func (o *CustomErrorRule) GetImpactApdex() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.ImpactApdex
}

// GetImpactApdexOk returns a tuple with the ImpactApdex field value
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetImpactApdexOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImpactApdex, true
}

// SetImpactApdex sets field value
func (o *CustomErrorRule) SetImpactApdex(v bool) {
	o.ImpactApdex = v
}

// GetCustomAlerting returns the CustomAlerting field value
func (o *CustomErrorRule) GetCustomAlerting() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.CustomAlerting
}

// GetCustomAlertingOk returns a tuple with the CustomAlerting field value
// and a boolean to check if the value has been set.
func (o *CustomErrorRule) GetCustomAlertingOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomAlerting, true
}

// SetCustomAlerting sets field value
func (o *CustomErrorRule) SetCustomAlerting(v bool) {
	o.CustomAlerting = v
}

func (o CustomErrorRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keyPattern"] = o.KeyPattern
	}
	if true {
		toSerialize["keyMatcher"] = o.KeyMatcher
	}
	if o.ValuePattern != nil {
		toSerialize["valuePattern"] = o.ValuePattern
	}
	if o.ValueMatcher != nil {
		toSerialize["valueMatcher"] = o.ValueMatcher
	}
	if true {
		toSerialize["capture"] = o.Capture
	}
	if true {
		toSerialize["impactApdex"] = o.ImpactApdex
	}
	if true {
		toSerialize["customAlerting"] = o.CustomAlerting
	}
	return json.Marshal(toSerialize)
}

type NullableCustomErrorRule struct {
	value *CustomErrorRule
	isSet bool
}

func (v NullableCustomErrorRule) Get() *CustomErrorRule {
	return v.value
}

func (v *NullableCustomErrorRule) Set(val *CustomErrorRule) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomErrorRule) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomErrorRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomErrorRule(val *CustomErrorRule) *NullableCustomErrorRule {
	return &NullableCustomErrorRule{value: val, isSet: true}
}

func (v NullableCustomErrorRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomErrorRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


