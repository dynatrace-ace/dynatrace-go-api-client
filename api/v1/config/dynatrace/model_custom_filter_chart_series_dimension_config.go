/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CustomFilterChartSeriesDimensionConfig Configuration of the charted metric splitting.
type CustomFilterChartSeriesDimensionConfig struct {
	// The ID of the dimension by which the metric is split.
	Id string `json:"id"`
	// The name of the dimension by which the metric is split.
	Name *string `json:"name,omitempty"`
	// The splitting value.
	Values []string `json:"values"`
	EntityDimension *bool `json:"entityDimension,omitempty"`
}

// NewCustomFilterChartSeriesDimensionConfig instantiates a new CustomFilterChartSeriesDimensionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFilterChartSeriesDimensionConfig(id string, values []string, ) *CustomFilterChartSeriesDimensionConfig {
	this := CustomFilterChartSeriesDimensionConfig{}
	this.Id = id
	this.Values = values
	return &this
}

// NewCustomFilterChartSeriesDimensionConfigWithDefaults instantiates a new CustomFilterChartSeriesDimensionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFilterChartSeriesDimensionConfigWithDefaults() *CustomFilterChartSeriesDimensionConfig {
	this := CustomFilterChartSeriesDimensionConfig{}
	return &this
}

// GetId returns the Id field value
func (o *CustomFilterChartSeriesDimensionConfig) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesDimensionConfig) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomFilterChartSeriesDimensionConfig) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesDimensionConfig) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesDimensionConfig) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesDimensionConfig) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomFilterChartSeriesDimensionConfig) SetName(v string) {
	o.Name = &v
}

// GetValues returns the Values field value
func (o *CustomFilterChartSeriesDimensionConfig) GetValues() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesDimensionConfig) GetValuesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *CustomFilterChartSeriesDimensionConfig) SetValues(v []string) {
	o.Values = v
}

// GetEntityDimension returns the EntityDimension field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesDimensionConfig) GetEntityDimension() bool {
	if o == nil || o.EntityDimension == nil {
		var ret bool
		return ret
	}
	return *o.EntityDimension
}

// GetEntityDimensionOk returns a tuple with the EntityDimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesDimensionConfig) GetEntityDimensionOk() (*bool, bool) {
	if o == nil || o.EntityDimension == nil {
		return nil, false
	}
	return o.EntityDimension, true
}

// HasEntityDimension returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesDimensionConfig) HasEntityDimension() bool {
	if o != nil && o.EntityDimension != nil {
		return true
	}

	return false
}

// SetEntityDimension gets a reference to the given bool and assigns it to the EntityDimension field.
func (o *CustomFilterChartSeriesDimensionConfig) SetEntityDimension(v bool) {
	o.EntityDimension = &v
}

func (o CustomFilterChartSeriesDimensionConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["values"] = o.Values
	}
	if o.EntityDimension != nil {
		toSerialize["entityDimension"] = o.EntityDimension
	}
	return json.Marshal(toSerialize)
}

type NullableCustomFilterChartSeriesDimensionConfig struct {
	value *CustomFilterChartSeriesDimensionConfig
	isSet bool
}

func (v NullableCustomFilterChartSeriesDimensionConfig) Get() *CustomFilterChartSeriesDimensionConfig {
	return v.value
}

func (v *NullableCustomFilterChartSeriesDimensionConfig) Set(val *CustomFilterChartSeriesDimensionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFilterChartSeriesDimensionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFilterChartSeriesDimensionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFilterChartSeriesDimensionConfig(val *CustomFilterChartSeriesDimensionConfig) *NullableCustomFilterChartSeriesDimensionConfig {
	return &NullableCustomFilterChartSeriesDimensionConfig{value: val, isSet: true}
}

func (v NullableCustomFilterChartSeriesDimensionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFilterChartSeriesDimensionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


