/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// IbmMQImsEntryQueue Ibm MQ queue which is an entrypoint to IMS.
type IbmMQImsEntryQueue struct {
	// The ID of the IMS entry queue.
	Id *string `json:"id,omitempty"`
	// The name of the queue manager.
	QueueManagerName string `json:"queueManagerName"`
	// The name of the queue.
	QueueName string `json:"queueName"`
}

// NewIbmMQImsEntryQueue instantiates a new IbmMQImsEntryQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbmMQImsEntryQueue(queueManagerName string, queueName string, ) *IbmMQImsEntryQueue {
	this := IbmMQImsEntryQueue{}
	this.QueueManagerName = queueManagerName
	this.QueueName = queueName
	return &this
}

// NewIbmMQImsEntryQueueWithDefaults instantiates a new IbmMQImsEntryQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbmMQImsEntryQueueWithDefaults() *IbmMQImsEntryQueue {
	this := IbmMQImsEntryQueue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IbmMQImsEntryQueue) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbmMQImsEntryQueue) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IbmMQImsEntryQueue) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IbmMQImsEntryQueue) SetId(v string) {
	o.Id = &v
}

// GetQueueManagerName returns the QueueManagerName field value
func (o *IbmMQImsEntryQueue) GetQueueManagerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.QueueManagerName
}

// GetQueueManagerNameOk returns a tuple with the QueueManagerName field value
// and a boolean to check if the value has been set.
func (o *IbmMQImsEntryQueue) GetQueueManagerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.QueueManagerName, true
}

// SetQueueManagerName sets field value
func (o *IbmMQImsEntryQueue) SetQueueManagerName(v string) {
	o.QueueManagerName = v
}

// GetQueueName returns the QueueName field value
func (o *IbmMQImsEntryQueue) GetQueueName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value
// and a boolean to check if the value has been set.
func (o *IbmMQImsEntryQueue) GetQueueNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.QueueName, true
}

// SetQueueName sets field value
func (o *IbmMQImsEntryQueue) SetQueueName(v string) {
	o.QueueName = v
}

func (o IbmMQImsEntryQueue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["queueManagerName"] = o.QueueManagerName
	}
	if true {
		toSerialize["queueName"] = o.QueueName
	}
	return json.Marshal(toSerialize)
}

type NullableIbmMQImsEntryQueue struct {
	value *IbmMQImsEntryQueue
	isSet bool
}

func (v NullableIbmMQImsEntryQueue) Get() *IbmMQImsEntryQueue {
	return v.value
}

func (v *NullableIbmMQImsEntryQueue) Set(val *IbmMQImsEntryQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableIbmMQImsEntryQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableIbmMQImsEntryQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbmMQImsEntryQueue(val *IbmMQImsEntryQueue) *NullableIbmMQImsEntryQueue {
	return &NullableIbmMQImsEntryQueue{value: val, isSet: true}
}

func (v NullableIbmMQImsEntryQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbmMQImsEntryQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


