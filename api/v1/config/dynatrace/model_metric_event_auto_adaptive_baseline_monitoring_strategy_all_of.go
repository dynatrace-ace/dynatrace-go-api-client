/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf struct for MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf
type MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf struct {
	// The number of one-minute samples that form the sliding evaluation window.
	Samples *int32 `json:"samples,omitempty"`
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event.
	ViolatingSamples *int32 `json:"violatingSamples,omitempty"`
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event.
	DealertingSamples *int32 `json:"dealertingSamples,omitempty"`
	// The condition for the **threshold** value check: above or below.
	AlertCondition *string `json:"alertCondition,omitempty"`
	// Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted.
	NumberOfSignalFluctuations *float64 `json:"numberOfSignalFluctuations,omitempty"`
}

// NewMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf instantiates a new MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf() *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf {
	this := MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf{}
	return &this
}

// NewMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOfWithDefaults instantiates a new MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOfWithDefaults() *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf {
	this := MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf{}
	return &this
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetSamples() int32 {
	if o == nil || o.Samples == nil {
		var ret int32
		return ret
	}
	return *o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetSamplesOk() (*int32, bool) {
	if o == nil || o.Samples == nil {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) HasSamples() bool {
	if o != nil && o.Samples != nil {
		return true
	}

	return false
}

// SetSamples gets a reference to the given int32 and assigns it to the Samples field.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) SetSamples(v int32) {
	o.Samples = &v
}

// GetViolatingSamples returns the ViolatingSamples field value if set, zero value otherwise.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetViolatingSamples() int32 {
	if o == nil || o.ViolatingSamples == nil {
		var ret int32
		return ret
	}
	return *o.ViolatingSamples
}

// GetViolatingSamplesOk returns a tuple with the ViolatingSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetViolatingSamplesOk() (*int32, bool) {
	if o == nil || o.ViolatingSamples == nil {
		return nil, false
	}
	return o.ViolatingSamples, true
}

// HasViolatingSamples returns a boolean if a field has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) HasViolatingSamples() bool {
	if o != nil && o.ViolatingSamples != nil {
		return true
	}

	return false
}

// SetViolatingSamples gets a reference to the given int32 and assigns it to the ViolatingSamples field.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) SetViolatingSamples(v int32) {
	o.ViolatingSamples = &v
}

// GetDealertingSamples returns the DealertingSamples field value if set, zero value otherwise.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetDealertingSamples() int32 {
	if o == nil || o.DealertingSamples == nil {
		var ret int32
		return ret
	}
	return *o.DealertingSamples
}

// GetDealertingSamplesOk returns a tuple with the DealertingSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetDealertingSamplesOk() (*int32, bool) {
	if o == nil || o.DealertingSamples == nil {
		return nil, false
	}
	return o.DealertingSamples, true
}

// HasDealertingSamples returns a boolean if a field has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) HasDealertingSamples() bool {
	if o != nil && o.DealertingSamples != nil {
		return true
	}

	return false
}

// SetDealertingSamples gets a reference to the given int32 and assigns it to the DealertingSamples field.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) SetDealertingSamples(v int32) {
	o.DealertingSamples = &v
}

// GetAlertCondition returns the AlertCondition field value if set, zero value otherwise.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetAlertCondition() string {
	if o == nil || o.AlertCondition == nil {
		var ret string
		return ret
	}
	return *o.AlertCondition
}

// GetAlertConditionOk returns a tuple with the AlertCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetAlertConditionOk() (*string, bool) {
	if o == nil || o.AlertCondition == nil {
		return nil, false
	}
	return o.AlertCondition, true
}

// HasAlertCondition returns a boolean if a field has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) HasAlertCondition() bool {
	if o != nil && o.AlertCondition != nil {
		return true
	}

	return false
}

// SetAlertCondition gets a reference to the given string and assigns it to the AlertCondition field.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) SetAlertCondition(v string) {
	o.AlertCondition = &v
}

// GetNumberOfSignalFluctuations returns the NumberOfSignalFluctuations field value if set, zero value otherwise.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetNumberOfSignalFluctuations() float64 {
	if o == nil || o.NumberOfSignalFluctuations == nil {
		var ret float64
		return ret
	}
	return *o.NumberOfSignalFluctuations
}

// GetNumberOfSignalFluctuationsOk returns a tuple with the NumberOfSignalFluctuations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) GetNumberOfSignalFluctuationsOk() (*float64, bool) {
	if o == nil || o.NumberOfSignalFluctuations == nil {
		return nil, false
	}
	return o.NumberOfSignalFluctuations, true
}

// HasNumberOfSignalFluctuations returns a boolean if a field has been set.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) HasNumberOfSignalFluctuations() bool {
	if o != nil && o.NumberOfSignalFluctuations != nil {
		return true
	}

	return false
}

// SetNumberOfSignalFluctuations gets a reference to the given float64 and assigns it to the NumberOfSignalFluctuations field.
func (o *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) SetNumberOfSignalFluctuations(v float64) {
	o.NumberOfSignalFluctuations = &v
}

func (o MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Samples != nil {
		toSerialize["samples"] = o.Samples
	}
	if o.ViolatingSamples != nil {
		toSerialize["violatingSamples"] = o.ViolatingSamples
	}
	if o.DealertingSamples != nil {
		toSerialize["dealertingSamples"] = o.DealertingSamples
	}
	if o.AlertCondition != nil {
		toSerialize["alertCondition"] = o.AlertCondition
	}
	if o.NumberOfSignalFluctuations != nil {
		toSerialize["numberOfSignalFluctuations"] = o.NumberOfSignalFluctuations
	}
	return json.Marshal(toSerialize)
}

type NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf struct {
	value *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf
	isSet bool
}

func (v NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) Get() *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf {
	return v.value
}

func (v *NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) Set(val *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf(val *MetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) *NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf {
	return &NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf{value: val, isSet: true}
}

func (v NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricEventAutoAdaptiveBaselineMonitoringStrategyAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


