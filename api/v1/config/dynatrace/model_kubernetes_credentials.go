/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// KubernetesCredentials Configuration for specific Kubernetes credentials.
type KubernetesCredentials struct {
	Metadata *ConfigurationMetadata `json:"metadata,omitempty"`
	// The ID of the given credentials configuration.
	Id *string `json:"id,omitempty"`
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.   If not set on creation, the `true` value is used.   If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty"`
	// The status of the configured endpoint.  ASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing. UNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing. DISABLED: The credentials have been disabled by the user. FASTCHECK_AUTH_ERROR: The credentials are invalid. FASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid. FASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached. FASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid. FASTCHECK_AUTH_LOCKED: The credentials seem to be locked. UNKNOWN: An unknown error occured. 
	EndpointStatus *string `json:"endpointStatus,omitempty"`
	// The detailed status info of the configured endpoint.
	EndpointStatusInfo *string `json:"endpointStatusInfo,omitempty"`
	// The name of the Kubernetes credentials configuration.   Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Label string `json:"label"`
	// The URL of the Kubernetes API server.   It must be unique within a Dynatrace environment.   The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	EndpointUrl string `json:"endpointUrl"`
	// The service account bearer token for the Kubernetes API server.   Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.   If the field is omitted during an update, the old value remains unaffected.
	AuthToken *string `json:"authToken,omitempty"`
	// The monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.   If not set on creation, the `false` value is used.   If the field is omitted during an update, the old value remains unaffected.
	EventsIntegrationEnabled *bool `json:"eventsIntegrationEnabled,omitempty"`
	// Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	WorkloadIntegrationEnabled *bool `json:"workloadIntegrationEnabled,omitempty"`
	// Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
	EventsFieldSelectors *[]KubernetesEventPattern `json:"eventsFieldSelectors,omitempty"`
	// The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.   If not set on creation, the `true` value is used.   If the field is omitted during an update, the old value remains unaffected.
	CertificateCheckEnabled *bool `json:"certificateCheckEnabled,omitempty"`
}

// NewKubernetesCredentials instantiates a new KubernetesCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesCredentials(label string, endpointUrl string, ) *KubernetesCredentials {
	this := KubernetesCredentials{}
	this.Label = label
	this.EndpointUrl = endpointUrl
	return &this
}

// NewKubernetesCredentialsWithDefaults instantiates a new KubernetesCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesCredentialsWithDefaults() *KubernetesCredentials {
	this := KubernetesCredentials{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetMetadata() ConfigurationMetadata {
	if o == nil || o.Metadata == nil {
		var ret ConfigurationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetMetadataOk() (*ConfigurationMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConfigurationMetadata and assigns it to the Metadata field.
func (o *KubernetesCredentials) SetMetadata(v ConfigurationMetadata) {
	o.Metadata = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KubernetesCredentials) SetId(v string) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *KubernetesCredentials) SetActive(v bool) {
	o.Active = &v
}

// GetEndpointStatus returns the EndpointStatus field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetEndpointStatus() string {
	if o == nil || o.EndpointStatus == nil {
		var ret string
		return ret
	}
	return *o.EndpointStatus
}

// GetEndpointStatusOk returns a tuple with the EndpointStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetEndpointStatusOk() (*string, bool) {
	if o == nil || o.EndpointStatus == nil {
		return nil, false
	}
	return o.EndpointStatus, true
}

// HasEndpointStatus returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasEndpointStatus() bool {
	if o != nil && o.EndpointStatus != nil {
		return true
	}

	return false
}

// SetEndpointStatus gets a reference to the given string and assigns it to the EndpointStatus field.
func (o *KubernetesCredentials) SetEndpointStatus(v string) {
	o.EndpointStatus = &v
}

// GetEndpointStatusInfo returns the EndpointStatusInfo field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetEndpointStatusInfo() string {
	if o == nil || o.EndpointStatusInfo == nil {
		var ret string
		return ret
	}
	return *o.EndpointStatusInfo
}

// GetEndpointStatusInfoOk returns a tuple with the EndpointStatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetEndpointStatusInfoOk() (*string, bool) {
	if o == nil || o.EndpointStatusInfo == nil {
		return nil, false
	}
	return o.EndpointStatusInfo, true
}

// HasEndpointStatusInfo returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasEndpointStatusInfo() bool {
	if o != nil && o.EndpointStatusInfo != nil {
		return true
	}

	return false
}

// SetEndpointStatusInfo gets a reference to the given string and assigns it to the EndpointStatusInfo field.
func (o *KubernetesCredentials) SetEndpointStatusInfo(v string) {
	o.EndpointStatusInfo = &v
}

// GetLabel returns the Label field value
func (o *KubernetesCredentials) GetLabel() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *KubernetesCredentials) SetLabel(v string) {
	o.Label = v
}

// GetEndpointUrl returns the EndpointUrl field value
func (o *KubernetesCredentials) GetEndpointUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EndpointUrl
}

// GetEndpointUrlOk returns a tuple with the EndpointUrl field value
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetEndpointUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndpointUrl, true
}

// SetEndpointUrl sets field value
func (o *KubernetesCredentials) SetEndpointUrl(v string) {
	o.EndpointUrl = v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetAuthToken() string {
	if o == nil || o.AuthToken == nil {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetAuthTokenOk() (*string, bool) {
	if o == nil || o.AuthToken == nil {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasAuthToken() bool {
	if o != nil && o.AuthToken != nil {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *KubernetesCredentials) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetEventsIntegrationEnabled returns the EventsIntegrationEnabled field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetEventsIntegrationEnabled() bool {
	if o == nil || o.EventsIntegrationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.EventsIntegrationEnabled
}

// GetEventsIntegrationEnabledOk returns a tuple with the EventsIntegrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetEventsIntegrationEnabledOk() (*bool, bool) {
	if o == nil || o.EventsIntegrationEnabled == nil {
		return nil, false
	}
	return o.EventsIntegrationEnabled, true
}

// HasEventsIntegrationEnabled returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasEventsIntegrationEnabled() bool {
	if o != nil && o.EventsIntegrationEnabled != nil {
		return true
	}

	return false
}

// SetEventsIntegrationEnabled gets a reference to the given bool and assigns it to the EventsIntegrationEnabled field.
func (o *KubernetesCredentials) SetEventsIntegrationEnabled(v bool) {
	o.EventsIntegrationEnabled = &v
}

// GetWorkloadIntegrationEnabled returns the WorkloadIntegrationEnabled field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetWorkloadIntegrationEnabled() bool {
	if o == nil || o.WorkloadIntegrationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.WorkloadIntegrationEnabled
}

// GetWorkloadIntegrationEnabledOk returns a tuple with the WorkloadIntegrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetWorkloadIntegrationEnabledOk() (*bool, bool) {
	if o == nil || o.WorkloadIntegrationEnabled == nil {
		return nil, false
	}
	return o.WorkloadIntegrationEnabled, true
}

// HasWorkloadIntegrationEnabled returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasWorkloadIntegrationEnabled() bool {
	if o != nil && o.WorkloadIntegrationEnabled != nil {
		return true
	}

	return false
}

// SetWorkloadIntegrationEnabled gets a reference to the given bool and assigns it to the WorkloadIntegrationEnabled field.
func (o *KubernetesCredentials) SetWorkloadIntegrationEnabled(v bool) {
	o.WorkloadIntegrationEnabled = &v
}

// GetEventsFieldSelectors returns the EventsFieldSelectors field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetEventsFieldSelectors() []KubernetesEventPattern {
	if o == nil || o.EventsFieldSelectors == nil {
		var ret []KubernetesEventPattern
		return ret
	}
	return *o.EventsFieldSelectors
}

// GetEventsFieldSelectorsOk returns a tuple with the EventsFieldSelectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetEventsFieldSelectorsOk() (*[]KubernetesEventPattern, bool) {
	if o == nil || o.EventsFieldSelectors == nil {
		return nil, false
	}
	return o.EventsFieldSelectors, true
}

// HasEventsFieldSelectors returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasEventsFieldSelectors() bool {
	if o != nil && o.EventsFieldSelectors != nil {
		return true
	}

	return false
}

// SetEventsFieldSelectors gets a reference to the given []KubernetesEventPattern and assigns it to the EventsFieldSelectors field.
func (o *KubernetesCredentials) SetEventsFieldSelectors(v []KubernetesEventPattern) {
	o.EventsFieldSelectors = &v
}

// GetCertificateCheckEnabled returns the CertificateCheckEnabled field value if set, zero value otherwise.
func (o *KubernetesCredentials) GetCertificateCheckEnabled() bool {
	if o == nil || o.CertificateCheckEnabled == nil {
		var ret bool
		return ret
	}
	return *o.CertificateCheckEnabled
}

// GetCertificateCheckEnabledOk returns a tuple with the CertificateCheckEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredentials) GetCertificateCheckEnabledOk() (*bool, bool) {
	if o == nil || o.CertificateCheckEnabled == nil {
		return nil, false
	}
	return o.CertificateCheckEnabled, true
}

// HasCertificateCheckEnabled returns a boolean if a field has been set.
func (o *KubernetesCredentials) HasCertificateCheckEnabled() bool {
	if o != nil && o.CertificateCheckEnabled != nil {
		return true
	}

	return false
}

// SetCertificateCheckEnabled gets a reference to the given bool and assigns it to the CertificateCheckEnabled field.
func (o *KubernetesCredentials) SetCertificateCheckEnabled(v bool) {
	o.CertificateCheckEnabled = &v
}

func (o KubernetesCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.EndpointStatus != nil {
		toSerialize["endpointStatus"] = o.EndpointStatus
	}
	if o.EndpointStatusInfo != nil {
		toSerialize["endpointStatusInfo"] = o.EndpointStatusInfo
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["endpointUrl"] = o.EndpointUrl
	}
	if o.AuthToken != nil {
		toSerialize["authToken"] = o.AuthToken
	}
	if o.EventsIntegrationEnabled != nil {
		toSerialize["eventsIntegrationEnabled"] = o.EventsIntegrationEnabled
	}
	if o.WorkloadIntegrationEnabled != nil {
		toSerialize["workloadIntegrationEnabled"] = o.WorkloadIntegrationEnabled
	}
	if o.EventsFieldSelectors != nil {
		toSerialize["eventsFieldSelectors"] = o.EventsFieldSelectors
	}
	if o.CertificateCheckEnabled != nil {
		toSerialize["certificateCheckEnabled"] = o.CertificateCheckEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesCredentials struct {
	value *KubernetesCredentials
	isSet bool
}

func (v NullableKubernetesCredentials) Get() *KubernetesCredentials {
	return v.value
}

func (v *NullableKubernetesCredentials) Set(val *KubernetesCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesCredentials(val *KubernetesCredentials) *NullableKubernetesCredentials {
	return &NullableKubernetesCredentials{value: val, isSet: true}
}

func (v NullableKubernetesCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


