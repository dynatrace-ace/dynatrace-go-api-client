/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// FailureRateIncreaseDetectionConfig Configuration of failure rate increase detection.
type FailureRateIncreaseDetectionConfig struct {
	// How to detect failure rate increase: automatically, or based on fixed thresholds, or do not detect.
	DetectionMode string `json:"detectionMode"`
	AutomaticDetection *FailureRateIncreaseAutodetectionConfig `json:"automaticDetection,omitempty"`
	Thresholds *FailureRateIncreaseThresholdConfig `json:"thresholds,omitempty"`
}

// NewFailureRateIncreaseDetectionConfig instantiates a new FailureRateIncreaseDetectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailureRateIncreaseDetectionConfig(detectionMode string, ) *FailureRateIncreaseDetectionConfig {
	this := FailureRateIncreaseDetectionConfig{}
	this.DetectionMode = detectionMode
	return &this
}

// NewFailureRateIncreaseDetectionConfigWithDefaults instantiates a new FailureRateIncreaseDetectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailureRateIncreaseDetectionConfigWithDefaults() *FailureRateIncreaseDetectionConfig {
	this := FailureRateIncreaseDetectionConfig{}
	return &this
}

// GetDetectionMode returns the DetectionMode field value
func (o *FailureRateIncreaseDetectionConfig) GetDetectionMode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DetectionMode
}

// GetDetectionModeOk returns a tuple with the DetectionMode field value
// and a boolean to check if the value has been set.
func (o *FailureRateIncreaseDetectionConfig) GetDetectionModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DetectionMode, true
}

// SetDetectionMode sets field value
func (o *FailureRateIncreaseDetectionConfig) SetDetectionMode(v string) {
	o.DetectionMode = v
}

// GetAutomaticDetection returns the AutomaticDetection field value if set, zero value otherwise.
func (o *FailureRateIncreaseDetectionConfig) GetAutomaticDetection() FailureRateIncreaseAutodetectionConfig {
	if o == nil || o.AutomaticDetection == nil {
		var ret FailureRateIncreaseAutodetectionConfig
		return ret
	}
	return *o.AutomaticDetection
}

// GetAutomaticDetectionOk returns a tuple with the AutomaticDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailureRateIncreaseDetectionConfig) GetAutomaticDetectionOk() (*FailureRateIncreaseAutodetectionConfig, bool) {
	if o == nil || o.AutomaticDetection == nil {
		return nil, false
	}
	return o.AutomaticDetection, true
}

// HasAutomaticDetection returns a boolean if a field has been set.
func (o *FailureRateIncreaseDetectionConfig) HasAutomaticDetection() bool {
	if o != nil && o.AutomaticDetection != nil {
		return true
	}

	return false
}

// SetAutomaticDetection gets a reference to the given FailureRateIncreaseAutodetectionConfig and assigns it to the AutomaticDetection field.
func (o *FailureRateIncreaseDetectionConfig) SetAutomaticDetection(v FailureRateIncreaseAutodetectionConfig) {
	o.AutomaticDetection = &v
}

// GetThresholds returns the Thresholds field value if set, zero value otherwise.
func (o *FailureRateIncreaseDetectionConfig) GetThresholds() FailureRateIncreaseThresholdConfig {
	if o == nil || o.Thresholds == nil {
		var ret FailureRateIncreaseThresholdConfig
		return ret
	}
	return *o.Thresholds
}

// GetThresholdsOk returns a tuple with the Thresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailureRateIncreaseDetectionConfig) GetThresholdsOk() (*FailureRateIncreaseThresholdConfig, bool) {
	if o == nil || o.Thresholds == nil {
		return nil, false
	}
	return o.Thresholds, true
}

// HasThresholds returns a boolean if a field has been set.
func (o *FailureRateIncreaseDetectionConfig) HasThresholds() bool {
	if o != nil && o.Thresholds != nil {
		return true
	}

	return false
}

// SetThresholds gets a reference to the given FailureRateIncreaseThresholdConfig and assigns it to the Thresholds field.
func (o *FailureRateIncreaseDetectionConfig) SetThresholds(v FailureRateIncreaseThresholdConfig) {
	o.Thresholds = &v
}

func (o FailureRateIncreaseDetectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["detectionMode"] = o.DetectionMode
	}
	if o.AutomaticDetection != nil {
		toSerialize["automaticDetection"] = o.AutomaticDetection
	}
	if o.Thresholds != nil {
		toSerialize["thresholds"] = o.Thresholds
	}
	return json.Marshal(toSerialize)
}

type NullableFailureRateIncreaseDetectionConfig struct {
	value *FailureRateIncreaseDetectionConfig
	isSet bool
}

func (v NullableFailureRateIncreaseDetectionConfig) Get() *FailureRateIncreaseDetectionConfig {
	return v.value
}

func (v *NullableFailureRateIncreaseDetectionConfig) Set(val *FailureRateIncreaseDetectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFailureRateIncreaseDetectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFailureRateIncreaseDetectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailureRateIncreaseDetectionConfig(val *FailureRateIncreaseDetectionConfig) *NullableFailureRateIncreaseDetectionConfig {
	return &NullableFailureRateIncreaseDetectionConfig{value: val, isSet: true}
}

func (v NullableFailureRateIncreaseDetectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailureRateIncreaseDetectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


