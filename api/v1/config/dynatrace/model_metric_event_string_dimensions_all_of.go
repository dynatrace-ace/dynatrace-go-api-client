/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// MetricEventStringDimensionsAllOf struct for MetricEventStringDimensionsAllOf
type MetricEventStringDimensionsAllOf struct {
	TextFilter *MetricEventTextFilterMetricEventDimensionsFilterOperatorDto `json:"textFilter,omitempty"`
}

// NewMetricEventStringDimensionsAllOf instantiates a new MetricEventStringDimensionsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricEventStringDimensionsAllOf() *MetricEventStringDimensionsAllOf {
	this := MetricEventStringDimensionsAllOf{}
	return &this
}

// NewMetricEventStringDimensionsAllOfWithDefaults instantiates a new MetricEventStringDimensionsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricEventStringDimensionsAllOfWithDefaults() *MetricEventStringDimensionsAllOf {
	this := MetricEventStringDimensionsAllOf{}
	return &this
}

// GetTextFilter returns the TextFilter field value if set, zero value otherwise.
func (o *MetricEventStringDimensionsAllOf) GetTextFilter() MetricEventTextFilterMetricEventDimensionsFilterOperatorDto {
	if o == nil || o.TextFilter == nil {
		var ret MetricEventTextFilterMetricEventDimensionsFilterOperatorDto
		return ret
	}
	return *o.TextFilter
}

// GetTextFilterOk returns a tuple with the TextFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricEventStringDimensionsAllOf) GetTextFilterOk() (*MetricEventTextFilterMetricEventDimensionsFilterOperatorDto, bool) {
	if o == nil || o.TextFilter == nil {
		return nil, false
	}
	return o.TextFilter, true
}

// HasTextFilter returns a boolean if a field has been set.
func (o *MetricEventStringDimensionsAllOf) HasTextFilter() bool {
	if o != nil && o.TextFilter != nil {
		return true
	}

	return false
}

// SetTextFilter gets a reference to the given MetricEventTextFilterMetricEventDimensionsFilterOperatorDto and assigns it to the TextFilter field.
func (o *MetricEventStringDimensionsAllOf) SetTextFilter(v MetricEventTextFilterMetricEventDimensionsFilterOperatorDto) {
	o.TextFilter = &v
}

func (o MetricEventStringDimensionsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TextFilter != nil {
		toSerialize["textFilter"] = o.TextFilter
	}
	return json.Marshal(toSerialize)
}

type NullableMetricEventStringDimensionsAllOf struct {
	value *MetricEventStringDimensionsAllOf
	isSet bool
}

func (v NullableMetricEventStringDimensionsAllOf) Get() *MetricEventStringDimensionsAllOf {
	return v.value
}

func (v *NullableMetricEventStringDimensionsAllOf) Set(val *MetricEventStringDimensionsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricEventStringDimensionsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricEventStringDimensionsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricEventStringDimensionsAllOf(val *MetricEventStringDimensionsAllOf) *NullableMetricEventStringDimensionsAllOf {
	return &NullableMetricEventStringDimensionsAllOf{value: val, isSet: true}
}

func (v NullableMetricEventStringDimensionsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricEventStringDimensionsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


