/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// RdsHighMemoryThresholds Custom thresholds for RDS running out of memory. If not set, automatic mode is used.    **All** conditions must be fulfilled to trigger an alert.
type RdsHighMemoryThresholds struct {
	// Freeable memory is lower than *X* Megabytes in 3 out of 5 samples.
	FreeMemory float32 `json:"freeMemory"`
	// Swap usage is higher than *X* Gigabytes in 3 out of 5 samples.
	SwapUsage float32 `json:"swapUsage"`
}

// NewRdsHighMemoryThresholds instantiates a new RdsHighMemoryThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRdsHighMemoryThresholds(freeMemory float32, swapUsage float32, ) *RdsHighMemoryThresholds {
	this := RdsHighMemoryThresholds{}
	this.FreeMemory = freeMemory
	this.SwapUsage = swapUsage
	return &this
}

// NewRdsHighMemoryThresholdsWithDefaults instantiates a new RdsHighMemoryThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRdsHighMemoryThresholdsWithDefaults() *RdsHighMemoryThresholds {
	this := RdsHighMemoryThresholds{}
	return &this
}

// GetFreeMemory returns the FreeMemory field value
func (o *RdsHighMemoryThresholds) GetFreeMemory() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.FreeMemory
}

// GetFreeMemoryOk returns a tuple with the FreeMemory field value
// and a boolean to check if the value has been set.
func (o *RdsHighMemoryThresholds) GetFreeMemoryOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FreeMemory, true
}

// SetFreeMemory sets field value
func (o *RdsHighMemoryThresholds) SetFreeMemory(v float32) {
	o.FreeMemory = v
}

// GetSwapUsage returns the SwapUsage field value
func (o *RdsHighMemoryThresholds) GetSwapUsage() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.SwapUsage
}

// GetSwapUsageOk returns a tuple with the SwapUsage field value
// and a boolean to check if the value has been set.
func (o *RdsHighMemoryThresholds) GetSwapUsageOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SwapUsage, true
}

// SetSwapUsage sets field value
func (o *RdsHighMemoryThresholds) SetSwapUsage(v float32) {
	o.SwapUsage = v
}

func (o RdsHighMemoryThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["freeMemory"] = o.FreeMemory
	}
	if true {
		toSerialize["swapUsage"] = o.SwapUsage
	}
	return json.Marshal(toSerialize)
}

type NullableRdsHighMemoryThresholds struct {
	value *RdsHighMemoryThresholds
	isSet bool
}

func (v NullableRdsHighMemoryThresholds) Get() *RdsHighMemoryThresholds {
	return v.value
}

func (v *NullableRdsHighMemoryThresholds) Set(val *RdsHighMemoryThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableRdsHighMemoryThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableRdsHighMemoryThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRdsHighMemoryThresholds(val *RdsHighMemoryThresholds) *NullableRdsHighMemoryThresholds {
	return &NullableRdsHighMemoryThresholds{value: val, isSet: true}
}

func (v NullableRdsHighMemoryThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRdsHighMemoryThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


