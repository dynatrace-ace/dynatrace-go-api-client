/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// UndersizedStorageThresholds Custom thresholds for undersized storage device. If not set then the automatic mode is used.    Fulfillment of **any** condition triggers an alert.
type UndersizedStorageThresholds struct {
	// Average queue command latency is higher than *X* milliseconds in 3 out of 5 samples.
	AverageQueueCommandLatency int32 `json:"averageQueueCommandLatency"`
	// Peak queue command latency is higher than *X* milliseconds in 3 out of 5 samples.
	PeakQueueCommandLatency int32 `json:"peakQueueCommandLatency"`
}

// NewUndersizedStorageThresholds instantiates a new UndersizedStorageThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUndersizedStorageThresholds(averageQueueCommandLatency int32, peakQueueCommandLatency int32, ) *UndersizedStorageThresholds {
	this := UndersizedStorageThresholds{}
	this.AverageQueueCommandLatency = averageQueueCommandLatency
	this.PeakQueueCommandLatency = peakQueueCommandLatency
	return &this
}

// NewUndersizedStorageThresholdsWithDefaults instantiates a new UndersizedStorageThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUndersizedStorageThresholdsWithDefaults() *UndersizedStorageThresholds {
	this := UndersizedStorageThresholds{}
	return &this
}

// GetAverageQueueCommandLatency returns the AverageQueueCommandLatency field value
func (o *UndersizedStorageThresholds) GetAverageQueueCommandLatency() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.AverageQueueCommandLatency
}

// GetAverageQueueCommandLatencyOk returns a tuple with the AverageQueueCommandLatency field value
// and a boolean to check if the value has been set.
func (o *UndersizedStorageThresholds) GetAverageQueueCommandLatencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AverageQueueCommandLatency, true
}

// SetAverageQueueCommandLatency sets field value
func (o *UndersizedStorageThresholds) SetAverageQueueCommandLatency(v int32) {
	o.AverageQueueCommandLatency = v
}

// GetPeakQueueCommandLatency returns the PeakQueueCommandLatency field value
func (o *UndersizedStorageThresholds) GetPeakQueueCommandLatency() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.PeakQueueCommandLatency
}

// GetPeakQueueCommandLatencyOk returns a tuple with the PeakQueueCommandLatency field value
// and a boolean to check if the value has been set.
func (o *UndersizedStorageThresholds) GetPeakQueueCommandLatencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PeakQueueCommandLatency, true
}

// SetPeakQueueCommandLatency sets field value
func (o *UndersizedStorageThresholds) SetPeakQueueCommandLatency(v int32) {
	o.PeakQueueCommandLatency = v
}

func (o UndersizedStorageThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["averageQueueCommandLatency"] = o.AverageQueueCommandLatency
	}
	if true {
		toSerialize["peakQueueCommandLatency"] = o.PeakQueueCommandLatency
	}
	return json.Marshal(toSerialize)
}

type NullableUndersizedStorageThresholds struct {
	value *UndersizedStorageThresholds
	isSet bool
}

func (v NullableUndersizedStorageThresholds) Get() *UndersizedStorageThresholds {
	return v.value
}

func (v *NullableUndersizedStorageThresholds) Set(val *UndersizedStorageThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableUndersizedStorageThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableUndersizedStorageThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUndersizedStorageThresholds(val *UndersizedStorageThresholds) *NullableUndersizedStorageThresholds {
	return &NullableUndersizedStorageThresholds{value: val, isSet: true}
}

func (v NullableUndersizedStorageThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUndersizedStorageThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


