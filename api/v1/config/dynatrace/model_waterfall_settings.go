/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// WaterfallSettings These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources.
type WaterfallSettings struct {
	// Warn about uncompressed resources larger than *X* bytes.
	UncompressedResourcesThreshold int32 `json:"uncompressedResourcesThreshold"`
	// Warn about resources larger than *X* bytes.
	ResourcesThreshold int32 `json:"resourcesThreshold"`
	// Warn about resources with a lower browser cache rate above *X*%.
	ResourceBrowserCachingThreshold int32 `json:"resourceBrowserCachingThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms.
	SlowFirstPartyResourcesThreshold int32 `json:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms.
	SlowThirdPartyResourcesThreshold int32 `json:"slowThirdPartyResourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms.
	SlowCdnResourcesThreshold int32 `json:"slowCdnResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete.
	SpeedIndexVisuallyCompleteRatioThreshold int32 `json:"speedIndexVisuallyCompleteRatioThreshold"`
}

// NewWaterfallSettings instantiates a new WaterfallSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWaterfallSettings(uncompressedResourcesThreshold int32, resourcesThreshold int32, resourceBrowserCachingThreshold int32, slowFirstPartyResourcesThreshold int32, slowThirdPartyResourcesThreshold int32, slowCdnResourcesThreshold int32, speedIndexVisuallyCompleteRatioThreshold int32, ) *WaterfallSettings {
	this := WaterfallSettings{}
	this.UncompressedResourcesThreshold = uncompressedResourcesThreshold
	this.ResourcesThreshold = resourcesThreshold
	this.ResourceBrowserCachingThreshold = resourceBrowserCachingThreshold
	this.SlowFirstPartyResourcesThreshold = slowFirstPartyResourcesThreshold
	this.SlowThirdPartyResourcesThreshold = slowThirdPartyResourcesThreshold
	this.SlowCdnResourcesThreshold = slowCdnResourcesThreshold
	this.SpeedIndexVisuallyCompleteRatioThreshold = speedIndexVisuallyCompleteRatioThreshold
	return &this
}

// NewWaterfallSettingsWithDefaults instantiates a new WaterfallSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWaterfallSettingsWithDefaults() *WaterfallSettings {
	this := WaterfallSettings{}
	return &this
}

// GetUncompressedResourcesThreshold returns the UncompressedResourcesThreshold field value
func (o *WaterfallSettings) GetUncompressedResourcesThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.UncompressedResourcesThreshold
}

// GetUncompressedResourcesThresholdOk returns a tuple with the UncompressedResourcesThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetUncompressedResourcesThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UncompressedResourcesThreshold, true
}

// SetUncompressedResourcesThreshold sets field value
func (o *WaterfallSettings) SetUncompressedResourcesThreshold(v int32) {
	o.UncompressedResourcesThreshold = v
}

// GetResourcesThreshold returns the ResourcesThreshold field value
func (o *WaterfallSettings) GetResourcesThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ResourcesThreshold
}

// GetResourcesThresholdOk returns a tuple with the ResourcesThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetResourcesThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourcesThreshold, true
}

// SetResourcesThreshold sets field value
func (o *WaterfallSettings) SetResourcesThreshold(v int32) {
	o.ResourcesThreshold = v
}

// GetResourceBrowserCachingThreshold returns the ResourceBrowserCachingThreshold field value
func (o *WaterfallSettings) GetResourceBrowserCachingThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ResourceBrowserCachingThreshold
}

// GetResourceBrowserCachingThresholdOk returns a tuple with the ResourceBrowserCachingThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetResourceBrowserCachingThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceBrowserCachingThreshold, true
}

// SetResourceBrowserCachingThreshold sets field value
func (o *WaterfallSettings) SetResourceBrowserCachingThreshold(v int32) {
	o.ResourceBrowserCachingThreshold = v
}

// GetSlowFirstPartyResourcesThreshold returns the SlowFirstPartyResourcesThreshold field value
func (o *WaterfallSettings) GetSlowFirstPartyResourcesThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SlowFirstPartyResourcesThreshold
}

// GetSlowFirstPartyResourcesThresholdOk returns a tuple with the SlowFirstPartyResourcesThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetSlowFirstPartyResourcesThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SlowFirstPartyResourcesThreshold, true
}

// SetSlowFirstPartyResourcesThreshold sets field value
func (o *WaterfallSettings) SetSlowFirstPartyResourcesThreshold(v int32) {
	o.SlowFirstPartyResourcesThreshold = v
}

// GetSlowThirdPartyResourcesThreshold returns the SlowThirdPartyResourcesThreshold field value
func (o *WaterfallSettings) GetSlowThirdPartyResourcesThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SlowThirdPartyResourcesThreshold
}

// GetSlowThirdPartyResourcesThresholdOk returns a tuple with the SlowThirdPartyResourcesThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetSlowThirdPartyResourcesThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SlowThirdPartyResourcesThreshold, true
}

// SetSlowThirdPartyResourcesThreshold sets field value
func (o *WaterfallSettings) SetSlowThirdPartyResourcesThreshold(v int32) {
	o.SlowThirdPartyResourcesThreshold = v
}

// GetSlowCdnResourcesThreshold returns the SlowCdnResourcesThreshold field value
func (o *WaterfallSettings) GetSlowCdnResourcesThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SlowCdnResourcesThreshold
}

// GetSlowCdnResourcesThresholdOk returns a tuple with the SlowCdnResourcesThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetSlowCdnResourcesThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SlowCdnResourcesThreshold, true
}

// SetSlowCdnResourcesThreshold sets field value
func (o *WaterfallSettings) SetSlowCdnResourcesThreshold(v int32) {
	o.SlowCdnResourcesThreshold = v
}

// GetSpeedIndexVisuallyCompleteRatioThreshold returns the SpeedIndexVisuallyCompleteRatioThreshold field value
func (o *WaterfallSettings) GetSpeedIndexVisuallyCompleteRatioThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SpeedIndexVisuallyCompleteRatioThreshold
}

// GetSpeedIndexVisuallyCompleteRatioThresholdOk returns a tuple with the SpeedIndexVisuallyCompleteRatioThreshold field value
// and a boolean to check if the value has been set.
func (o *WaterfallSettings) GetSpeedIndexVisuallyCompleteRatioThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SpeedIndexVisuallyCompleteRatioThreshold, true
}

// SetSpeedIndexVisuallyCompleteRatioThreshold sets field value
func (o *WaterfallSettings) SetSpeedIndexVisuallyCompleteRatioThreshold(v int32) {
	o.SpeedIndexVisuallyCompleteRatioThreshold = v
}

func (o WaterfallSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uncompressedResourcesThreshold"] = o.UncompressedResourcesThreshold
	}
	if true {
		toSerialize["resourcesThreshold"] = o.ResourcesThreshold
	}
	if true {
		toSerialize["resourceBrowserCachingThreshold"] = o.ResourceBrowserCachingThreshold
	}
	if true {
		toSerialize["slowFirstPartyResourcesThreshold"] = o.SlowFirstPartyResourcesThreshold
	}
	if true {
		toSerialize["slowThirdPartyResourcesThreshold"] = o.SlowThirdPartyResourcesThreshold
	}
	if true {
		toSerialize["slowCdnResourcesThreshold"] = o.SlowCdnResourcesThreshold
	}
	if true {
		toSerialize["speedIndexVisuallyCompleteRatioThreshold"] = o.SpeedIndexVisuallyCompleteRatioThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableWaterfallSettings struct {
	value *WaterfallSettings
	isSet bool
}

func (v NullableWaterfallSettings) Get() *WaterfallSettings {
	return v.value
}

func (v *NullableWaterfallSettings) Set(val *WaterfallSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableWaterfallSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableWaterfallSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWaterfallSettings(val *WaterfallSettings) *NullableWaterfallSettings {
	return &NullableWaterfallSettings{value: val, isSet: true}
}

func (v NullableWaterfallSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWaterfallSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


