/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// DiskLowInodesThresholds Custom thresholds for low disk inodes number. If not set, automatic mode is used.
type DiskLowInodesThresholds struct {
	// Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples.
	FreeInodesPercentage int32 `json:"freeInodesPercentage"`
}

// NewDiskLowInodesThresholds instantiates a new DiskLowInodesThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskLowInodesThresholds(freeInodesPercentage int32, ) *DiskLowInodesThresholds {
	this := DiskLowInodesThresholds{}
	this.FreeInodesPercentage = freeInodesPercentage
	return &this
}

// NewDiskLowInodesThresholdsWithDefaults instantiates a new DiskLowInodesThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskLowInodesThresholdsWithDefaults() *DiskLowInodesThresholds {
	this := DiskLowInodesThresholds{}
	return &this
}

// GetFreeInodesPercentage returns the FreeInodesPercentage field value
func (o *DiskLowInodesThresholds) GetFreeInodesPercentage() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.FreeInodesPercentage
}

// GetFreeInodesPercentageOk returns a tuple with the FreeInodesPercentage field value
// and a boolean to check if the value has been set.
func (o *DiskLowInodesThresholds) GetFreeInodesPercentageOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FreeInodesPercentage, true
}

// SetFreeInodesPercentage sets field value
func (o *DiskLowInodesThresholds) SetFreeInodesPercentage(v int32) {
	o.FreeInodesPercentage = v
}

func (o DiskLowInodesThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["freeInodesPercentage"] = o.FreeInodesPercentage
	}
	return json.Marshal(toSerialize)
}

type NullableDiskLowInodesThresholds struct {
	value *DiskLowInodesThresholds
	isSet bool
}

func (v NullableDiskLowInodesThresholds) Get() *DiskLowInodesThresholds {
	return v.value
}

func (v *NullableDiskLowInodesThresholds) Set(val *DiskLowInodesThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskLowInodesThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskLowInodesThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskLowInodesThresholds(val *DiskLowInodesThresholds) *NullableDiskLowInodesThresholds {
	return &NullableDiskLowInodesThresholds{value: val, isSet: true}
}

func (v NullableDiskLowInodesThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskLowInodesThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


