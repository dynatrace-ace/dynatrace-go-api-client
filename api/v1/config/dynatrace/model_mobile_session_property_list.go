/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// MobileSessionPropertyList A list of short representations of mobile session properties.
type MobileSessionPropertyList struct {
	// A list of short representations of mobile session properties.
	SessionProperties *[]MobileSessionPropertyShort `json:"sessionProperties,omitempty"`
}

// NewMobileSessionPropertyList instantiates a new MobileSessionPropertyList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileSessionPropertyList() *MobileSessionPropertyList {
	this := MobileSessionPropertyList{}
	return &this
}

// NewMobileSessionPropertyListWithDefaults instantiates a new MobileSessionPropertyList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileSessionPropertyListWithDefaults() *MobileSessionPropertyList {
	this := MobileSessionPropertyList{}
	return &this
}

// GetSessionProperties returns the SessionProperties field value if set, zero value otherwise.
func (o *MobileSessionPropertyList) GetSessionProperties() []MobileSessionPropertyShort {
	if o == nil || o.SessionProperties == nil {
		var ret []MobileSessionPropertyShort
		return ret
	}
	return *o.SessionProperties
}

// GetSessionPropertiesOk returns a tuple with the SessionProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileSessionPropertyList) GetSessionPropertiesOk() (*[]MobileSessionPropertyShort, bool) {
	if o == nil || o.SessionProperties == nil {
		return nil, false
	}
	return o.SessionProperties, true
}

// HasSessionProperties returns a boolean if a field has been set.
func (o *MobileSessionPropertyList) HasSessionProperties() bool {
	if o != nil && o.SessionProperties != nil {
		return true
	}

	return false
}

// SetSessionProperties gets a reference to the given []MobileSessionPropertyShort and assigns it to the SessionProperties field.
func (o *MobileSessionPropertyList) SetSessionProperties(v []MobileSessionPropertyShort) {
	o.SessionProperties = &v
}

func (o MobileSessionPropertyList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SessionProperties != nil {
		toSerialize["sessionProperties"] = o.SessionProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMobileSessionPropertyList struct {
	value *MobileSessionPropertyList
	isSet bool
}

func (v NullableMobileSessionPropertyList) Get() *MobileSessionPropertyList {
	return v.value
}

func (v *NullableMobileSessionPropertyList) Set(val *MobileSessionPropertyList) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileSessionPropertyList) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileSessionPropertyList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileSessionPropertyList(val *MobileSessionPropertyList) *NullableMobileSessionPropertyList {
	return &NullableMobileSessionPropertyList{value: val, isSet: true}
}

func (v NullableMobileSessionPropertyList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileSessionPropertyList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


