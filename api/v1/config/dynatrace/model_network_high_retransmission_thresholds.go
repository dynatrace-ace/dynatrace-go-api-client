/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// NetworkHighRetransmissionThresholds Custom thresholds for high retransmission rate. If not set, automatic mode is used.    **All** of these conditions must be met to trigger an alert.
type NetworkHighRetransmissionThresholds struct {
	// Retransmission rate is higher than *X*% in 3 out of 5 samples.
	RetransmissionRatePercentage int32 `json:"retransmissionRatePercentage"`
	// Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples.
	RetransmittedPacketsNumberPerMinute int32 `json:"retransmittedPacketsNumberPerMinute"`
}

// NewNetworkHighRetransmissionThresholds instantiates a new NetworkHighRetransmissionThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkHighRetransmissionThresholds(retransmissionRatePercentage int32, retransmittedPacketsNumberPerMinute int32, ) *NetworkHighRetransmissionThresholds {
	this := NetworkHighRetransmissionThresholds{}
	this.RetransmissionRatePercentage = retransmissionRatePercentage
	this.RetransmittedPacketsNumberPerMinute = retransmittedPacketsNumberPerMinute
	return &this
}

// NewNetworkHighRetransmissionThresholdsWithDefaults instantiates a new NetworkHighRetransmissionThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkHighRetransmissionThresholdsWithDefaults() *NetworkHighRetransmissionThresholds {
	this := NetworkHighRetransmissionThresholds{}
	return &this
}

// GetRetransmissionRatePercentage returns the RetransmissionRatePercentage field value
func (o *NetworkHighRetransmissionThresholds) GetRetransmissionRatePercentage() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.RetransmissionRatePercentage
}

// GetRetransmissionRatePercentageOk returns a tuple with the RetransmissionRatePercentage field value
// and a boolean to check if the value has been set.
func (o *NetworkHighRetransmissionThresholds) GetRetransmissionRatePercentageOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RetransmissionRatePercentage, true
}

// SetRetransmissionRatePercentage sets field value
func (o *NetworkHighRetransmissionThresholds) SetRetransmissionRatePercentage(v int32) {
	o.RetransmissionRatePercentage = v
}

// GetRetransmittedPacketsNumberPerMinute returns the RetransmittedPacketsNumberPerMinute field value
func (o *NetworkHighRetransmissionThresholds) GetRetransmittedPacketsNumberPerMinute() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.RetransmittedPacketsNumberPerMinute
}

// GetRetransmittedPacketsNumberPerMinuteOk returns a tuple with the RetransmittedPacketsNumberPerMinute field value
// and a boolean to check if the value has been set.
func (o *NetworkHighRetransmissionThresholds) GetRetransmittedPacketsNumberPerMinuteOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RetransmittedPacketsNumberPerMinute, true
}

// SetRetransmittedPacketsNumberPerMinute sets field value
func (o *NetworkHighRetransmissionThresholds) SetRetransmittedPacketsNumberPerMinute(v int32) {
	o.RetransmittedPacketsNumberPerMinute = v
}

func (o NetworkHighRetransmissionThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["retransmissionRatePercentage"] = o.RetransmissionRatePercentage
	}
	if true {
		toSerialize["retransmittedPacketsNumberPerMinute"] = o.RetransmittedPacketsNumberPerMinute
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkHighRetransmissionThresholds struct {
	value *NetworkHighRetransmissionThresholds
	isSet bool
}

func (v NullableNetworkHighRetransmissionThresholds) Get() *NetworkHighRetransmissionThresholds {
	return v.value
}

func (v *NullableNetworkHighRetransmissionThresholds) Set(val *NetworkHighRetransmissionThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkHighRetransmissionThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkHighRetransmissionThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkHighRetransmissionThresholds(val *NetworkHighRetransmissionThresholds) *NullableNetworkHighRetransmissionThresholds {
	return &NullableNetworkHighRetransmissionThresholds{value: val, isSet: true}
}

func (v NullableNetworkHighRetransmissionThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkHighRetransmissionThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


