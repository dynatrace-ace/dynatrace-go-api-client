/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// CustomDeviceGroupNameAlertingScopeAllOf struct for CustomDeviceGroupNameAlertingScopeAllOf
type CustomDeviceGroupNameAlertingScopeAllOf struct {
	NameFilter *MetricEventTextFilterMetricEventTextFilterOperatorDto `json:"nameFilter,omitempty"`
}

// NewCustomDeviceGroupNameAlertingScopeAllOf instantiates a new CustomDeviceGroupNameAlertingScopeAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDeviceGroupNameAlertingScopeAllOf() *CustomDeviceGroupNameAlertingScopeAllOf {
	this := CustomDeviceGroupNameAlertingScopeAllOf{}
	return &this
}

// NewCustomDeviceGroupNameAlertingScopeAllOfWithDefaults instantiates a new CustomDeviceGroupNameAlertingScopeAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDeviceGroupNameAlertingScopeAllOfWithDefaults() *CustomDeviceGroupNameAlertingScopeAllOf {
	this := CustomDeviceGroupNameAlertingScopeAllOf{}
	return &this
}

// GetNameFilter returns the NameFilter field value if set, zero value otherwise.
func (o *CustomDeviceGroupNameAlertingScopeAllOf) GetNameFilter() MetricEventTextFilterMetricEventTextFilterOperatorDto {
	if o == nil || o.NameFilter == nil {
		var ret MetricEventTextFilterMetricEventTextFilterOperatorDto
		return ret
	}
	return *o.NameFilter
}

// GetNameFilterOk returns a tuple with the NameFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDeviceGroupNameAlertingScopeAllOf) GetNameFilterOk() (*MetricEventTextFilterMetricEventTextFilterOperatorDto, bool) {
	if o == nil || o.NameFilter == nil {
		return nil, false
	}
	return o.NameFilter, true
}

// HasNameFilter returns a boolean if a field has been set.
func (o *CustomDeviceGroupNameAlertingScopeAllOf) HasNameFilter() bool {
	if o != nil && o.NameFilter != nil {
		return true
	}

	return false
}

// SetNameFilter gets a reference to the given MetricEventTextFilterMetricEventTextFilterOperatorDto and assigns it to the NameFilter field.
func (o *CustomDeviceGroupNameAlertingScopeAllOf) SetNameFilter(v MetricEventTextFilterMetricEventTextFilterOperatorDto) {
	o.NameFilter = &v
}

func (o CustomDeviceGroupNameAlertingScopeAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NameFilter != nil {
		toSerialize["nameFilter"] = o.NameFilter
	}
	return json.Marshal(toSerialize)
}

type NullableCustomDeviceGroupNameAlertingScopeAllOf struct {
	value *CustomDeviceGroupNameAlertingScopeAllOf
	isSet bool
}

func (v NullableCustomDeviceGroupNameAlertingScopeAllOf) Get() *CustomDeviceGroupNameAlertingScopeAllOf {
	return v.value
}

func (v *NullableCustomDeviceGroupNameAlertingScopeAllOf) Set(val *CustomDeviceGroupNameAlertingScopeAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDeviceGroupNameAlertingScopeAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDeviceGroupNameAlertingScopeAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDeviceGroupNameAlertingScopeAllOf(val *CustomDeviceGroupNameAlertingScopeAllOf) *NullableCustomDeviceGroupNameAlertingScopeAllOf {
	return &NullableCustomDeviceGroupNameAlertingScopeAllOf{value: val, isSet: true}
}

func (v NullableCustomDeviceGroupNameAlertingScopeAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDeviceGroupNameAlertingScopeAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


