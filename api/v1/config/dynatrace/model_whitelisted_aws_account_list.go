/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// WhitelistedAwsAccountList struct for WhitelistedAwsAccountList
type WhitelistedAwsAccountList struct {
	Values *[]WhitelistedAwsAccount `json:"values,omitempty"`
}

// NewWhitelistedAwsAccountList instantiates a new WhitelistedAwsAccountList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhitelistedAwsAccountList() *WhitelistedAwsAccountList {
	this := WhitelistedAwsAccountList{}
	return &this
}

// NewWhitelistedAwsAccountListWithDefaults instantiates a new WhitelistedAwsAccountList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhitelistedAwsAccountListWithDefaults() *WhitelistedAwsAccountList {
	this := WhitelistedAwsAccountList{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *WhitelistedAwsAccountList) GetValues() []WhitelistedAwsAccount {
	if o == nil || o.Values == nil {
		var ret []WhitelistedAwsAccount
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhitelistedAwsAccountList) GetValuesOk() (*[]WhitelistedAwsAccount, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *WhitelistedAwsAccountList) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []WhitelistedAwsAccount and assigns it to the Values field.
func (o *WhitelistedAwsAccountList) SetValues(v []WhitelistedAwsAccount) {
	o.Values = &v
}

func (o WhitelistedAwsAccountList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableWhitelistedAwsAccountList struct {
	value *WhitelistedAwsAccountList
	isSet bool
}

func (v NullableWhitelistedAwsAccountList) Get() *WhitelistedAwsAccountList {
	return v.value
}

func (v *NullableWhitelistedAwsAccountList) Set(val *WhitelistedAwsAccountList) {
	v.value = val
	v.isSet = true
}

func (v NullableWhitelistedAwsAccountList) IsSet() bool {
	return v.isSet
}

func (v *NullableWhitelistedAwsAccountList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhitelistedAwsAccountList(val *WhitelistedAwsAccountList) *NullableWhitelistedAwsAccountList {
	return &NullableWhitelistedAwsAccountList{value: val, isSet: true}
}

func (v NullableWhitelistedAwsAccountList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhitelistedAwsAccountList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


