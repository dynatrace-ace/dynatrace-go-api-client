openapi: 3.0.1
info:
  description: |-
    Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.

    Notes about compatibility:
    * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.
    * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
  title: Dynatrace Configuration API
  version: "1.0"
servers:
- url: '{protocol}://{name}/api/config/v1'
  variables:
    name:
      description: Dynatrace full environment name.
    protocol:
      default: https
      description: The protocol for accessing the API.
security:
- Api-Token: []
tags:
- description: Manage application detection rules
  name: RUM - Application detection rules
- description: Manage configuration of host detection headers
  name: RUM - Application detection rules - Host detection
- description: Manage the IP address mapping rules for geographic regions
  name: RUM - Geographic regions - IP address mapping
- description: Manage the list of custom client IP headers
  name: RUM - Geographic regions - custom client IP headers
- description: Manage content resource rules
  name: RUM - Content resources
- description: Manage AWS credentials and monitoring options
  name: AWS credentials configuration
- description: Manage Azure app-level credentials and monitoring options
  name: Azure credentials configuration
- description: Manage web applications
  name: RUM - Web application configuration
- description: Manage allowed beacon origins for CORS requests
  name: RUM - Allowed beacon origins for CORS
- description: Manage mobile and custom applications
  name: RUM - Mobile and custom application configuration
- description: Manage request attributes
  name: Service - Request attributes
- description: Manage global data privacy and security settings
  name: Data privacy and security
- description: Manage anomaly detection configuration for hosts
  name: Anomaly detection - Hosts
- description: Manage anomaly detection configuration for services
  name: Anomaly detection - Services
- description: Manage anomaly detection configuration for database services
  name: Anomaly detection - Database services
- description: Manage anomaly detection configuration for applications
  name: Anomaly detection - Applications
- description: Manage anomaly detection configuration for disk events
  name: Anomaly detection - Disk events
- description: Manage anomaly detection configuration for AWS
  name: Anomaly detection - AWS
- description: Manage anomaly detection configuration for VMware
  name: Anomaly detection - VMware
- description: Manage anomaly detection configuration for metric events
  name: Anomaly detection - Metric events
- description: Manage custom services
  name: Service - Custom services
- description: Manage anomaly detection configuration for process groups
  name: Anomaly detection - Process groups
- description: Manage request naming rules
  name: Service - Request naming
- description: Manage automatically applied tags
  name: Automatically applied tags
- description: Manage management zones
  name: Management zones
- description: Manage maintenance windows
  name: Maintenance windows
- description: Manage configuration of OneAgent on a host
  name: OneAgent on a host
- description: Manage configuration of OneAgent in a host group
  name: OneAgent in a host group
- description: Manage configuration of OneAgents for the environment
  name: OneAgent - Environment-wide configuration
- description: Manage IBM MQ tracing settings
  name: Service - IBM MQ tracing
- description: Manage Cloud Foundry foundation credentials
  name: Cloud Foundry credentials configuration
- description: Manage metric subscriptions for services
  name: Calculated metrics - Services
- description: Manage metric subscriptions for web applications
  name: Calculated metrics - Web applications
- description: Manage calculated metrics for synthetic monitors
  name: Calculated metrics - Synthetic
- description: Manage calculated metrics for mobile & custom apps
  name: Calculated metrics - Mobile & custom applications
- description: Manage metric subscriptions for log monitoring
  name: Calculated metrics - Log monitoring
- description: Manage full web service detection rules
  name: Service - Detection full web service
- description: Manage full web request service detection rules
  name: Service - Detection full web request
- description: Manage opaque and external web service detection rules
  name: Service - Detection opaque and external web service
- description: Manage opaque and external web request service detection rules
  name: Service - Detection opaque and external web request
- description: Manage reports
  name: Reports
- description: Manage dashboards
  name: Dashboards
- description: Manage Kubernetes cluster credentials
  name: Kubernetes credentials configuration
- description: Manage plugins and their configurations
  name: Plugins
- description: Manage extensions and their configurations
  name: Extensions
- description: Manage frequent issue detection configuration
  name: Frequent issue detection
- description: Manage notifications
  name: Notifications
- description: Manage remote Dynatrace environments
  name: Remote environments
- description: AWS PrivateLink whitelisting
  name: AWS PrivateLink
- description: Manage alerting profiles
  name: Alerting Profiles
- description: Manage conditional naming rules
  name: Conditional naming
- description: Manage credentials for Synthetic monitors
  name: Credential vault
paths:
  /alertingProfiles/{id}:
    delete:
      description: The default alerting profile cannot be deleted.
      operationId: deleteAlertingProfile
      parameters:
      - description: The ID of the alerting profile to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The alerting profile has been deleted. Response doesn't
            have a body.
      summary: Deletes the specified alerting profile | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getAlertingProfile
      parameters:
      - description: The ID of the required alerting profile.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AlertingProfile'
          description: Success
      summary: Gets the properties of the specified alerting profile | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If an alerting profile with the specified ID doesn't exist, a new
        one is created.
      operationId: createOrUpdateAlertingProfile
      parameters:
      - description: The ID of the alerting profile to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AlertingProfile'
        description: The JSON body of the request. Contains updated parameters of
          the alerting profile.
      responses:
        "204":
          description: Success. The alerting profile has been updated. Response doesn't
            have a body.
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new alerting profile has been created. The response
            contains the ID of the new alerting profile.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing alerting profile | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /alertingProfiles:
    get:
      operationId: getAlertingProfiles
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all alerting profiles available in your environment | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createAlertingProfile
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AlertingProfile'
        description: The JSON body of the request. Contains parameters of the new
          alerting profile.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new alerting profile has been created. The response
            contains the ID of the new alerting profile.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new alerting profile | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /alertingProfiles/validator:
    post:
      operationId: validateCreateAlertingProfile
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AlertingProfile'
        description: The JSON body of the request. Contains parameters of the alerting
          profile to be validated.
      responses:
        "204":
          description: Validated. The submitted alerting profile is valid. Response
            doesn't have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload the `POST /alertingProfiles` request | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /alertingProfiles/{id}/validator:
    post:
      operationId: validateCreateOrUpdateAlertingProfile
      parameters:
      - description: The ID of the alerting profile to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AlertingProfile'
        description: The JSON body of the request. Contains parameters of the alerting
          profile to be validated.
      responses:
        "204":
          description: Validated. The submitted alerting profile is valid. Response
            doesn't have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload the `PUT /alertingProfiles/{id}` request | maturity=EARLY_ADOPTER
      tags:
      - Alerting Profiles
      x-feature-flag: ALERTING_PROFILES_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/applications:
    get:
      operationId: getApplicationAnomalyDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationAnomalyDetectionConfig'
          description: Success
      summary: Gets the configuration of anomaly detection for applications
      tags:
      - Anomaly detection - Applications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateApplicationAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationAnomalyDetectionConfig'
        description: The JSON body of the request, containing parameters of the application
          anomaly detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of anomaly detection for applications
      tags:
      - Anomaly detection - Applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/applications/validator:
    post:
      operationId: validateApplicationAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationAnomalyDetectionConfig'
        description: The JSON body of the request, containing parameters of the application
          anomaly detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the configuration of anomaly detection for applications for
        the `PUT /anomalyDetection/applications` request
      tags:
      - Anomaly detection - Applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/aws:
    get:
      operationId: getAwsAnomalyDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AwsAnomalyDetectionConfig'
          description: Success
      summary: Gets the configuration of anomaly detection for AWS
      tags:
      - Anomaly detection - AWS
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateAwsAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsAnomalyDetectionConfig'
        description: JSON body of the request, containing parameters of the AWS anomaly
          detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of anomaly detection for AWS
      tags:
      - Anomaly detection - AWS
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/aws/validator:
    post:
      operationId: validateAwsAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsAnomalyDetectionConfig'
        description: JSON body of the request, containing parameters of the AWS anomaly
          detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the configuration of anomaly detection for AWS for the `PUT
        /anomalyDetection/aws` request
      tags:
      - Anomaly detection - AWS
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/databaseServices/validator:
    post:
      operationId: validateDatabaseServiceAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DatabaseAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the database
          service anomaly detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /anomalyDetection/databaseServices`
        request
      tags:
      - Anomaly detection - Database services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/databaseServices:
    get:
      operationId: getDatabaseServiceAnomalyDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DatabaseAnomalyDetectionConfig'
          description: Success
      summary: Gets the configuration of anomaly detection for database services
      tags:
      - Anomaly detection - Database services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateDatabaseServiceAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DatabaseAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the database
          service anomaly detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of anomaly detection for database services
      tags:
      - Anomaly detection - Database services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/diskEvents/validator:
    post:
      operationId: validateCreateDiskEventConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DiskEventAnomalyDetectionConfig'
        description: JSON body of the request. Contains the disk event rule to be
          validated.
      responses:
        "204":
          description: Validated. The submitted disk event rule is valid. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `POST /anomalyDetection/diskEvents` request
        | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/diskEvents:
    get:
      operationId: listDiskEventConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all existing disk event rules | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createDiskEventConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DiskEventAnomalyDetectionConfig'
        description: JSON body of the request. Contains parameters of the new disk
          event rule.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new disk event rule has been created. The ID of
            the new disk event rule is returned.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new disk event rule | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/diskEvents/{id}:
    delete:
      operationId: deleteDiskEventConfig
      parameters:
      - description: The ID of the disk event rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The disk event rule has been deleted. Response doesn't
            have a body.
      summary: Deletes the specified disk event rule | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getDiskEventConfig
      parameters:
      - description: The ID of the required disk event rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DiskEventAnomalyDetectionConfig'
          description: Success
      summary: Gets the properties of the specified disk event rule | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a disk event rule with the specified ID does not exist, a new
        rule is created.
      operationId: updateDiskEventConfig
      parameters:
      - description: The ID of the disk event rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DiskEventAnomalyDetectionConfig'
        description: JSON body of the request. Contains updated disk event rule parameters.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new disk event rule has been created. The ID of
            the new disk event rule is returned.
        "204":
          description: Success. The disk event rule has been updated. Response doesn't
            have a body.
        "403":
          description: Failed. The specified ID is reserved for internal use.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates or creates a disk event rule | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/diskEvents/{id}/validator:
    post:
      operationId: validateUpdateDiskEventConfig
      parameters:
      - description: The ID of the disk event rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DiskEventAnomalyDetectionConfig'
        description: JSON body of the request. Contains the disk event rule to be
          validated.
      responses:
        "204":
          description: Validated. The submitted disk event rule is valid. Response
            doesn't have a body.
        "403":
          description: Failed. The specified ID is reserved for internal use.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /anomalyDetection/diskEvents/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Disk events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/hosts:
    get:
      operationId: getHostEventsConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HostsAnomalyDetectionConfig'
          description: Success
      summary: Gets the configuration of anomaly detection for hosts
      tags:
      - Anomaly detection - Hosts
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateHostEventsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostsAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the host
          anomaly detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of anomaly detection for hosts
      tags:
      - Anomaly detection - Hosts
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/hosts/validator:
    post:
      operationId: validateHostEventsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostsAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the host
          anomaly detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the configuration of anomaly detection for hosts for the
        `PUT /anomalyDetection/hosts` request
      tags:
      - Anomaly detection - Hosts
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/metricEvents/validator:
    post:
      operationId: validateCreateMetricEvent
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetricEvent'
        description: The JSON body of the request. Contains the metric event configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /anomalyDetection/metricEvents`
        request | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/metricEvents/{id}:
    delete:
      description: You can't delete events created by plugins.
      operationId: deleteMetricEvent
      parameters:
      - description: The ID of the metric event to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified metric event | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getMetricEventConfig
      parameters:
      - description: The ID of the required metric event.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricEvent'
          description: Success
      summary: Gets the properties of the specified metric event | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If the metric event with the specified ID does not exist, a new\
        \ metric event will be created. \n\n You can't update the **type** of the\
        \ metric event."
      operationId: updateMetricEvent
      parameters:
      - description: |-
          The ID of the metric event to be updated.

           If you also set the ID in the body, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9\.\-_:]+$
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetricEvent'
        description: The JSON body of the request. Contains updated parameters of
          the metric event.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new metric event has been created. The response
            contains the ID of the newly created metric event
        "204":
          description: Success. The metric event has been updated. The response is
            empty.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing metric event or creates a new one | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/metricEvents:
    get:
      operationId: listMetricEventConfigs
      parameters:
      - description: "Flag to include metric events with associated entities to the\
          \ response. \n\n Metric events with **entity** filters aren't compatible\
          \ across environments. If set to `false`, metric events with entity filters\
          \ will be removed."
        explode: true
        in: query
        name: includeEntityFilterMetricEvents
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all configured metric events | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The response contains the ID of the newly created metric event.
      operationId: createMetricEvent
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetricEvent'
        description: The JSON body of the request. Contains parameters of the new
          metric event.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The metric event has been created. The response contains
            the ID and name of the newly created metric event
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new metric event | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/metricEvents/{id}/validator:
    post:
      operationId: validateUpdateMetricEvent
      parameters:
      - description: The ID of the metric event to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9\.\-_:]+$
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetricEvent'
        description: The JSON body of the request. Contains the metric event configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /anomalyDetection/metricEvents/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Metric events
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/processGroups/{id}:
    delete:
      operationId: deleteLocalAvailabilityConfig
      parameters:
      - description: The Dynatrace entity ID of the required process group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Process group doesn't exist
      summary: Switches off anomaly detection for the specified process group | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Process groups
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getLocalAvailabilityConfig
      parameters:
      - description: The Dynatrace entity ID of the required process group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AnomalyDetectionPG'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Process group doesn't exist
      summary: Gets the configuration of anomaly detection for the specified process
        group | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Process groups
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: setLocalAvailabilityConfig
      parameters:
      - description: The Dynatrace entity ID of the required process group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AnomalyDetectionPG'
        description: The JSON body of the request. Contains parameters of anomaly
          detection for a process group.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of anomaly detection for the specified process
        group | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Process groups
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/processGroups/{id}/validator:
    post:
      operationId: validateLocalPgAvailabilityAlertingEvent
      parameters:
      - description: The Dynatrace entity ID of the required process group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AnomalyDetectionPG'
        description: The JSON body of the request. Contains anomaly detection configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /anomalyDetection/processGroups/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Anomaly detection - Process groups
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/services:
    get:
      operationId: getServiceAnomalyDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ServiceAnomalyDetectionConfig'
          description: Success
      summary: Gets the service anomaly detection configuration
      tags:
      - Anomaly detection - Services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateServiceAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the service
          anomaly detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the service anomaly detection configuration
      tags:
      - Anomaly detection - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/services/validator:
    post:
      operationId: validateServiceAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceAnomalyDetectionConfig'
        description: The JSON body of the request. Contains parameters of the service
          anomaly detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /anomalyDetection/services` request
      tags:
      - Anomaly detection - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/vmware:
    get:
      operationId: getVMwareAnomalyDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/VMwareAnomalyDetectionConfig'
          description: Success
      summary: Gets the configuration of anomaly detection for VMware
      tags:
      - Anomaly detection - VMware
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateVMwareAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/VMwareAnomalyDetectionConfig'
        description: JSON body of the request, containing parameters of the VMware
          anomaly detection configuration.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of anomaly detection for VMware
      tags:
      - Anomaly detection - VMware
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /anomalyDetection/vmware/validator:
    post:
      operationId: validateVMwareAnomalyDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/VMwareAnomalyDetectionConfig'
        description: JSON body of the request, containing parameters of the VMware
          anomaly detection configuration.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the configuration of anomaly detection for VMware for the
        `PUT /anomalyDetection/vmware` request
      tags:
      - Anomaly detection - VMware
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{id}:
    delete:
      operationId: deleteMobileApplicationConfig
      parameters:
      - description: The ID of the application to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The application has been deleted. The response doesn't
            have a body.
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Deletes the specified mobile or custom application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getMobileApplicationConfig
      parameters:
      - description: The ID of the required mobile or custom application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MobileCustomAppConfig'
          description: Success
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Gets the configuration of the specified mobile or custom application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: You can't change applicationId and applicationType with this request.
      operationId: updateMobileApplicationConfig
      parameters:
      - description: The ID of the application to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileCustomAppConfig'
        description: "The JSON body of the request. Contains updated configuration\
          \ of the mobile or custom application. \n\nDo not set the identifier in\
          \ the body."
      responses:
        "204":
          description: Success. The application has been updated. Response doesn't
            have a body.
        "404":
          description: Failed. The specified entity doesn't exist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of the specified mobile or custom application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile:
    get:
      operationId: listMobileApplicationConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all existing mobile and custom applications
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: "The body must not provide an identifier. An identifier is assigned\
        \ automatically by Dynatrace. \n\nYou can, however, provide your own applicationId.\
        \ If you don't specify an applicationId, it is assigned automatically by Dynatrace."
      operationId: createMobileApplicationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileCustomAppConfig'
        description: The JSON body of the request. Contains the parameters of the
          new mobile or custom application.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The application has been created. The response contains
            the identifier and name of the new application.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The applicationId is already used by another application.
      summary: Creates a new mobile or custom application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/validator:
    post:
      operationId: validateCreateMobileApplicationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileCustomAppConfig'
        description: The JSON body of the request. Contains the mobile or custom application
          configuration to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /applications/mobile` request
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{id}/validator:
    post:
      operationId: validateUpdateMobileApplicationConfig
      parameters:
      - description: The ID of the mobile or custom application to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileCustomAppConfig'
        description: The JSON body of the request. Contains the mobile or custom application
          configuration to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /applications/mobile/{id}` request.
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/userActionAndSessionProperties/validator:
    post:
      operationId: validateCreateSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileSessionProperty'
        description: The JSON body of the request. Contains the configuration of the
          mobile session property to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /applications/mobile/{applicationId}/sessionProperties`
        request
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/userActionAndSessionProperties/{key}:
    delete:
      operationId: deleteSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the required session property.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The session property has been deleted. The response
            doesn't have a body.
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Deletes the specified session property for an application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the required session property.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MobileSessionProperty'
          description: Success
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Gets the specified  session property of an application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the session property with the specified ID does not exist, a
        new session property is created.
      operationId: updateSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the required session property.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileSessionPropertyUpdate'
        description: The JSON body of the request. Contains the configuration of the
          mobile session property.
      responses:
        "201":
          description: Success. The session property has been created. The response
            contains the ID of the new property.
        "204":
          description: Success. The session property has been updated. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the specified session property for an application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/userActionAndSessionProperties/{key}/validator:
    post:
      operationId: validateUpdateSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the required session property.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileSessionPropertyUpdate'
        description: The JSON body of the request. Contains the configuration of the
          mobile session property to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /applications/mobile/{applicationId}/sessionProperties/{key}`
        request
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/userActionAndSessionProperties:
    get:
      operationId: listSessionProperties
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MobileSessionPropertyList'
          description: Success
      summary: Lists all session properties for the specified application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createSessionProperty
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MobileSessionProperty'
        description: The JSON body of the request. Contains the configuration of the
          mobile session property.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The session property has been created. The response
            contains the ID of the new property.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new session property for the specified application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/keyUserActions/{actionName}:
    delete:
      operationId: deleteMobileKeyUserAction
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user action to be removed from the key user actions
          list.
        explode: false
        in: path
        name: actionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The user action has been removed from the list of
            key user actions. The response doesn't have a body.
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Removes the specified user action from the list of key user actions
        in the specified application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    post:
      operationId: createMobileKeyUserAction
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the user action to be marked as a key user action.
        explode: false
        in: path
        name: actionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/KeyUserActionMobile'
          description: Success. The action has been marked as a key user action. The
            response contains its name.
        "404":
          description: Failed. The specified entity doesn't exist.
        "409":
          description: Failed. The max number of key user actions has been reached
            for the application.
      summary: Marks the user action as a key user action in the specified application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/mobile/{applicationId}/keyUserActions:
    get:
      operationId: listMobileKeyUserActions
      parameters:
      - description: The ID of the required application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/KeyUserActionMobileList'
          description: Success
        "404":
          description: Failed. The specified entity doesn't exist.
      summary: Gets the list of key user actions in the specified application
      tags:
      - RUM - Mobile and custom application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /applications/web/dataPrivacy:
    get:
      operationId: listDataPrivacySettings
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationDataPrivacyList'
          description: Success
      summary: Lists data privacy settings of all web applications
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /applications/web:
    get:
      operationId: listWebApplicationConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all existing web applications
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as that will be automatically assigned
        by Dynatrace server.
      operationId: createWebApplicationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing parameters of the new web
          application configuraiton.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The response body contains the ID and name of the
            new web application.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/default:
    get:
      description: "Default application is pre-configured in your Dynatrace environment.\
        \ By default all traffic goes to this application. \n\nAfter you configure\
        \ your own applications, all the traffic, which doesn't fit to any of your\
        \ applications, goes to the default one."
      operationId: getDefaultApplication
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebApplicationConfig'
          description: Success
      summary: Gets the configuration of the default web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "Default application is pre-configured in your Dynatrace environment.\
        \ By default all traffic goes to this application. \n\nAfter you configure\
        \ your own applications, all the traffic, which doesn't fit to any of your\
        \ applications, goes to the default one."
      operationId: createOrUpdateDefaultConfiguration
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing the new parameters of the
          default web application.
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of the default web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/{id}:
    delete:
      operationId: deleteWebApplicationConfig
      parameters:
      - description: The ID of the web application to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The application has been deleted. The response does
            not have a body.
      summary: Deletes the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getWebApplicationConfig
      parameters:
      - description: The ID of the requested web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebApplicationConfig'
          description: Success
      summary: Gets the configuration of the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the application with the specified ID does not exist, a new
        application will be created.
      operationId: updateWebApplicationConfig
      parameters:
      - description: "The ID of the web application to update. \n\nIf you set the\
          \ ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing updated configuration of
          the web application.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new configuration has been created. The response
            body contains the ID and name of the new web application.
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of the specified web application or creates
        a new one
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/{id}/dataPrivacy:
    get:
      operationId: getDataPrivacySettings
      parameters:
      - description: The ID of the web application where you want to check data privacy
          settings.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationDataPrivacy'
          description: Success
      summary: Gets the data privacy settings of the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateDataPrivacySettings
      parameters:
      - description: The ID of the web application, where you want to update data
          privacy settings.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDataPrivacy'
        description: JSON body of the request, containing new data privacy settings.
      responses:
        "204":
          description: Success. Data privacy settings have been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the data privacy settings of the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /applications/web/{id}/dataPrivacy/validator:
    post:
      operationId: validateDataPrivacySettings
      parameters:
      - description: The ID of the web application, where you want to validate data
          privacy settings.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDataPrivacy'
        description: JSON body of the request, containing new data privacy settings.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates data privacy settings for the `PUT /applications/web/{id}/dataPrivacy`
        request
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /applications/web/default/validator:
    post:
      operationId: validateDefaultConfiguration
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing web application configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the configuration of the default web application for the
        `PUT /applications/web/default` request
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/{id}/keyUserActions/{keyUserActionId}:
    delete:
      operationId: deleteKeyUserAction
      parameters:
      - description: The ID of the required web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user action to be removed from the key user actions
          list.
        explode: false
        in: path
        name: keyUserActionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The user action has been removed from the list of
            key user actions. The response doesn't have a body.
      summary: Removes the specified user action from the list of key user actions
        in the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/{id}/errorRules:
    get:
      operationId: getApplicationErrorConfig
      parameters:
      - description: The ID of the required web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationErrorRules'
          description: Success
      summary: Gets the configuration of error rules in the specified application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateApplicationErrorConfig
      parameters:
      - description: The ID of the required web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationErrorRules'
        description: The JSON body of the request. Contains the updated configuration
          of error rules.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of error rules in the specified application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/{id}/keyUserActions:
    get:
      operationId: listKeyUserActions
      parameters:
      - description: The ID of the required web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/KeyUserActionList'
          description: Success
      summary: Gets the list of key user actions in the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createKeyUserAction
      parameters:
      - description: The ID of the required web application.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KeyUserAction'
        description: The JSON body of the request. Contains the action to be marked
          as a key user action.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The action has been marked as a key user action. The
            response contains its ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Marks the user action as a key user action in the specified web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/default/dataPrivacy/validator:
    post:
      operationId: validateDefaultApplicationDataPrivacySettings
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDataPrivacy'
        description: JSON body of the request, containing the data privacy settings
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates data privacy settings of the default web application for
        the `PUT /applications/web/default/dataPrivacy` request
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /applications/web/validator:
    post:
      operationId: validateCreateWebApplicationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing the web application configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the configuration of the web application for the `POST /applications/web`
        request
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applications/web/default/dataPrivacy:
    get:
      description: "Default application is pre-configured in your Dynatrace environment.\
        \ By default all the traffic goes to this application. \n\nAfter you configure\
        \ your own applications, all the traffic, which doesn't fit to any of your\
        \ applications, goes to the default one."
      operationId: getDefaultApplicationDataPrivacySettings
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationDataPrivacy'
          description: Success
      summary: Gets the data privacy settings of the default web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "Default application is pre-configured in your Dynatrace environment.\
        \ By default all traffic goes to this application. \n\nAfter you configure\
        \ your own applications, all the traffic, which doesn't fit to any of your\
        \ applications, goes to the default one."
      operationId: updateDefaultApplicationDataPrivacySettings
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDataPrivacy'
        description: JSON body of the request, containing new data privacy settings.
      responses:
        "204":
          description: Success. Data privacy settings have been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the data privacy settings of the default web application
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /applications/web/{id}/validator:
    post:
      operationId: validateUpdateWebApplicationConfig
      parameters:
      - description: The ID of the web application to validate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WebApplicationConfig'
        description: JSON body of the request, containing the web application configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the configuration of the web application for the `PUT /applications/web/{id}`
        request.
      tags:
      - RUM - Web application configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/order:
    put:
      description: This request reorders the application detection rules according
        to the submitted list of IDs. Application detection rules not present in the
        body of the request will retain their relative ordering but are placed *after*
        all those present in the request.
      operationId: orderApplicationDetectionConfigs
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: The JSON body of the request. Contains the IDs of the application
          detection rules in the desired order. Any further properties (**name**,
          **description**) are ignored.
      responses:
        "204":
          description: Success. Application detection rules have been reordered. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the application detection rules
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules:
    get:
      operationId: listApplicationDetectionConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available application detection rules
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: "The body must not provide an ID. An ID is assigned automatically\
        \ by the Dynatrace server. \n\nYou can only create detection rules for an\
        \ existing application. If you need to create a rule for an application that\
        \ doesn't exist yet, [create an application first](https://www.dynatrace.com/support/help/shortlink/api-config-web-app-post-web-app)\
        \ and then configure detection rules for it."
      operationId: createApplicationDetectionConfig
      parameters:
      - description: "The position of the new rule: \n\n * `APPEND`: at the bottom\
          \ of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If\
          \ not set, the `APPEND` is used."
        explode: true
        in: query
        name: position
        required: false
        schema:
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRuleConfig'
        description: "The JSON body of the request. Contains configuration of the\
          \ new application detection rule. \n\n You must not specify the ID of the\
          \ rule. \n\nThe **order** field is ignored in this request. To enforce a\
          \ particular order use the `PUT /applicationDetectionRules/order` request."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The application detection rule has been created. Response
            contains the ID of the new rule.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new application detection rule
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/{id}:
    delete:
      operationId: deleteApplicationDetectionConfig
      parameters:
      - description: The ID of the application detection rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified application detection rule
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getApplicationDetectionConfig
      parameters:
      - description: The ID of the required application detection rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationDetectionRuleConfig'
          description: Success
      summary: Gets the parameters of the specified application detection rule
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If the application detection rule with the specified ID doesn't\
        \ exist, a new application is created and appended to the end of the rule\
        \ list. \n\nIf the **order** parameter is set for an existing rule, the request\
        \ uses this value. Otherwise it keeps the existing order of rules."
      operationId: updateApplicationDetectionConfig
      parameters:
      - description: "The ID of the application detection rule to be updated. \n\n\
          \ If you set the ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRuleConfig'
        description: "The JSON body of the request. Contains updated parameters of\
          \ the application detection rule. \n\n If the **order** parameter is set,\
          \ the rule is placed to this position."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Application detection rule has been created. Response
            contains the ID of the new rule.
        "204":
          description: Success. Application detection rule has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the specified application detection rule
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/{id}/validator:
    post:
      operationId: validateUpdateApplicationDetectionConfig
      parameters:
      - description: "The ID of the application detection rule to be validated. \n\
          \n If you set the ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRuleConfig'
        description: The JSON body of the request. Contains the application detection
          rule to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate the payload for the `PUT /applicationDetection/{id}` request
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/validator:
    post:
      operationId: validateCreateApplicationDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRuleConfig'
        description: The JSON body of the request. Contains the application detection
          rule to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /applicationDetection` request
      tags:
      - RUM - Application detection rules
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/hostDetection:
    get:
      operationId: getHostDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationDetectionRulesHostDetectionSettings'
          description: Success
      summary: Gets the configuration of host detection headers
      tags:
      - RUM - Application detection rules - Host detection
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: The request overwrites the existing configuration. Any headers
        not presented in the payload will be lost.
      operationId: updateHostDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRulesHostDetectionSettings'
        description: The JSON body of the request. Contains the configuration of host
          detection headers.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of host detection headers
      tags:
      - RUM - Application detection rules - Host detection
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /applicationDetectionRules/hostDetection/validator:
    post:
      operationId: validateHostDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApplicationDetectionRulesHostDetectionSettings'
        description: The JSON body of the request. Contains the configuration of host
          detection headers to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate the payload for `PUT /applicationDetection/hostDetection`
        request.
      tags:
      - RUM - Application detection rules - Host detection
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /autoTags/{id}:
    delete:
      operationId: deleteAutoTag
      parameters:
      - description: The ID of the auto-tag to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified auto-tag
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getAutoTag
      parameters:
      - description: The ID of the required auto-tag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Flag to include process group references to the response. \n\
          \n Process group references aren't compatible across environments. \n\n\
          When this flag is set to `false`, conditions with process group references\
          \ are removed. If that results in a rule having no conditions, the entire\
          \ rule is removed."
        explode: true
        in: query
        name: includeProcessGroupReferences
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AutoTag'
          description: Success
      summary: Gets the properties of the specified auto-tag
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the auto-tag with the specified ID does not exist, a new auto-tag
        is created.
      operationId: updateAutoTag
      parameters:
      - description: |-
          The ID of the auto-tag to be updated.

           If you set the ID in the body as well, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AutoTag'
        description: The JSON body of the request. Contains updated parameters of
          the auto-tag.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new auto-tag has been created. The response body
            contains the ID of the new auto-tag.
        "204":
          description: Success. The auto-tag has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing auto-tag
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /autoTags:
    get:
      operationId: listAutoTags
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all configured auto-tags
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createAutoTag
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AutoTag'
        description: The JSON body of the request. Contains parameters of the new
          auto-tag.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The auto-tag has been created. The response body contains
            the ID of the new auto-tag.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new auto-tag
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /autoTags/validator:
    post:
      operationId: validateCreateAutoTag
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AutoTag'
        description: The JSON body of the request. Contains auto-tag configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /autoTags` request
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /autoTags/{id}/validator:
    post:
      operationId: validateUpdateAutoTag
      parameters:
      - description: The ID of the auto-tag to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AutoTag'
        description: The JSON body of the request. Contains auto-tag configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /autoTags/{id}` request
      tags:
      - Automatically applied tags
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/autoupdate:
    get:
      operationId: getAutoUpdateConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EnvironmentAutoUpdateConfig'
          description: Success
      summary: Gets the environment-wide configuration of OneAgents auto-update
      tags:
      - OneAgent - Environment-wide configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "OneAgents are updated several minutes after the change of configuration.\
        \ \n\nThe process can take more time depending on number of OneAgents in the\
        \ update queue."
      operationId: setAutoUpdateConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/EnvironmentAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the environment-wide configuration of OneAgents auto-update
      tags:
      - OneAgent - Environment-wide configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/autoupdate/validator:
    post:
      operationId: validateAutoUpdateConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/EnvironmentAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters
          to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT hosts/autoupdate` request
      tags:
      - OneAgent - Environment-wide configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /allowedBeaconOriginsForCors:
    get:
      operationId: getAllowedBeaconOriginsConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AllowedBeaconOrigins'
          description: Success
      summary: Gets the configuration of the allowed beacon origins for CORS requests
      tags:
      - RUM - Allowed beacon origins for CORS
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: The request overwrites the existing configuration. Any rules not
        presented in the payload will be lost.
      operationId: putAllowedBeaconOriginsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AllowedBeaconOrigins'
        description: The JSON body of the request. Contains the configuration of the
          allowed beacon origins for CORS requests.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of the allowed beacon origins for CORS requests
      tags:
      - RUM - Allowed beacon origins for CORS
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /allowedBeaconOriginsForCors/validator:
    post:
      operationId: validateAllowedBeaconOriginsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AllowedBeaconOrigins'
        description: The JSON body of the request. Contains the configuration of the
          allowed beacon origins for CORS requests.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /allowedBeaconOriginsForCors` request
      tags:
      - RUM - Allowed beacon origins for CORS
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /conditionalNaming/{type}/{id}:
    delete:
      operationId: deleteNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      - description: The ID of the naming rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified naming rule
      tags:
      - Conditional naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      - description: The ID of the required naming rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConditionalNamingRule'
          description: Success
      summary: Lists the parameters of the specified naming rule
      tags:
      - Conditional naming
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the rule with the specified ID doesn't exist, a new rule will
        be created at the end of the rules list and will be the last to evaluate.
      operationId: updateNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      - description: The ID of the naming rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ConditionalNamingRule'
        description: "The JSON body of the request. Contains updated parameters of\
          \ the naming rule. \n\nThe value of the **type** field must match the **type**\
          \ path parameter."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The naming rule has been created. The response contains
            the ID of the new rule.
        "204":
          description: Success. The naming rule has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the specified naming rule
      tags:
      - Conditional naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /conditionalNaming/{type}:
    get:
      operationId: listNamingRules
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all configured naming rules of the specified type
      tags:
      - Conditional naming
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ConditionalNamingRule'
        description: "The JSON body of the request. Contains parameters of the new\
          \ naming rule. \n\nDo not specify the **id** of the rule. \n\nThe value\
          \ of the **type** field must match the **type** path parameter."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The naming rule has been created. The response contains
            the ID of the new rule
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new naming rule
      tags:
      - Conditional naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /conditionalNaming/{type}/validator:
    post:
      operationId: validateCreateNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ConditionalNamingRule'
        description: The JSON body of the request. Contains the naming rule parameters
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /conditionalNaming/{type}` request
      tags:
      - Conditional naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /conditionalNaming/{type}/{id}/validator:
    post:
      operationId: validateUpdateNamingRule
      parameters:
      - description: The type of the rule, defined by the type of Dynatrace entities
          to which the rule applies.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - processGroup
          - host
          - service
          type: string
        style: simple
      - description: The ID of the naming rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ConditionalNamingRule'
        description: The JSON body of the request. Contains the naming rule parameters
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /conditionalNaming/{type}/{id}`
        request
      tags:
      - Conditional naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /contentResources:
    get:
      operationId: getContentConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ContentResources'
          description: Success
      summary: Gets the configuration of content resources
      tags:
      - RUM - Content resources
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: putContentResourceConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ContentResources'
        description: The JSON body of the request. Contains the configuration of content
          resources.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of content resources
      tags:
      - RUM - Content resources
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /contentResources/validator:
    post:
      operationId: validateContentResourceConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ContentResources'
        description: The JSON body of the request. Contains the configuration of content
          resources to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /contentResources` request
      tags:
      - RUM - Content resources
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /credentials/{id}:
    delete:
      operationId: removeCredentials
      parameters:
      - description: The ID of the credentials set to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The credentials set has been deleted. Response doesn't
            have a body.
      summary: Deletes the specified credentials set | maturity=EARLY_ADOPTER
      tags:
      - Credential vault
      x-feature-flag: MANAGE_SYNTHETIC_CREDENTIALS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`credentialVault.write` (Write credential vault entries)'
    get:
      description: The credentials set itself (username/certificate and password)
        is not included in the response.
      operationId: getCredentials
      parameters:
      - description: The Dynatrace entity ID of the required credentials set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsResponseElement'
          description: Success. The response contains the metadata of the credentials
            set.
      summary: Gets the metadata of the specified credentials set | maturity=EARLY_ADOPTER
      tags:
      - Credential vault
      x-feature-flag: MANAGE_SYNTHETIC_CREDENTIALS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`credentialVault.read` (Read credential vault entries)'
    put:
      operationId: updateCredentials
      parameters:
      - description: The Dynatrace entity ID of the credentials set to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: The JSON body of the request. Contains updated parameters of
          the credentials set.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsResponseElement'
          description: Success. The new credentials set has been created. The response
            contains the ID of the set.
        "204":
          description: Success. The credentials set has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified credentials set | maturity=EARLY_ADOPTER
      tags:
      - Credential vault
      x-feature-flag: MANAGE_SYNTHETIC_CREDENTIALS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`credentialVault.write` (Write credential vault entries)'
  /credentials:
    get:
      operationId: listCredentials
      parameters:
      - description: Filters the result by the specified credentials type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - CERTIFICATE
          - USERNAME_PASSWORD
          - TOKEN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
      summary: Lists all sets of credentials for synthetic monitors stored in your
        environment | maturity=EARLY_ADOPTER
      tags:
      - Credential vault
      x-feature-flag: MANAGE_SYNTHETIC_CREDENTIALS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`credentialVault.read` (Read credential vault entries)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createCredentials
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: The JSON body of the request. Contains parameters of the new
          credentials set.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsResponseElement'
          description: Success. The new credentials set has been created. The response
            contains the ID of the set.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new credentials set | maturity=EARLY_ADOPTER
      tags:
      - Credential vault
      x-feature-flag: MANAGE_SYNTHETIC_CREDENTIALS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`credentialVault.write` (Write credential vault entries)'
  /service/customServices/{technology}/{id}:
    delete:
      operationId: deleteCustomService
      parameters:
      - description: Technology of the custom service to delete.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      - description: The ID of the custom service to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Deletes the specified custom service
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getCustomService
      parameters:
      - description: Technology of the custom service you're inquiring.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      - description: The ID of the custom service you're inquiring.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Flag to include process group references to the response. \n\
          \n Process group references aren't compatible across environments. \n\n\
          `false` is used if the value is not set."
        explode: true
        in: query
        name: includeProcessGroupReferences
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: Success
      summary: Gets the definition of the specified custom service
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: Will use the config's ´order´ attribute if supplied, otherwise
        keeps the order of the existing config or appends if no existing config with
        the supplied ID was found.
      operationId: updateCustomService
      parameters:
      - description: Technology of the custom service to update.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      - description: |-
          The ID of the custom service to update.

           The ID of the custom service in the body of the request must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomService'
        description: JSON body of the request containing updated definition of the
          custom service. If *order* is present, it will be used.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Custom service has been created. Response contains
            the new service's ID and name.
        "204":
          description: Success. Custom service has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified custom service or create a new one.
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/customServices/{technology}/validator:
    post:
      operationId: validateCreateCustomService
      parameters:
      - description: Technology of the custom service to validate.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomService'
        description: JSON body of the request containing definition of the custom
          service to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validate the new custom service for the `POST /customServices/{technology}`
        request
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/customServices/{technology}/{id}/validator:
    post:
      operationId: validateUpdateCustomService
      parameters:
      - description: Technology of the custom service to validate.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      - description: The ID of the custom service to validate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomService'
        description: JSON body of the request containing definition of the custom
          service to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validate the new custom service for the `PUT /customServices/{technology}/{id}`
        request
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/customServices/{technology}:
    get:
      operationId: listCustomServices
      parameters:
      - description: Technology of the required custom services.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all custom services of the specified technology
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: In the body of the request, neither custom service nor its rules
        can have the ID. All IDs will be generated automatically by Dynatrace.
      operationId: createCustomService
      parameters:
      - description: Technology of the new custom service.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      - description: Order of the new custom service. Set to `PREPEND` to prepend
          it to the list, `APPEND` to append it. Defaults to `APPEND`.
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomService'
        description: "JSON body of the request containing definition of the new custom\
          \ service. \n\nYou must not specify the IDs for the custom service or any\
          \ of its rules. The *order* field is not allowed either."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The custom service has been created. Response contains
            the new service's ID and name.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a custom service
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/customServices/{technology}/order:
    put:
      description: This request reorders the custom services of the specified technology
        according to the given list of IDs. Custom services not present in the body
        of the request will retain their relative ordering but will be ordered *after*
        all those present in the request.
      operationId: orderCustomServices
      parameters:
      - description: Technology of custom services to update.
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - dotNet
          - go
          - java
          - nodeJS
          - php
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: JSON body of the request containing the IDs of the custom services
          in the desired order. Any further properties (*name*, *description*) will
          be ignored.
      responses:
        "204":
          description: Success. Custom services have been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Reorders the custom services of the specified technology
      tags:
      - Service - Custom services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /dashboards/{id}:
    delete:
      operationId: deleteDashboard
      parameters:
      - description: The ID of the dashboard to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The dashboard has been deleted. Response doesn't have
            a body.
      summary: Deletes the specified dashboard | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getDashboard
      parameters:
      - description: The ID of the required dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Success. The response body contains parameters of the dashboard.
      summary: Gets the properties of the specified dashboard | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the dashboard with the specified ID doesn't exist, a new dashboard
        is created
      operationId: updateDashboard
      parameters:
      - description: "The ID of the dashboard to be updated. \n\n The ID in the request\
          \ body must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The JSON body of the request. Contains updated parameters of
          the dashboard.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new dashboard has been created. Response doesn't
            have a body.
        "204":
          description: Success. The dashboard has been updated. Response doesn't have
            a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified dashboard | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /dashboards:
    get:
      operationId: getDashboardStubsList
      parameters:
      - description: The owner of the dashboard.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: "A list of tags applied to the dashboard. \n\n The dashboard\
          \ must match **all** the specified tags."
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: Success
      summary: Lists all dashboards of the environment | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createDashboard
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The JSON body of the request. Contains parameters of the new
          dashboard.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new dashboard has been created. The response body
            contains the generated ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a dashboard | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /dashboards/{id}/validator:
    post:
      operationId: validateDashboardUpdate
      parameters:
      - description: "The ID of the dashboard to be validated. \n\n The ID in the\
          \ request body must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The JSON body of the request. Contains the dashboard to be validated.
      responses:
        "204":
          description: Validated. The submitted dashboard is valid. Response doesn't
            have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the 'PUT /dashboards/{id}' request | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /dashboards/validator:
    post:
      description: The body must not provide an ID.
      operationId: validateDashboardCreation
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The JSON body of the request. Containing the dashboard to be
          validated.
      responses:
        "204":
          description: Validated. The submitted dashboard is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the 'POST /dashboards' request | maturity=EARLY_ADOPTER
      tags:
      - Dashboards
      x-feature-flag: DASHBOARD_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /dataPrivacy:
    get:
      operationId: getDataPrivacySettings_1
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DataPrivacyAndSecurity'
          description: Success
      summary: Lists the global data privacy and security settings.
      tags:
      - Data privacy and security
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: This request updates global settings, affecting all your applications.
        To update application-specific data privacy settings, use the `PUT /applications/web/{id}/dataPrivacy`
        request.
      operationId: updateDataPrivacySettings_1
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DataPrivacyAndSecurity'
        required: true
      responses:
        "204":
          description: Success. The configuration is updated. Response does not have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the global data privacy and security settings.
      tags:
      - Data privacy and security
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /dataPrivacy/validator:
    post:
      operationId: validateDataPrivacySettings_1
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DataPrivacyAndSecurity'
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates new data privacy and security settings for the `PUT /dataPrivacy`
        request.
      tags:
      - Data privacy and security
      x-token-scopes:
      - '`DataPrivacy` (Change data privacy settings)'
  /hosts/{id}/autoupdate:
    get:
      operationId: getAutoUpdateConfig_1
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HostAutoUpdateConfig'
          description: Success
      summary: Gets the configuration of OneAgent auto-update on the specified host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "OneAgent is updated several minutes after the change of configuration.\
        \ \n\nThe process can take more time depending on number of OneAgents in the\
        \ update queue."
      operationId: updateAutoUpdateConfig
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of OneAgent auto-update on the specified
        host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/{id}/autoupdate/validator:
    post:
      operationId: validateAutoUpdateConfig_1
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /hosts/{id}/autoupdate` request
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/{id}:
    get:
      operationId: getHostConfig
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HostConfig'
          description: Success
      summary: Gets the OneAgent configuration on the specified host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /hosts/{id}/monitoring:
    get:
      operationId: getMonitoringConfig
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitoringConfig'
          description: Success
      summary: Gets the monitoring configuration of OneAgent on the specified host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: The monitoring mode of OneAgent is updated several minutes after
        the change of configuration.
      operationId: updateMonitoringConfig
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MonitoringConfig'
        description: The JSON body of the request. Contains OneAgent monitoring parameters.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the monitoring configuration of OneAgent on the specified host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/{id}/monitoring/validator:
    post:
      operationId: validateMonitoringConfig
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MonitoringConfig'
        description: The JSON body of the request. Contains OneAgent monitoring parameters.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /hosts/{id}/monitoring` request
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hosts/{id}/technologies:
    get:
      operationId: getTechHostConfigs
      parameters:
      - description: The Dynatrace entity ID of the required host.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TechMonitoringList'
          description: Success
      summary: Gets the configuration of monitored technologies on the specified host
      tags:
      - OneAgent on a host
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions/{id}:
    delete:
      description: Deletion of the extension file uninstalls the extension, making
        it unavailable for use.
      operationId: deleteExtension
      parameters:
      - description: The ID of the extension to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the ZIP file of the specified extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getExtension
      parameters:
      - description: The ID of the required extension.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
      summary: Lists the properties of the specified extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions:
    get:
      operationId: getExtensions
      parameters:
      - description: The number of results per result page. Must be between 1 and
          500
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 200
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: The cursor for the next page of results.
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionListDto'
          description: Success
      summary: Lists all uploaded extensions | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: uploadExtension
      parameters:
      - description: "Use extension-defined thresholds for alerts (`true`) or user-defined\
          \ thresholds (`false`). \n\n Extension-defined thresholds are stored in\
          \ the `plugin.json` file. \n\nIf not set, user-defined thresholds are used."
        explode: true
        in: query
        name: overrideAlerts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Extension has been uploaded. Response contains the
            ID of the extension.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Uploads a ZIP extension file | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /extensions/validator:
    post:
      operationId: validateExtension
      parameters:
      - description: "Validate only the `plugin.json` file (`true`) or the entire\
          \ extension structure (`false`). \n\n If not set, the entire extension is\
          \ validated. "
        explode: true
        in: query
        name: jsonOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
      responses:
        "204":
          description: Validated. The submitted extension is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates a ZIP extension file for `POST/extensions` request | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /extensions/{id}/states:
    get:
      operationId: getExtensionStates
      parameters:
      - description: The ID of the required extension.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results per result page. Must be between 1 and
          500
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 200
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: The cursor for the next page of results.
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: Extension state to filter.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - DISABLED
          - ERROR_AUTH
          - ERROR_COMMUNICATION_FAILURE
          - ERROR_CONFIG
          - ERROR_TIMEOUT
          - ERROR_UNKNOWN
          - INCOMPATIBLE
          - LIMIT_REACHED
          - NOTHING_TO_REPORT
          - OK
          - STATE_TYPE_UNKNOWN
          - UNINITIALIZED
          - UNSUPPORTED
          - WAITING_FOR_STATE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionStateList'
          description: Success
      summary: Lists the states of the specified extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions/{id}/global:
    get:
      operationId: getExtensionGlobalConfiguration
      parameters:
      - description: The ID of the extension to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GlobalExtensionConfiguration'
          description: Global configuration of given extension.
      summary: Get the global configuration of the specified OneAgent or JMX extension
        | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateGlobalExtensionConfiguration
      parameters:
      - description: The ID of the extension to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/GlobalExtensionConfiguration'
        description: The JSON body of the request. Contains updated configuration
          of the extension.
      responses:
        "204":
          description: Success. Extension configuration has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of the specified OneAgent or JMX extension
        | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /extensions/{id}/instances:
    get:
      operationId: getExtensionConfigurations
      parameters:
      - description: The ID of the required extension.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results per result page. Must be between 1 and
          500
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 200
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: The cursor for the next page of results.
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionConfigurationList'
          description: Success
      summary: Returns list of all local configuration instances for given extension
        | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createLocalExtensionConfiguration
      parameters:
      - description: The ID of the extension
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionConfigurationDto'
        description: The JSON body of the request. Contains new configuration of the
          extension.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The extension configuration has been created. Response
            contains the ID of the new configuration.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates instance of local configuration for given extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /extensions/{id}/binary:
    get:
      operationId: getExtensionBinary
      parameters:
      - description: The ID of the extension you want to download.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ZIP file of the extension
      summary: Downloads the ZIP file of the specified extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions/activeGateExtensionModules:
    get:
      operationId: getRemoteExtensionModules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains IDs of ActiveGate extension
            modules. Use them to configure ActiveGate extension endpoints.
      summary: List available ActiveGate extension modules | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions/{technology}/availableHosts:
    get:
      operationId: getHostsForTechnology
      parameters:
      - description: Name of requested technology
        explode: false
        in: path
        name: technology
        required: true
        schema:
          enum:
          - ACTIVE_MQ
          - ACTIVE_MQ_ARTEMIS
          - ADO_NET
          - AIX
          - AKKA
          - AMAZON_REDSHIFT
          - AMQP
          - APACHE_CAMEL
          - APACHE_CASSANDRA
          - APACHE_COUCH_DB
          - APACHE_DERBY
          - APACHE_HTTP_CLIENT_ASYNC
          - APACHE_HTTP_CLIENT_SYNC
          - APACHE_HTTP_SERVER
          - APACHE_KAFKA
          - APACHE_SOLR
          - APACHE_STORM
          - APACHE_SYNAPSE
          - APACHE_TOMCAT
          - APPARMOR
          - APPLICATION_INSIGHTS_SDK
          - ASP_DOTNET
          - ASP_DOTNET_CORE
          - ASP_DOTNET_CORE_SIGNALR
          - ASP_DOTNET_SIGNALR
          - ASYNC_HTTP_CLIENT
          - AWS_LAMBDA
          - AWS_RDS
          - AWS_SERVICE
          - AXIS
          - AZURE_FUNCTIONS
          - AZURE_SERVICE_BUS
          - AZURE_SERVICE_FABRIC
          - AZURE_STORAGE
          - BOSHBPM
          - CITRIX
          - CITRIX_COMMON
          - CITRIX_DESKTOP_DELIVERY_CONTROLLERS
          - CITRIX_DIRECTOR
          - CITRIX_LICENSE_SERVER
          - CITRIX_PROVISIONING_SERVICES
          - CITRIX_STOREFRONT
          - CITRIX_VIRTUAL_DELIVERY_AGENT
          - CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT
          - CLOUDFOUNDRY
          - CLOUDFOUNDRY_AUCTIONEER
          - CLOUDFOUNDRY_BOSH
          - CLOUDFOUNDRY_GOROUTER
          - COLDFUSION
          - CONTAINERD
          - CORE_DNS
          - COUCHBASE
          - CRIO
          - CXF
          - DATASTAX
          - DB2
          - DIEGO_CELL
          - DOCKER
          - DOTNET
          - DOTNET_REMOTING
          - ELASTIC_SEARCH
          - ENVOY
          - ERLANG
          - ETCD
          - F5_LTM
          - FSHARP
          - GARDEN
          - GLASSFISH
          - GO
          - GRAAL_TRUFFLE
          - GRPC
          - GRSECURITY
          - HADOOP
          - HADOOP_HDFS
          - HADOOP_YARN
          - HAPROXY
          - HEAT
          - HESSIAN
          - HORNET_Q
          - IBM_CICS_REGION
          - IBM_CICS_TRANSACTION_GATEWAY
          - IBM_IMS_CONNECT_REGION
          - IBM_IMS_CONTROL_REGION
          - IBM_IMS_MESSAGE_PROCESSING_REGION
          - IBM_IMS_SOAP_GATEWAY
          - IBM_INTEGRATION_BUS
          - IBM_MQ
          - IBM_MQ_CLIENT
          - IBM_WEBSHPRERE_APPLICATION_SERVER
          - IBM_WEBSHPRERE_LIBERTY
          - IIS
          - IIS_APP_POOL
          - ISTIO
          - JAVA
          - JAX_WS
          - JBOSS
          - JBOSS_EAP
          - JDK_HTTP_SERVER
          - JERSEY
          - JETTY
          - JRUBY
          - JYTHON
          - KUBERNETES
          - LIBVIRT
          - LINKERD
          - MARIADB
          - MEMCACHED
          - MICROSOFT_SQL_SERVER
          - MONGODB
          - MSSQL_CLIENT
          - MULE_ESB
          - MYSQL
          - MYSQL_CONNECTOR
          - NETFLIX_SERVO
          - NETTY
          - NGINX
          - NODE_JS
          - OK_HTTP_CLIENT
          - ONEAGENT_SDK
          - OPENCENSUS
          - OPENSHIFT
          - OPENSTACK_COMPUTE
          - OPENSTACK_CONTROLLER
          - OPENTELEMETRY
          - OPENTRACING
          - OPEN_LIBERTY
          - ORACLE_DATABASE
          - ORACLE_WEBLOGIC
          - OWIN
          - PERL
          - PHP
          - PHP_FPM
          - PLAY
          - POSTGRE_SQL
          - POSTGRE_SQL_DOTNET_DATA_PROVIDER
          - POWER_DNS
          - PROGRESS
          - PYTHON
          - RABBIT_MQ
          - REACTOR_CORE
          - REDIS
          - RESTEASY
          - RESTLET
          - RIAK
          - RUBY
          - SAG_WEBMETHODS_IS
          - SAP
          - SAP_HANADB
          - SAP_HYBRIS
          - SAP_MAXDB
          - SAP_SYBASE
          - SCALA
          - SELINUX
          - SHAREPOINT
          - SPARK
          - SPRING
          - SQLITE
          - THRIFT
          - TIBCO
          - TIBCO_BUSINESS_WORKS
          - TIBCO_EMS
          - UNDERTOW_IO
          - VARNISH_CACHE
          - VIM2
          - VIRTUAL_MACHINE_KVM
          - VIRTUAL_MACHINE_QEMU
          - WILDFLY
          - WINDOWS_CONTAINERS
          - WINK
          - ZERO_MQ
          type: string
        style: simple
      - description: "Filters the resulting set of hosts by the specified tag. \n\n\
          \ You can specify several tags in the following format: `tag=tag1&tag=tag2`.\
          \ The host has to match **all** the specified tags."
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Only return hosts that are part of the specified management zone.
        explode: true
        in: query
        name: managementZone
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filters the resulting set of hosts by the specified host group.\
          \ \n\n Specify the Dynatrace IDs of the host group you're interested in."
        explode: true
        in: query
        name: hostGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of hosts by the specified host group.\
          \ \n\n Specify the name of the host group you're interested in."
        explode: true
        in: query
        name: hostGroupName
        required: false
        schema:
          type: string
        style: form
      - description: The number of results per result page. Must be between 1 and
          500
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 200
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: The cursor for the next page of results.
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HostList'
          description: Success
      summary: Lists all available hosts that have specified technology running |
        maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /extensions/{id}/instances/{configurationId}:
    delete:
      operationId: deleteLocalExtensionConfiguration
      parameters:
      - description: The ID of the extension where you want to delete the configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the configuration to be deleted.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes an existing configuration of the extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getLocalExtensionConfiguration
      parameters:
      - description: The ID of the extension.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionConfigurationDto'
          description: Success
      summary: Returns instance of local configuration for given extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateLocalExtensionConfiguration
      parameters:
      - description: "The ID of the extension where you want to update the configuration.\
          \ \n\nIf you set the extension ID in the body as well, it must match this\
          \ ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the configuration to be updated.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionConfigurationDto'
        description: The JSON body of the request. Contains updated parameters of
          the extension configuration.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates instance of local configuration for given extension | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /extensions/{id}/instances/validator:
    post:
      operationId: validateLocalExtensionConfiguration
      parameters:
      - description: The ID of the extension.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionConfigurationDto'
        description: The JSON body of the request. Contains new configuration of the
          extension to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `POST /extensions/{id}/instances` request
        | maturity=EARLY_ADOPTER
      tags:
      - Extensions
      x-feature-flag: EXTENSIONS_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /frequentIssueDetection:
    get:
      operationId: getFrequentIssueDetectionConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FrequentIssueDetectionConfig'
          description: Success
      summary: Gets the configuration of frequent issue detection
      tags:
      - Frequent issue detection
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateFrequentIssueDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FrequentIssueDetectionConfig'
        description: The JSON body of the request, containing parameters of the frequent
          issue detection configuration
      responses:
        "204":
          description: Success. Configuration has been updated. Response doesn't have
            a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of frequent issue detection
      tags:
      - Frequent issue detection
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /frequentIssueDetection/validator:
    post:
      operationId: validateFrequentIssueDetectionConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FrequentIssueDetectionConfig'
        description: The JSON body of the request, containing parameters of the frequent
          issue detection configuration
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /frequentIssueDetection` request
      tags:
      - Frequent issue detection
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /geographicRegions/ipAddressMappings:
    get:
      operationId: getGeolocationRegionsIpAddress
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/IpAddressMappings'
          description: Success
      summary: Gets the configuration of mapping between IP address and geographic
        regions
      tags:
      - RUM - Geographic regions - IP address mapping
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: The request overwrites the existing configuration. Any rules not
        presented in the payload will be lost.
      operationId: putGeolocationRegionsIpAddress
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IpAddressMappings'
        description: The JSON body of the request. Contains the configuration of the
          IP address mapping.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of mapping between IP address and geographic
        regions
      tags:
      - RUM - Geographic regions - IP address mapping
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /geographicRegions/ipAddressMappings/validator:
    post:
      operationId: validateGeolocationRegionsIpAddress
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IpAddressMappings'
        description: The JSON body of the request. Contains the configuration of the
          IP address.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /geographicRegions/ipAddressMappings`
        request
      tags:
      - RUM - Geographic regions - IP address mapping
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /geographicRegions/ipDetectionHeaders:
    get:
      operationId: getGeolocationRegionsIpHeaders
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/IpDetectionHeaders'
          description: Success
      summary: Gets the configuration of custom client IP headers
      tags:
      - RUM - Geographic regions - custom client IP headers
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: The request overwrites the existing configuration. Any headers
        not presented in the payload will be lost.
      operationId: putGeolocationRegionsIpHeaders
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IpDetectionHeaders'
        description: The JSON body of the request. Contains the configuration of the
          custom client IP headers.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the configuration of custom client IP headers
      tags:
      - RUM - Geographic regions - custom client IP headers
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /geographicRegions/ipDetectionHeaders/validator:
    post:
      operationId: validateGeolocationRegionsIpHeaders
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IpDetectionHeaders'
        description: The JSON body of the request. Contains the configuration of the
          custom client IP headers to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /geographicRegions/ipDetectionHeaders`
        request
      tags:
      - RUM - Geographic regions - custom client IP headers
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hostgroups/{id}/autoupdate:
    get:
      operationId: getAutoUpdateConfig_2
      parameters:
      - description: The Dynatrace entity ID of the required host group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HostGroupAutoUpdateConfig'
          description: Success
      summary: Gets the configuration of OneAgent auto-update in the specified host
        group
      tags:
      - OneAgent in a host group
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "OneAgents are updated several minutes after the change of configuration.\
        \ \n\nThe process can take more time depending on number of OneAgents in the\
        \ update queue."
      operationId: updateAutoUpdateConfig_1
      parameters:
      - description: The Dynatrace entity ID of the required host group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostGroupAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters.
      responses:
        "204":
          description: Success. The configuration has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of OneAgent auto-update in the specified
        host group
      tags:
      - OneAgent in a host group
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hostgroups/{id}/autoupdate/validator:
    post:
      operationId: validateAutoUpdateConfig_2
      parameters:
      - description: The Dynatrace entity ID of the required host group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/HostGroupAutoUpdateConfig'
        description: The JSON body of the request. Contains OneAgent auto-update parameters
          to be validated.
      responses:
        "204":
          description: Success. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /hostgroups/{id}/autoupdate` request
      tags:
      - OneAgent in a host group
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /hostgroups/{id}:
    get:
      operationId: getHostGroupConfig
      parameters:
      - description: The Dynatrace entity ID of the required host group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OneAgentHostGroupConfig'
          description: Success
      summary: Gets the OneAgent configuration in the specified host group
      tags:
      - OneAgent in a host group
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /service/ibmMQTracing/queueManager/{name}:
    delete:
      operationId: deleteQueueManager
      parameters:
      - description: The name of the queue manager to be deleted.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Deletes the specified queue manager
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getQueueManager
      parameters:
      - description: The name of the queue manager you're inquiring.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueueManager'
          description: Success
      summary: Gets the parameters of the specified queue manager
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the queue manager with the specified ID doesn’t exist, a new
        queue manager will be created.
      operationId: putQueueManager
      parameters:
      - description: "The name of the queue manager to be updated. \n\n The name of\
          \ the queue manager in the body of the request must match this name."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/QueueManager'
        description: The JSON body of the request containing updated parameters of
          the queue manager.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new queue manager has been created. Response contains
            the name of the queue manager.
        "204":
          description: Success. The queue manager has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. See the response body for details.
      summary: Updates the specified queue manager or creates a new one
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/ibmMQTracing/queueManager:
    get:
      description: "This endpoint is used to provide Dynatrace with your IBM MQ setup\
        \ regarding alias, remote and cluster queues. \n\n This is required to facilitate\
        \ end to end tracing for messages send via IBM MQ where sender and receiver\
        \ use different queue names. Without this information Dynatrace would still\
        \ trace all requests, but would not be able to stitch service calls that use\
        \ these IBM MQ features."
      operationId: getQueueManagers
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available queue managers
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /service/ibmMQTracing/imsEntryQueue/{id}:
    delete:
      operationId: deleteImsEntryQueue
      parameters:
      - description: The ID of the IBM IMS entry queue to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Deletes the specified IBM IMS entry queue
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getImsEntryQueue
      parameters:
      - description: The ID of the required IBM IMS entry queue.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/IbmMQImsEntryQueue'
          description: Success
      summary: Gets the properties of the specified IBM IMS entry queue
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the IBM IMS entry queue with the specified ID does not exist,
        a new IBM IMS entry queue will be created.
      operationId: createOrUpdateImsEntryQueue
      parameters:
      - description: |-
          The ID of the IBM IMS entry queue to update.

           If you set the ID in the body as well, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IbmMQImsEntryQueue'
        description: JSON body of the request, containing updated parameters of the
          IBM IMS entry queue.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new IBM IMS entry queue has been created. The
            response body contains the ID and name of the created IBM IMS entry queue.
        "204":
          description: Success. The IBM IMS entry queue has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates an existing IBM IMS entry queue or creates a new one
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/ibmMQTracing/imsEntryQueue:
    get:
      description: "This endpoint is used to provide Dynatrace with all IBM MQ queues\
        \ (defined by QueueManagerName and QueueName) which are used to send messages\
        \ to IBM IMS on the mainframe. \n\n This is required to facilitate end to\
        \ end tracing for messages sent via IBM MQ to IBM IMS."
      operationId: getAllImsEntryQueues
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all IBM IMS entry queues
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as it will be automatically assigned
        by the Dynatrace server.
      operationId: createImsEntryQueue
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IbmMQImsEntryQueue'
        description: JSON body of the request, containing parameters of the new IBM
          IMS entry queue.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The IBM IMS entry queue has been created. The response
            body contains the generated ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates an IBM IMS entry queue
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/ibmMQTracing/imsEntryQueue/{id}/validator:
    post:
      operationId: validateImsEntryQueueForPut
      parameters:
      - description: The ID of the IBM IMS entry queue to validate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IbmMQImsEntryQueue'
        description: JSON body of the request, containing IBM IMS entry queue configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates update of existing IBM IMS entry queues for the `PUT /service/ibmMQTracing/imsEntryQueue/{id}`
        request
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/ibmMQTracing/imsEntryQueue/validator:
    post:
      operationId: validateImsEntryQueueForPost
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/IbmMQImsEntryQueue'
        description: JSON body of the request, containing IBM IMS entry queue configuration
          to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates new IBM IMS entry queues for the `POST /service/ibmMQTracing/imsEntryQueue`
        request
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/ibmMQTracing/queueManager/{name}/validator:
    post:
      operationId: validateQueueManager
      parameters:
      - description: "The name of the queue manager to be validated. \n\n The name\
          \ of the queue manager in the body of the request must match this name."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/QueueManager'
        description: The JSON body of the request containing updated parameters of
          the queue manager.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. See the response body for details.
      summary: Validates the queue manager update for the `PUT /service/ibmMQTracing/queueManager/{name}`
        request
      tags:
      - Service - IBM MQ tracing
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /managementZones:
    get:
      operationId: listManagementZones
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all configured management zones
      tags:
      - Management zones
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createManagementZone
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManagementZone'
        description: The JSON body of the request. Contains parameters of the new
          management zone.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The management zone has been created. The response
            contains the ID of the new zone.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new management zone
      tags:
      - Management zones
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /managementZones/{id}:
    delete:
      operationId: deleteManagementZone
      parameters:
      - description: The ID of the management zone to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Deletes the specified management zone
      tags:
      - Management zones
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getManagementZone
      parameters:
      - description: The ID of the required management zone.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Flag to include process group references to the response. \n\
          \n Process group references aren't compatible across environments. When\
          \ this flag is set to false, conditions with process group references will\
          \ be removed. If that leads to a rule having no conditions, the entire rule\
          \ will be removed."
        explode: true
        in: query
        name: includeProcessGroupReferences
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ManagementZone'
          description: Success
      summary: Lists the parameters of the specified management zone
      tags:
      - Management zones
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a management zone with the specified ID doesn't exist, a new
        one is created.
      operationId: updateManagementZone
      parameters:
      - description: |-
          The ID of the management zone to be updated.

           If you set the ID in the body as well, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManagementZone'
        description: The JSON body of the request. Contains updated parameters of
          the management zone.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The management zone has been created. The response
            contains the ID of the new zone.
        "204":
          description: Success. The management zone has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified management zone
      tags:
      - Management zones
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /managementZones/validator:
    post:
      operationId: validateCreateManagementZone
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManagementZone'
        description: The JSON body of the request, containing the management zone
          parameters to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates a new management zone for the `POST /managementZones` request
      tags:
      - Management zones
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /managementZones/{id}/validator:
    post:
      operationId: validateUpdateManagementZone
      parameters:
      - description: The ID of the management zone to validate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManagementZone'
        description: The JSON body of the request, containing the management zone
          parameters to validate.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validate updates of existing management zone for the `PUT /managementZones/{id}`
        request
      tags:
      - Management zones
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/log/{metricKey}/validator:
    post:
      operationId: validateMetric
      parameters:
      - description: The key of the custom log metric to be validated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/LogMetricConfig'
        description: The JSON body of the request. Contains definition of the custom
          log metric to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See the response body for details
      summary: Validates the payload for the `PUT /calculatedMetrics/log/{metricKey}`
        request. | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Log monitoring
      x-feature-flag: LOGANALYTICS_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/log/{metricKey}:
    delete:
      operationId: deleteLogMetricConfig
      parameters:
      - description: The key of the custom log metric to be deleted.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See the response body for details
      summary: Deletes the specified custom log metric definition | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Log monitoring
      x-feature-flag: LOGANALYTICS_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getLogMetricConfig
      parameters:
      - description: The key of the required custom log metric.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/LogMetricConfig'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See the response body for details
      summary: Gets the definition of the specified custom log metric | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Log monitoring
      x-feature-flag: LOGANALYTICS_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the metric definition with the specified key already exists,
        it is updated.
      operationId: updateOrCreateLogMetricConfig
      parameters:
      - description: "The required key of the custom log metric. The key must have\
          \ the `calc:log.` prefix. \n\n The key in the body of the request must match\
          \ this key."
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/LogMetricConfig'
        description: The JSON body of the request. Contains the definition of the
          custom log metric.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new metric definition has been created. The response
            body contains the key and the name of the new metric.
        "204":
          description: Success. The metric definition has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new custom log metric | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Log monitoring
      x-feature-flag: LOGANALYTICS_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/log:
    get:
      operationId: listLogMetricConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See the response body for details
      summary: Lists all custom log metrics configured in your environment | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Log monitoring
      x-feature-flag: LOGANALYTICS_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /calculatedMetrics/mobile/{metricKey}:
    delete:
      operationId: deleteMobileMetric
      parameters:
      - description: The key of the metric to be deleted.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified calculated metric for mobile or custom app
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getMobileMetric
      parameters:
      - description: The key of the required metric.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CalculatedMobileMetric'
          description: Success
      summary: Gets the descriptor of the specified calculated metric for mobile or
        custom app
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateMobileMetric
      parameters:
      - description: The key of the metric to be updated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedMobileMetricUpdate'
        description: The JSON body of the request. Contains the updated definition
          of the calculated mobile metric.
      responses:
        "204":
          description: Success. The metric has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified calculated metric for a mobile or custom app
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/mobile/validator:
    post:
      operationId: validateCreateMobileMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedMobileMetric'
        description: "The JSON body of the request. Contains the definition of the\
          \ metric to be validated. \n\nThe key of the metric must be omitted."
      responses:
        "204":
          description: Validated. The submitted metric is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /calculatedMetrics/mobile` request
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/mobile/{metricKey}/validator:
    post:
      operationId: validateUpdateMobileMetric
      parameters:
      - description: The key of the metric to be validated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedMobileMetricUpdate'
        description: The JSON body of the request. Contains the definition of the
          metric to be validated.
      responses:
        "204":
          description: Validated. The submitted metric is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /calculatedMetrics/mobile/{metricKey}`
        request
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/mobile:
    get:
      operationId: listMobileMetrics
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all calculated metrics for mobile and custom apps configured
        in your environment
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createMobileMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedMobileMetric'
        description: The JSON body of the request. Contains the definition of the
          new calculated metric for mobile or custom app.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The calculated mobile metric has been created. Response
            contains its key and name.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new calculated metric for a mobile or custom app
      tags:
      - Calculated metrics - Mobile & custom applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/rum:
    get:
      operationId: listRumMetrics
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all calculated RUM metrics
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createRumMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RumMetric'
        description: The JSON body of the request. Contains the definition of the
          new calculated RUM metric.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The metric has been created. Response contains its
            key and name.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new calculated RUM metric
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/rum/{metricKey}:
    delete:
      operationId: deleteRumMetric
      parameters:
      - description: The key of the metric to be deleted.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified calculated RUM metric
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getRumMetric
      parameters:
      - description: The key of the required metric.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RumMetric'
          description: Success
      summary: Gets the descriptor of the specified calculated RUM metric
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateRumMetric
      parameters:
      - description: The key of the calculated RUM metric to be updated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RumMetricUpdate'
        description: The JSON body of the request. Contains the updated parameters
          of the calculated RUM metric.
      responses:
        "204":
          description: Success. The metric has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified calculated RUM metric
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/rum/validator:
    post:
      description: The body must not provide an ID.
      operationId: validateCreateRumMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RumMetric'
        description: The JSON body of the request. Contains the parameters of the
          calculated RUM metric to be validated.
      responses:
        "204":
          description: Validated. The submitted metric is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /calculatedMetrics/rum` request
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/rum/{metricKey}/validator:
    post:
      operationId: validateUpdateRumMetric
      parameters:
      - description: The key of the calculated RUM metric to be validated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RumMetricUpdate'
        description: The JSON body of the request. Contains the parameters of the
          calculated RUM metric to be validated.
      responses:
        "204":
          description: Validated. The submitted metric is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /calculatedMetrics/rum/{metricKey}`
        request
      tags:
      - Calculated metrics - Web applications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/service/{metricKey}:
    delete:
      operationId: deleteServiceMetric
      parameters:
      - description: The key of the calculated service metric to be deleted.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The calculated service metric has been deleted. Response
            doesn't have a body.
      summary: Deletes the specified calculated service metric
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getServiceMetric
      parameters:
      - description: The key of the required calculated service metric.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CalculatedServiceMetric'
          description: Success
      summary: Gets the descriptor of the specified calculated service metric
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the calculated service metric with the specified key doesn't
        exist, a new metric is created.
      operationId: updateServiceMetric
      parameters:
      - description: "The key of the calculated service metric to be updated. \n\n\
          \ The key of the calculated service metric in the body of the request must\
          \ match this key."
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedServiceMetric'
        description: The JSON body of the request. Contains updated parameters of
          the calculated service metric.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new calculated service metric has been created.
            Response contains the key of the new metric.
        "204":
          description: Success. The calculated service metric has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified calculated service metric
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/service:
    get:
      operationId: listServiceMetrics
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all calculated service metrics configured in your environment
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createServiceMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedServiceMetric'
        description: The JSON body of the request. Contains parameters of the new
          calculated service metric.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The calculated service metric has been created. Response
            contains the key of the new metric.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new calculated service metric
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/service/validator:
    post:
      operationId: validateCreateServiceMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedServiceMetric'
        description: The JSON body of the request. Contains the calculated service
          metric to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `POST /calculatedMetric/service` request
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/service/{metricKey}/validator:
    post:
      operationId: validateUpdateServiceMetric
      parameters:
      - description: |-
          The key of the calculated service metric to be validated .

           The key of the metric in the body of the request must match this key.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedServiceMetric'
        description: The JSON body of the request. Contains the calculated service
          metric to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /calculatedMetric/service/{id}`
        request
      tags:
      - Calculated metrics - Services
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/synthetic/{metricKey}:
    delete:
      operationId: deleteSyntheticMetric
      parameters:
      - description: The key of the calculated synthetic metric to be deleted.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the specified calculated synthetic metric | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getSyntheticMetric
      parameters:
      - description: The key of the required calculated synthetic metric.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CalculatedSyntheticMetric'
          description: Success
      summary: Gets the descriptor of the specified calculated synthetic metric |
        maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateSyntheticMetric
      parameters:
      - description: The key of the calculated synthetic metric to be updated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticMetricUpdate'
        description: The JSON body of the request. Contains the update to the calculated
          synthetic metric.
      responses:
        "204":
          description: Success. The calculated synthetic metric has been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates the specified calculated synthetic metric | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/synthetic:
    get:
      operationId: listSyntheticMetrics
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all calculated synthetic metrics available in your environment
        | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createSyntheticMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedSyntheticMetric'
        description: The JSON body of the request. Contains definition of the new
          calculated synthetic metric.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The calculated synthetic metric has been created.
            Response contains its key and name.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new calculated synthetic metric | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/synthetic/{metricKey}/validator:
    post:
      operationId: validateUpdateSyntheticMetric
      parameters:
      - description: The key of the metric to be validated.
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticMetricUpdate'
        description: The JSON body of the request. Contains the update to the metric
          to be validated.
      responses:
        "204":
          description: Validated. The submitted calculated synthetic metric is valid.
            The response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /calculatedMetrics/synthetic/{metricKey}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /calculatedMetrics/synthetic/validator:
    post:
      operationId: validateCreateSyntheticMetric
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CalculatedSyntheticMetric'
        description: "The JSON body of the request. Contains the definition of the\
          \ metric to be validated. \n\nThe key of the metric must be omitted."
      responses:
        "204":
          description: Validated. The submitted calculated synthetic metric is valid.
            The response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /calculatedMetrics/synthetic` request
        | maturity=EARLY_ADOPTER
      tags:
      - Calculated metrics - Synthetic
      x-feature-flag: SYNTHETIC_METRIC_CONFIG_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /notifications:
    get:
      operationId: listNotificationConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotificationConfigStubListDto'
          description: Success
      summary: Lists all notification configurations available in your environment
      tags:
      - Notifications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createNotificationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
        description: The JSON body of the request. Contains parameters of the new
          notification configuration.
      responses:
        "201":
          description: Success. The new notification configuration has been created.
            The response contains the ID of the new notification configuration.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new notification configuration
      tags:
      - Notifications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /notifications/{id}:
    delete:
      operationId: deleteNotificationConfig
      parameters:
      - description: The ID of the notification configuration to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The notification configuration has been deleted. The
            response doesn't have a body.
      summary: Deletes the specified notification configuration
      tags:
      - Notifications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getNotificationConfig
      parameters:
      - description: The ID of the required notification configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
          description: Success
      summary: Gets the properties of the specified notification configuration
      tags:
      - Notifications
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a notification configuration with the specified ID doesn't exist,
        a new configuration is created.
      operationId: updateNotificationConfig
      parameters:
      - description: "The ID of the notification configuration to be updated. \n\n\
          \ If you set the ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
        description: The JSON body of the request. Contains updated parameters of
          the notification configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotificationConfigStub'
          description: Success. The new notification configuration has been created.
            The response contains the ID of the new notification configuration.
        "204":
          description: Success. The notification configuration has been updated. The
            response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing notification configuration or creates a new one
      tags:
      - Notifications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /notifications/validator:
    post:
      operationId: validateCreateNotificationConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
        description: The JSON body of the request. Contains the notification configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /notifications` request
      tags:
      - Notifications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /notifications/{id}/validator:
    post:
      operationId: validateUpdateNotificationConfig
      parameters:
      - description: The ID of the notification configuration to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
        description: The JSON body of the request. Contains the notification configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload the `PUT /notifications/{id}` request
      tags:
      - Notifications
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /plugins/{id}/binary:
    delete:
      description: Deletion of the plugin file uninstalls the plugin, making it unavailable
        for use.
      operationId: deletePlugin
      parameters:
      - description: The ID of the plugin to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes the ZIP file of the specified plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getPluginBinary
      parameters:
      - description: The ID of the plugin you want to download.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: object
          description: Success
      summary: Downloads the ZIP file of the specified plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /plugins/validator:
    post:
      operationId: validatePlugin
      parameters:
      - description: "Validate only the `plugin.json` file (`true`) or the entire\
          \ plugin structure (`false`). \n\n If not set, the entire plugin is validated. "
        explode: true
        in: query
        name: jsonOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
      responses:
        "204":
          description: Validated. The submitted plugin is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates a ZIP plugin file for `POST/plugins` request
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /plugins/{id}:
    get:
      operationId: getPlugin
      parameters:
      - description: The ID of the required plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Success
      summary: Lists the properties of the specified plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /plugins:
    get:
      operationId: getPlugins
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all uploaded plugins
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: uploadPlugin
      parameters:
      - description: "Use plugin-defined thresholds for alerts (`true`) or user-defined\
          \ thresholds (`false`). \n\n Plugin-defined thresholds are stored in the\
          \ `plugin.json` file. \n\nIf not set, user-defined thresholds are used."
        explode: true
        in: query
        name: overrideAlerts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Plugin has been uploaded. Response contains the ID
            of the plugin.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Uploads a ZIP plugin file
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /plugins/{id}/states:
    get:
      operationId: getPluginStates
      parameters:
      - description: The ID of the required plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PluginStateList'
          description: Success
      summary: Lists the states of the specified plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /plugins/{id}/endpoints/{endpointId}:
    delete:
      operationId: deleteRemotePluginEndpoint
      parameters:
      - description: The ID of the plugin where you want to delete an endpoint.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the endpoint to be deleted.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
      summary: Deletes an existing endpoint of the ActiveGate plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getRemotePluginEndpoint
      parameters:
      - description: The ID of the required plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required endpoint.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemotePluginEndpoint'
          description: Success
      summary: Gets parameters of the specified endpoint of the ActiveGate plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateRemotePluginEndpoint
      parameters:
      - description: "The ID of the plugin where you want to update an endpoint. \n\
          \nIf you set the plugin ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "The ID of the endpoint to be updated. \n\nIf you set the endpoint\
          \ ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemotePluginEndpoint'
        description: The JSON body of the request. Contains updated parameters of
          the plugin endpoint.
      responses:
        "204":
          description: Success. The endpoint has been updated. Response doesn't have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing endpoint of the ActiveGate plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /plugins/{id}/endpoints:
    get:
      operationId: getRemotePluginEndpoints
      parameters:
      - description: The ID of the required plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists endpoints of the specified ActiveGate plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID of the endpoint, as IDs are automatically
        assigned.
      operationId: createRemotePluginEndpoint
      parameters:
      - description: The ID of the plugin where you want to create an endpoint.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemotePluginEndpoint'
        description: The JSON body of the request. Contains parameters of the new
          plugin endpoint.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The plugin endpoint has been created. Response contains
            the ID of the new endpoint.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new endpoint for the specified ActiveGate plugin
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /plugins/activeGatePluginModules:
    get:
      operationId: getRemotePluginModules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains IDs of ActiveGate plugin modules.
            Use them to configure plugin endpoints.
      summary: List available ActiveGate plugin modules
      tags:
      - Plugins
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /plugins/{id}/endpoints/validator:
    post:
      operationId: validateRemotePluginEndpoint
      parameters:
      - description: The ID of the required plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemotePluginEndpoint'
        description: The JSON body of the request. Contains parameters of the new
          plugin endpoint.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /plugins/{id}/endpoints` request
      tags:
      - Plugins
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /remoteEnvironments/{id}:
    delete:
      operationId: deleteRemoteEnvironmentConfig
      parameters:
      - description: The ID of the configuration to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The configuration has been deleted. The response doesn't
            have a body.
      summary: Deletes the specified remote environment configuration | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getRemoteEnvironmentConfig
      parameters:
      - description: The ID of the required configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteEnvironmentConfigDto'
          description: Success
      summary: Gets the properties of the specified remote environment configuration
        | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a remote environment configuration with the specified ID doesn't
        exist, a new configuration is created.
      operationId: updateRemoteEnvironmentConfig
      parameters:
      - description: "The ID of the configuration to be updated. \n\n If you set the\
          \ ID in the body as well, it must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteEnvironmentConfigDto'
        description: The JSON body of the request. Contains updated parameters of
          the remote environment configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteEnvironmentConfigStub'
          description: Success. A new remote environment configuration has been created.
            The response contains the ID of the new configuration.
        "204":
          description: Success. The configuration has been updated. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing remote environment configuration or creates a new
        one | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /remoteEnvironments:
    get:
      operationId: listRemoteEnvironmentConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteEnvironmentConfigListDto'
          description: Success
      summary: Lists all remote environment configurations | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: "The body must not provide an ID. An ID is assigned automatically\
        \ by the Dynatrace server. \n\nBe sure to prepare a token with the **Fetch\
        \ data from a remote environment** (`RestRequestForwarding`) scope. You can\
        \ create such a token via [Tokens API](https://www.dynatrace.com/support/help/shortlink/api-tokens-post-new)."
      operationId: createRemoteEnvironmentConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteEnvironmentConfigDto'
        description: The JSON body of the request. Contains parameters of the new
          remote environment configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteEnvironmentConfigStub'
          description: Success. A new remote environment configuration has been created.
            The response contains the ID of the new configuration.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new remote environment configuration | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /remoteEnvironments/{id}/validator:
    post:
      operationId: validateUpdateRemoteEnvironmentConfig
      parameters:
      - description: The ID of the remote environment configuration to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteEnvironmentConfigDto'
        description: The JSON body of the request. Contains the remote environment
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /remoteEnvironments/{id}` request
        | maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /remoteEnvironments/validator:
    post:
      operationId: validateCreateRemoteEnvironmentConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteEnvironmentConfigDto'
        description: The JSON body of the request. Contains the remote environment
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /remoteEnvironments` request |
        maturity=EARLY_ADOPTER
      tags:
      - Remote environments
      x-feature-flag: REMOTE_ENVIRONMENT_CONFIG_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports:
    get:
      operationId: listReports
      parameters:
      - description: Type of a report.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - DASHBOARD
          type: string
        style: form
      - description: Referencing source entity of a report (e.g. dashboard).
        explode: true
        in: query
        name: sourceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReportStubList'
          description: Success
      summary: Lists all reports available in your environment | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createReport
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DashboardReport'
        description: The JSON body of the request. Contains parameters of the new
          report.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new report has been created. The response contains
            the ID of the new report.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports/{id}/subscribe:
    post:
      operationId: subscribeReport
      parameters:
      - description: The ID of the report to subscribe to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReportSubscriptions'
        description: The JSON body of the request. Contains a list of new subscribers.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new subscriptions have been created. The response
            body contains the report ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Subscribes to the specified report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports/{id}:
    delete:
      operationId: deleteReport
      parameters:
      - description: The ID of the report to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The report has been deleted. Response doesn't have
            a body.
      summary: Deletes the specified report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getReport
      parameters:
      - description: The ID of the required report.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DashboardReport'
          description: Success. The response body contains parameters of the report.
      summary: Gets the properties of the specified report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a report with the specified ID doesn't exist, a new report is
        created.
      operationId: createOrUpdateReport
      parameters:
      - description: "The ID of the report to be updated. \n\n The ID in the request\
          \ body must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DashboardReport'
        description: The JSON body of the request. Contains updated parameters of
          the report.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new report has been created. The response contains
            the ID of the new report.
        "204":
          description: Success. The report has been updated. Response doesn't have
            a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports/{id}/unsubscribe:
    post:
      operationId: unsubscribeReport
      parameters:
      - description: The ID of the report to unsubscribe from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReportSubscriptions'
        description: The JSON body of the request. Contains a list of recipients to
          be unsubscribed.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The subscriptions have been revoked. The response
            body contains the report ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Unsubscribes from the specified report | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports/validator:
    post:
      description: The body must not provide an ID.
      operationId: validateCreateReport
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DashboardReport'
        description: The JSON body of the request. Contains the report to be validated.
      responses:
        "204":
          description: Validated. The submitted report is valid. The response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /reports` request | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /reports/{id}/validator:
    post:
      operationId: validateCreateOrUpdateReport
      parameters:
      - description: "The ID of the report to be validated. \n\n The ID in the request\
          \ body must match this ID."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DashboardReport'
        description: The JSON body of the request. Contains the report to be validated.
      responses:
        "204":
          description: Validated. The submitted report is valid. Response doesn't
            have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /reports/{id}` request | maturity=EARLY_ADOPTER
      tags:
      - Reports
      x-feature-flag: DASHBOARD_REPORTS_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/requestAttributes/{id}:
    delete:
      operationId: deleteRequestAttributesConfig
      parameters:
      - description: The ID of the request attribute to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Deletes the specified request attribute
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`CaptureRequestData` (Capture request data)'
    get:
      operationId: getRequestAttributesConfig
      parameters:
      - description: The ID of the required request attribute.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Flag to include process group references to the response. \n\
          \n Process Group group references aren't compatible across environments."
        explode: true
        in: query
        name: includeProcessGroupReferences
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RequestAttribute'
          description: Success
      summary: Shows the properties of the specified request attribute
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateRequestAttributesConfig
      parameters:
      - description: |-
          The ID of the request attribute to be updated.

           If you set the ID in the body as well, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestAttribute'
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The request attribute with the specified ID has been
            created. The ID of the new configuration is returned.
        "204":
          description: Success. Request attribute has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing request attribute or creates a new one
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`CaptureRequestData` (Capture request data)'
  /service/requestAttributes:
    get:
      operationId: listRequestAttributesConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available request attributes
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as IDs are automatically assigned.
      operationId: createRequestAttributesConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestAttribute'
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Request attribute has been created. The ID of the
            new configuration is returned.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new request attribute
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`CaptureRequestData` (Capture request data)'
  /service/requestAttributes/{id}/validator:
    post:
      operationId: validateUpdateRequestAttributesConfig
      parameters:
      - description: The ID of the request attribute to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestAttribute'
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate updates of existing request attribute for the `PUT /requestAttributes/{id}`
        request
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`CaptureRequestData` (Capture request data)'
  /service/requestAttributes/validator:
    post:
      operationId: validateCreateRequestAttributesConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestAttribute'
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates new request attributes for the `POST /requestAttributes`
        request
      tags:
      - Service - Request attributes
      x-token-scopes:
      - '`CaptureRequestData` (Capture request data)'
  /service/requestNaming:
    get:
      operationId: listRequestNaming
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all request naming rules along with their parameters
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The new rule goes to the end of the rules list and will be the
        last to evaluate. Existing rules remain unaffected.
      operationId: createRequestNaming
      parameters:
      - description: Order of the new request naming rule. Set to `PREPEND` to prepend
          it to the list, `APPEND` to append it. Defaults to `APPEND`.
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestNaming'
        description: "The JSON body of the request containing parameters of the new\
          \ request naming rule. \n\n You must not specify the ID of the rule!"
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The request naming has been created. Response contains
            the new service's ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new request naming rule
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/requestNaming/order:
    put:
      description: This request reorders the request namings according to the given
        list of IDs. Request namings not present in the body of the request will retain
        their relative ordering but will be ordered *after* all those present in the
        request.
      operationId: orderRequestNaming
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: JSON body of the request containing the IDs of the request naming
          rules in the desired order. Any further properties (*name*, *description*)
          will be ignored.
      responses:
        "204":
          description: Success. Request namings have been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the request namings
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/requestNaming/{id}:
    delete:
      operationId: deleteRequestNaming
      parameters:
      - description: The ID of the request naming rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The rule has been deleted. Response doesn't have a
            body.
      summary: Deletes the specified request naming rule
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getRequestNaming
      parameters:
      - description: The ID of the request naming rule you're inquiring.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RequestNaming'
          description: Success
      summary: Gets the parameters of the specified request naming rule
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If the rule with the specified ID doesn't exist, a new rule will
        be created at the end of the rules list and will be the last to evaluate.
      operationId: updateRequestNaming
      parameters:
      - description: |-
          The ID of the request naming to be updated.

           The ID of the request naming in the body of the request must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestNaming'
        description: The JSON body of the request containing updated parameters of
          the request naming.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Request naming rule has been created. Response contains
            the new request naming rule's ID and name.
        "204":
          description: Success. Request naming rule has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the specified request naming rule
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/requestNaming/{id}/validator:
    post:
      description: If the rule with the specified ID doesn't exist, a new rule will
        be created at the end of the rules list and will be the last to evaluate.
      operationId: validateUpdateRequestNaming
      parameters:
      - description: |-
          The ID of the request naming to be updated.

           The ID of the request naming in the body of the request must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestNaming'
        description: The JSON body of the request containing updated parameters of
          the request naming.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the new request naming for the `PUT /requestNaming/{id}`
        request
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/requestNaming/validator:
    post:
      operationId: validateCreateRequestNaming
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RequestNaming'
        description: "The JSON body of the request containing parameters of the new\
          \ request naming rule. \n\n You must not specify the ID of the rule!"
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the new request naming rule for the `POST /requestNaming`
        request
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/resourceNaming:
    get:
      description: Lists all extensions which currently are renamed to e.g., `Image`
      operationId: get
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ResourceNaming'
          description: Success
      summary: Lists the global service resource requests.
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: Update all extensions which are renamed to `Image` or `Binary`
      operationId: put
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ResourceNaming'
        required: true
      responses:
        "204":
          description: Success. The configuration is updated. Response does not have
            a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. See the response body for details.
      summary: Updates the global service resource requests.
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/resourceNaming/validator:
    post:
      operationId: validate
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ResourceNaming'
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. See the response body for details.
      summary: Validates new resource requests settings for the `PUT /service/resourceRequest`
        request.
      tags:
      - Service - Request naming
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_REQUEST:
    get:
      operationId: listRequestDetectionRules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains the ordered list of rules.
      summary: Lists all full web service detection rules | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createRequestDetectionRule
      parameters:
      - description: "The position of the new rule: \n\n * `APPEND`: at the bottom\
          \ of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If\
          \ not set, the `APPEND` is used."
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebRequestRule'
        description: "The JSON body of the request. Contains parameters of the new\
          \ service detection rule. \n\n You must not specify the ID of the rule!\
          \ \n\nThe **order** field is ignored in this request. To enforce a particular\
          \ order, use the `PUT /service/detectionRules/FULL_WEB_REQUEST/reorder`\
          \ request."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response body contains the ID of the rule.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_REQUEST/order:
    put:
      description: "The request reorders the rules of the specified type according\
        \ to the order of the IDs in the body of the request. \n\n Rules that are\
        \ omitted in the body of the request will retain their relative order but\
        \ will be placed *after* all those present in the request."
      operationId: orderRequestDetectionRules
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: The JSON body of the request containing the service detection
          rules in the required order.
      responses:
        "204":
          description: Success. Service detection rules have been reordered. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_REQUEST/{id}:
    delete:
      operationId: deleteRequestDetectionRule
      parameters:
      - description: The ID of the service detection rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Deletes the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getRequestDetectionRule
      parameters:
      - description: The ID of the required service detection rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FullWebRequestRule'
          description: Success. The response contains properties of the specified
            rule.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Gets the properties of the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If a rule with the specified ID doesn't exist, a new rule is created\
        \ and appended to the end of the rule list. \n\n The request keeps the existing\
        \ order of rules, unless the **order** parameter is set."
      operationId: updateRequestDetectionRule
      parameters:
      - description: The ID of the rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebRequestRule'
        description: The JSON body of the request. Contains updated parameters of
          the service detection rule.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response body contains the ID of the rule.
        "204":
          description: Success. The service detection rule has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_REQUEST/{id}/validator:
    post:
      operationId: validateUpdateRequestDetectionRule
      parameters:
      - description: The ID of the service detection rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebRequestRule'
        description: The JSON body of the request. Contains parameters of the service
          detection rule to be validated.
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /service/detectionRules/FULL_WEB_REQUEST/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_REQUEST/validator:
    post:
      operationId: validateCreateRequestDetectionRule
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebRequestRule'
        description: The JSON body of the request. Contains parameters of the service
          detection rule to be validated.
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_REQUEST`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_SERVICE/{id}:
    delete:
      operationId: deleteServiceDetectionRule
      parameters:
      - description: The ID of the service detection rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Deletes the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getServiceDetectionRule
      parameters:
      - description: The ID of the required service detection rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FullWebServiceRule'
          description: Success. The response contains properties of the specified
            rule.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Shows the properties of the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If the rule with the specified ID doesn't exist, a new rule will\
        \ be created and appended to the end of the rule list. \n\n The request keeps\
        \ an existing order of rules, unless the **order** parameter is set."
      operationId: updateServiceDetectionRule
      parameters:
      - description: The ID of the rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebServiceRule'
        description: The JSON body of the request containing updated parameters of
          the service detection rule.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "204":
          description: Success. The service detection rule has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_SERVICE:
    get:
      operationId: listServiceDetectionRules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains the ordered list of rules.
      summary: Lists all full web service detection rules | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as it will be automatically assigned.
      operationId: createServiceDetectionRule
      parameters:
      - description: "The position of the new rule: \n\n * `APPEND`: at the end of\
          \ the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebServiceRule'
        description: "The JSON body of the request containing parameters of the new\
          \ service detection rule. \n\n You must not specify the ID of the rule!\
          \ \n\nThe **order** field is ignored in this request. To enforce a particular\
          \ order use the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/reorder`\
          \ request."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_SERVICE/order:
    put:
      description: "The request reorders the rules of the specified type according\
        \ to the order of the IDs in the body of the request. \n\n Rules that are\
        \ omitted in the body of the request will retain their relative order but\
        \ will be placed *after* all those present in the request."
      operationId: orderServiceDetectionRules
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: The JSON body of the request containing the service detection
          rules in the required order.
      responses:
        "204":
          description: Success. Service detection rules have been reordered. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_SERVICE/{id}/validator:
    post:
      operationId: validateUpdateServiceDetectionRule
      parameters:
      - description: The ID of the service detection rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebServiceRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate the payload for the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/FULL_WEB_SERVICE/validator:
    post:
      operationId: validateCreateServiceDetectionRule
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/FullWebServiceRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_SERVICE`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection full web service
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator:
    post:
      operationId: validateCreateOpaqueAndExternalWebRequestDetectionRule
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebRequestRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}/validator:
    post:
      operationId: validateUpdateOpaqueAndExternalWebRequestDetectionRule
      parameters:
      - description: The ID of the service detection rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebRequestRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}:
    delete:
      operationId: deleteOpaqueAndExternalWebRequestDetectionRule
      parameters:
      - description: The ID of the service detection rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Deletes the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getOpaqueAndExternalWebRequestDetectionRule
      parameters:
      - description: The ID of the required service detection rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpaqueAndExternalWebRequestRule'
          description: Success. The response contains properties of the specified
            rule.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Shows the properties of the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If the rule with the specified ID doesn't exist, a new rule will\
        \ be created and appended to the end of the rule list. \n\n The request keeps\
        \ an existing order of rules, unless the **order** parameter is set."
      operationId: updateOpaqueAndExternalWebRequestDetectionRule
      parameters:
      - description: The ID of the rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebRequestRule'
        description: The JSON body of the request containing updated parameters of
          the service detection rule.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "204":
          description: Success. The service detection rule has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST:
    get:
      operationId: listOpaqueAndExternalWebRequestDetectionRules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains the ordered list of rules.
      summary: Lists all full web service detection rules | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as it will be automatically assigned.
      operationId: createOpaqueAndExternalWebRequestDetectionRule
      parameters:
      - description: "The position of the new rule: \n\n * `APPEND`: at the end of\
          \ the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebRequestRule'
        description: "The JSON body of the request containing parameters of the new\
          \ service detection rule. \n\n You must not specify the ID of the rule!\
          \ \n\nThe **order** field is ignored in this request. To enforce a particular\
          \ order use the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/reorder`\
          \ request."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order:
    put:
      description: "The request reorders the rules of the specified type according\
        \ to the order of the IDs in the body of the request. \n\n Rules that are\
        \ omitted in the body of the request will retain their relative order but\
        \ will be placed *after* all those present in the request."
      operationId: orderOpaqueAndExternalWebRequestDetectionRules
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: The JSON body of the request containing the service detection
          rules in the required order.
      responses:
        "204":
          description: Success. Service detection rules have been reordered. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web request
      x-feature-flag: SERVICE_DETECTION_RULES_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}:
    delete:
      operationId: deleteOpaqueAndExternalWebServiceRule
      parameters:
      - description: The ID of the service detection rule to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Deletes the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getOpaqueAndExternalWebServiceRule
      parameters:
      - description: The ID of the required service detection rule.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpaqueAndExternalWebServiceRule'
          description: Success. The response contains properties of the specified
            rule.
        "404":
          description: Failed. The rule with the specified ID doesn't exist.
      summary: Shows the properties of the specified service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "If the rule with the specified ID doesn't exist, a new rule will\
        \ be created and appended to the end of the rule list. \n\n The request keeps\
        \ an existing order of rules, unless the **order** parameter is set."
      operationId: updateOpaqueAndExternalWebServiceRule
      parameters:
      - description: The ID of the rule to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebServiceRule'
        description: The JSON body of the request containing updated parameters of
          the service detection rule.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "204":
          description: Success. The service detection rule has been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator:
    post:
      operationId: validateCreateOpaqueAndExternalWebServiceRule
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebServiceRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE:
    get:
      operationId: listOpaqueAndExternalWebServiceRules
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success. The response contains the ordered list of rules.
      summary: Lists all opaque and external web service detection rules | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as it will be automatically assigned.
      operationId: createOpaqueAndExternalWebServiceRule
      parameters:
      - description: "The position of the new rule: \n\n * `APPEND`: at the end of\
          \ the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
        explode: true
        in: query
        name: position
        required: false
        schema:
          default: APPEND
          enum:
          - APPEND
          - PREPEND
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebServiceRule'
        description: "The JSON body of the request containing parameters of the new\
          \ service detection rule. \n\n You must not specify the ID of the rule!\
          \ \n\nThe **order** field is ignored in this request. To enforce a particular\
          \ order use the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE/reorder`\
          \ request."
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new service detection rule has been created. The
            response contains short representation of the rule, including the ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new service detection rule | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order:
    put:
      description: "The request reorders the rules of the specified type according\
        \ to the order of the IDs in the body of the request. \n\n Rules that are\
        \ omitted in the body of the request will retain their relative order but\
        \ will be placed *after* all those present in the request."
      operationId: orderOpaqueAndExternalWebServiceRules
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StubList'
        description: The JSON body of the request containing the service detection
          rules in the required order.
      responses:
        "204":
          description: Success. Service detection rules have been reordered. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}/validator:
    post:
      operationId: validateUpdateOpaqueAndExternalWebServiceRule
      parameters:
      - description: The ID of the service detection rule to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpaqueAndExternalWebServiceRule'
        required: true
      responses:
        "204":
          description: Validated. The service detection rule is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}`
        request | maturity=EARLY_ADOPTER
      tags:
      - Service - Detection opaque and external web service
      x-feature-flag: SERVICE_DETECTION_INTERNAL_RULES
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /symfiles/info:
    get:
      operationId: getInfo
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SymbolFileStorageInfo'
          description: Success
      summary: Retrieves information about used/empty diskspace, number of stored
        files,....
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles:
    get:
      operationId: getAll
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SymbolFileList'
          description: Success
      summary: Lists the metadata of all symbolication files (ProGuard files for Android
        or dSYM files for iOS Apps) from the Symbol File Store.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/ios/supportedversion:
    get:
      operationId: getSupportedVersion
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SupportedVersion'
          description: Success
      summary: Returns the supported file format version for iOS symbol files.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/{applicationId}:
    delete:
      operationId: deleteApp
      parameters:
      - description: The application id used in Dynatrace of the mobile application
          the files will be deleted
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. All files belonging to the given Dynatrace mobile
            application have been deleted successfully. Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Deletes all symbolication file belonging to the Dynatrace App specified
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
    get:
      operationId: getAllPerApplication
      parameters:
      - description: The application id used in Dynatrace for the mobile application
          to be queried
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SymbolFileList'
          description: Success
      summary: Lists the metadata of all symbolication files (ProGuard files for Android
        or dSYM files for iOS Apps) for one single mobile application from the Symbol
        File Store of this tenant.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning:
    put:
      operationId: createOrUpdatePinning
      parameters:
      - description: The application id used in Dynatrace of the app which should
          be (un)pinned
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The CFBundleIdentifier (iOS) or the package name (Android) which
          identifies the app associated with the files to be (un)pinned
        explode: false
        in: path
        name: packageName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The operating system for which the files will be (un)pinned
        explode: false
        in: path
        name: os
        required: true
        schema:
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
        style: simple
      - description: The version code (Android) / CFBundleVersion (iOS) the file belongs
          to
        explode: false
        in: path
        name: versionCode
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The version name (Android) / CFBundleShortVersionString (iOS)
          the file belongs to
        explode: false
        in: path
        name: versionName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SymbolFilePinning'
        description: JSON body of the request, containing the pinning status to set.
      responses:
        "204":
          description: Success. The pinning status of the filed has been updated.
            Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Pin or unpin all symbolication files of a app version. A pinned file
        will not be deleted automtically, when running out of space.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning/validator:
    put:
      operationId: validatePinning
      parameters:
      - description: The application id used in Dynatrace of the app which should
          be (un)pinned
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The CFBundleIdentifier (iOS) or the package name (Android) which
          identifies the app associated with the files to be (un)pinned
        explode: false
        in: path
        name: packageName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The operating system for which the files will be (un)pinned
        explode: false
        in: path
        name: os
        required: true
        schema:
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
        style: simple
      - description: The version code (Android) / CFBundleVersion (iOS) the file belongs
          to
        explode: false
        in: path
        name: versionCode
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The version name (Android) / CFBundleShortVersionString (iOS)
          the file belongs to
        explode: false
        in: path
        name: versionName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SymbolFilePinning'
        description: JSON body of the request, containing the pinning status to set.
      responses:
        "204":
          description: Validated. The submitted body is valid. Response does not have
            a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate updates of existing request attribute for the `PUT /{applicationId}/{packageName}/{os}/{versionName}/pinning`
        request.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/dtxdss-download:
    get:
      operationId: getDssClientUrl
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SymbolFileClientLinkDto'
          description: Success
      summary: Gets a download link for the latest version of the DTXDSSClient.
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}:
    delete:
      operationId: deleteSingleFile
      parameters:
      - description: The application id used in Dynatrace of the mobile application
          where a file should be deleted
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The CFBundleIdentifier (iOS) or the package name (Android) which
          identifies the app associated with the file to be deleted
        explode: false
        in: path
        name: packageName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The operating system the file belongs to
        explode: false
        in: path
        name: os
        required: true
        schema:
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
        style: simple
      - description: The version code (Android) / CFBundleVersion (iOS) of the file
          to be deleted
        explode: false
        in: path
        name: versionCode
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The version name (Android) / CFBundleShortVersionString (iOS)
          of the file to be deleted
        explode: false
        in: path
        name: versionName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      responses:
        "204":
          description: Success. The file has been deleted successfully. Response doesn't
            have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Delete the symbolication file belonging to the given application, os
        and version
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
    get:
      operationId: getSingle
      parameters:
      - description: The application id used in Dynatrace for the mobile application
          to be queried
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The CFBundleIdentifier (iOS) or the package name (Android) which
          identifies the app to be queried
        explode: false
        in: path
        name: packageName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The operating system for which the file should be displayed.
        explode: false
        in: path
        name: os
        required: true
        schema:
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
        style: simple
      - description: The version code (Android) / CFBundleVersion (iOS) of the file
          to be retrieved
        explode: false
        in: path
        name: versionCode
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The version name (Android) / CFBundleShortVersionString (iOS)
          of the file to be retrieved
        explode: false
        in: path
        name: versionName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SymbolFile'
          description: Success
      summary: Gets the metadata of the symbolication file belonging to the specified
        app version. There always can exist only one file per os and version
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
    put:
      operationId: createOrUpdate
      parameters:
      - description: The application id used in Dynatrace of the app this file belongs
          to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The CFBundleIdentifier (iOS) or the package name (Android) which
          identifies the app associated with the uploaded file
        explode: false
        in: path
        name: packageName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The operating system the file belongs to
        explode: false
        in: path
        name: os
        required: true
        schema:
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
        style: simple
      - description: The version code (Android) / CFBundleVersion (iOS) the file belongs
          to
        explode: false
        in: path
        name: versionCode
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - description: The version name (Android) / CFBundleShortVersionString (iOS)
          the file belongs to
        explode: false
        in: path
        name: versionName
        required: true
        schema:
          maxLength: 2147483647
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: header
        name: content-type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-compressed:
            schema:
              format: binary
              type: string
          application/x-zip-compressed:
            schema:
              format: binary
              type: string
          application/zip:
            schema:
              format: binary
              type: string
          text/plain:
            schema:
              format: binary
              type: string
        description: 'The file to be uploaded. A proguard file (*.txt) for Android
          or the zip file produced by the DTXDSSClient provided with the OneAgent
          for iOS. '
        required: true
      responses:
        "204":
          description: Success. The file has been uploaded and stored. Response doesn't
            have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: 'Upload a symbolication file. Either a ProGuard file for Android or
        a zip file containing all the iOS dSYM files. '
      tags:
      - Mobile Deobfuscation and Symbolication
      x-token-scopes:
      - '`DssFileManagement` (Mobile symbolication file management)'
  /technologies:
    get:
      operationId: getTechGlobalConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TechMonitoringList'
          description: Success
      summary: Gets the global monitoring configuration of technologies.
      tags:
      - OneAgent - Environment-wide configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /aws/iamExternalId:
    get:
      description: You'll need it for the role-based AWS authentication.
      operationId: readIamExternalIdToken
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AwsIamToken'
          description: Success
      summary: Gets the external ID token for setting an IAM role
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /aws/credentials:
    get:
      operationId: listAwsCredentialConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/EntityShortRepresentation'
                type: array
          description: Success
      summary: Lists all available AWS credentials configurations
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createAwsCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsCredentialsConfig'
        description: The JSON body of the request. Contains parameters of the new
          AWS credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: "Success. The new AWS credentials configuration has been created.\
            \ The response body contains the ID of the configuration. \n\n Check the\
            \ connection status for these credentials after 10 minutes with the `GET\
            \ /aws/credentials/{id}` request."
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new AWS credentials configuration
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /aws/credentials/{id}:
    delete:
      operationId: deleteAwsCredentialsConfig
      parameters:
      - description: The ID of AWS credentials configuration to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The AWS credentials configuration has been deleted.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Deletes the specified AWS credentials configuration
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getAwsCredentialsConfig
      parameters:
      - description: The ID of the specified AWS credentials configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AwsCredentialsConfig'
          description: Success
      summary: Gets the configuration of the specified AWS credentials
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateAwsCredentialsConfig
      parameters:
      - description: The ID of the AWS credentials configuration to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsCredentialsConfig'
        description: The JSON body of the request. Contains updated parameters of
          the AWS credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: "Success. The new AWS credentials configuration has been created.\
            \ The response body contains the ID of the configuration. \n\n Check the\
            \ connection status for these credentials after 10 minutes with the `GET\
            \ /aws/credentials/{id}` request."
        "204":
          description: "Success. The AWS credentials configuration has been updated.\
            \ Response doesn't have a body. \n\n Check the connection status for these\
            \ credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing AWS credentials configuration
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /aws/credentials/{id}/validator:
    post:
      operationId: validateUpdateAwsCredentialsConfig
      parameters:
      - description: The ID of the AWS credentials configuration to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsCredentialsConfig'
        description: The JSON body of the request. Contains the AWS credentials configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /aws/credentials/{id}` request
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /aws/credentials/validator:
    post:
      operationId: validateCreateAwsCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsCredentialsConfig'
        description: The JSON body of the request. Contains the AWS credentials configuration
          to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /aws/credentials` request
      tags:
      - AWS credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /aws/privateLink/whitelistedAccounts/{id}:
    delete:
      description: Removes the given AWS account id from the whitelisted accounts
        in AWS PrivateLink for this tenant
      operationId: removeAccount
      parameters:
      - description: The AWS account id to be deleted from the AWS PrivateLink whitelist
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The account id has been removed from the PrivateLink
            whitelist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Error. Wrong format of the provided AWS account id (length
            = 12 characters, only digits).
      summary: Removes one AWS account from the whitelist in AWS PrivateLink | maturity=EARLY_ADOPTER
      tags:
      - AWS PrivateLink
      x-feature-flag: AWS_PRIVATE_LINK_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    put:
      description: Updates the given AWS account id in the whitelisted accounts in
        AWS PrivateLink for this tenant
      operationId: putAccount
      parameters:
      - description: The AWS account id to be updated in the AWS PrivateLink whitelist,
          has to match the id in the provided payload.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/WhitelistedAwsAccount'
        description: The AWS account id to be updated in the AWS PrivateLink whitelist,
          has to match the id in the path.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WhitelistedAwsAccount'
          description: Success. The account id has been added to the PrivateLink whitelist.
        "204":
          description: Success. The account id already exists in the PrivateLink whitelist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Error. Wrong format of the provided AWS account id (length
            = 12 characters, only digits).
      summary: Updates the given AWS account id in the whitelist in AWS PrivateLink
        | maturity=EARLY_ADOPTER
      tags:
      - AWS PrivateLink
      x-feature-flag: AWS_PRIVATE_LINK_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /aws/privateLink/whitelistedAccounts:
    get:
      description: Lists the account ids of all whitelisted accounts in AWS PrivateLink
        for this tenant
      operationId: getAllAccounts
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WhitelistedAwsAccountList'
          description: Success. The list is provided in the response body.
      summary: Gets the information about all whitelisted accounts in AWS PrivateLink
        | maturity=EARLY_ADOPTER
      tags:
      - AWS PrivateLink
      x-feature-flag: AWS_PRIVATE_LINK_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
  /aws/privateLink:
    get:
      description: Gets all configuration settings for AWS PrivateLink for this tenant
      operationId: getPrivateLinkConfig
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AwsPrivateLinkConfig'
          description: Success. The result is provided in the response body.
      summary: Gets the configuration information about AWS PrivateLink | maturity=EARLY_ADOPTER
      tags:
      - AWS PrivateLink
      x-feature-flag: AWS_PRIVATE_LINK_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: Updates the configuration settings for AWS PrivateLink for this
        tenant
      operationId: putPrivateLinkConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AwsPrivateLinkConfig'
        description: The AWS PrivateLink configuration.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AwsPrivateLinkConfig'
          description: Success. The configuration settings have been updated.
      summary: Updates the configuration information about AWS PrivateLink | maturity=EARLY_ADOPTER
      tags:
      - AWS PrivateLink
      x-feature-flag: AWS_PRIVATE_LINK_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /azure/credentials/{id}:
    delete:
      operationId: deleteAzureCredentialsConfig
      parameters:
      - description: The ID of the Azure credentials configuration to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. The response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Deletes the specified Azure credentials configuration
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getAzureCredentialsConfig
      parameters:
      - description: The ID of the required Azure credentials configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AzureCredentials'
          description: Success
      summary: Gets the configuration of the specified Azure credentials
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "* You can't change the Application ID or Directory ID of an Azure\
        \ configuration. If you need to change them, create a new credentials configuration.\
        \ \n* If a configuration with the specified ID doesn't exist, a new configuration\
        \ is created."
      operationId: updateAzureCredentialsConfig
      parameters:
      - description: The ID of the Azure credentials configuration to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AzureCredentials'
        description: The JSON body of the request. Contains updated parameters of
          the Azure credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new Azure credentials configuration has been created.
            The response body contains the ID of the configuration.
        "204":
          description: Success. The Azure credentials configuration has been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing Azure credentials configuration
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /azure/credentials:
    get:
      operationId: listAzureCredentialsConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available Azure credentials configurations
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createAzureCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AzureCredentials'
        description: The JSON body of the request. Contains parameters of the new
          Azure credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new Azure credentials configuration has been created.
            The response body contains the ID of the configuration.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new Azure credentials configuration
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /azure/credentials/{id}/validator:
    post:
      operationId: validateConfigurationUpdate
      parameters:
      - description: The ID of the Azure credentials configuration to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AzureCredentials'
        description: The JSON body of the request. Contains the Azure credentials
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /azure/credentials/{id}` request
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /azure/credentials/validator:
    post:
      operationId: validateAzureCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AzureCredentials'
        description: The JSON body of the request. Contains the Azure credentials
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /azure/credentials` request
      tags:
      - Azure credentials configuration
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /cloudFoundry/credentials/{id}:
    delete:
      operationId: deleteCloudFoundryCredentialsConfig
      parameters:
      - description: The ID of the Cloud Foundry foundation credentials to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
      summary: Delete the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getCloudFoundryCredentialsConfig
      parameters:
      - description: The ID of the required Cloud Foundry foundation credentials.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CloudFoundryCredentials'
          description: Success
      summary: Show the properties for the specified Cloud Foundry foundation credentials.
        | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      operationId: updateCloudFoundryCredentialsConfig
      parameters:
      - description: The ID of the Cloud Foundry foundation credentials.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CloudFoundryCredentials'
        description: |-
          `name` must be unique. `password` can be omitted for updates, the existing one will be used. `apiUrl` and `loginUrl` must be set and may not differ from the existing config if it exists.
          Use this endpoint for copying credentials between environments while keeping their IDs and for updating existing credentials. You can *not* use this to create new credentials with an arbitrary ID, use POST instead.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Cloud Foundry foundation credentials have been created.
            The ID and name of the new credentials are returned.
        "204":
          description: Success. Cloud Foundry foundation credentials have been successfully
            updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Create or update credentials for a single Cloud Foundry foundation.
        | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /cloudFoundry/credentials/validator:
    post:
      operationId: validateCreateCloudFoundryCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CloudFoundryCredentials'
        description: '`name`, `apiUrl` and `loginUrl` must be unique.'
        required: true
      responses:
        "204":
          description: Validated. The submitted credentials are valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate that creating credentials would be successful. | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /cloudFoundry/credentials:
    get:
      operationId: listCloudFoundryCredentialsConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: List all the Cloud Foundry foundations credentials. | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      operationId: createCloudFoundryCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CloudFoundryCredentials'
        description: '`name`, `apiUrl` and `loginUrl` must be unique.'
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. Cloud Foundry foundation credentials have been created.
            The ID and name of the new credentials are returned.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Create new credentials for a single foundation. | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /cloudFoundry/credentials/{id}/validator:
    post:
      operationId: validateUpdateCloudFoundryCredentialsConfig
      parameters:
      - description: The ID of the Cloud Foundry foundation credentials.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CloudFoundryCredentials'
        description: '`name` must be unique. `password` can be omitted for updates.
          See the constraints for the PUT /cloudFoundry/credentials/{id} request.'
        required: true
      responses:
        "204":
          description: Validated. The submitted credentials are valid. Response does
            not have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validate that updating or creating credentials would be successful.
        | maturity=EARLY_ADOPTER
      tags:
      - Cloud Foundry credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /kubernetes/credentials:
    get:
      operationId: listKubernetesCredentialsConfigs
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available Kubernetes credentials configurations | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID as it will be automatically assigned
        by the Dynatrace server.
      operationId: createKubernetesCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KubernetesCredentials'
        description: The JSON body of the request. Contains parameters of the new
          Kubernetes credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new Kubernetes credentials configuration has been
            created. The response body contains the ID of the configuration.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new Kubernetes credentials configuration | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /kubernetes/credentials/{id}:
    delete:
      operationId: deleteKubernetesCredentialsConfig
      parameters:
      - description: The ID of the Kubernetes credentials configuration be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. The response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Deletes the specified Kubernetes credentials configuration | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getKubernetesCredentialsConfig
      parameters:
      - description: The ID of the required Kubernetes credentials configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/KubernetesCredentials'
          description: Success
      summary: Gets the configuration of the specified Kubernetes credentials | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: "You can't change the URL of the Kubernetes cluster. \n\nIf a configuration\
        \ with the specified ID doesn't exist, a new configuration is created.\n\n\
        IDs of entities are computed server side upon creation. If you want to create\
        \ a new entity, use the POST method without an ID. To update an existing entity,\
        \ use the PUT method with an existing, valid ID. To re-create an entity under\
        \ a specific ID, a valid ID must be provided with the PUT method."
      operationId: updateKubernetesCredentialsConfig
      parameters:
      - description: The ID of the Kubernetes credentials configuration to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KubernetesCredentials'
        description: The JSON body of the request. Contains updated parameters of
          the Kubernetes credentials configuration.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new Kubernetes credentials configuration has been
            created. The response body contains the ID of the configuration.
        "204":
          description: Success. The Kubernetes credentials configuration has been
            updated. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing Kubernetes credentials configuration | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /kubernetes/credentials/{id}/validator:
    post:
      operationId: validateUpdateKubernetesCredentialsConfig
      parameters:
      - description: The ID of the Kubernetes credentials configuration to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KubernetesCredentials'
        description: The JSON body of the request. Contains the Kubernetes credentials
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `PUT /kubernetes/credentials/{id}` request
        | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /kubernetes/credentials/validator:
    post:
      operationId: validateCreateKubernetesCredentialsConfig
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/KubernetesCredentials'
        description: The JSON body of the request. Contains the Kubernetes credentials
          configuration to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /kubernetes/credentials` request
        | maturity=EARLY_ADOPTER
      tags:
      - Kubernetes credentials configuration
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /maintenanceWindows:
    get:
      operationId: listMaintenanceWindows
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists all available maintenance windows
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createMaintenanceWindow
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        description: The JSON body of the request. Contains parameters of the new
          maintenance window.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new maintenance window has been created. The response
            body contains its ID.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Creates a new maintenance window
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /maintenanceWindows/{id}:
    delete:
      operationId: deleteMaintenanceWindow
      parameters:
      - description: The ID of the maintenance window to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The maintenance window has been deleted. Response
            doesn't have a body.
      summary: Deletes the specified maintenance window
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
    get:
      operationId: getMaintenanceWindow
      parameters:
      - description: The ID of the required maintenance window.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: Success
      summary: Gets the properties of the specified maintenance window
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`ReadConfig` (Read configuration)'
    put:
      description: If a maintenance window with the specified ID doesn't exist, a
        new one is created.
      operationId: updateMaintenanceWindow
      parameters:
      - description: The ID of the maintenance window to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        description: The JSON body of the request. Contains updated parameters of
          the maintenance window.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new maintenance window has been created. The response
            body contains its ID.
        "204":
          description: Success. The maintenance window has been updated. The response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Updates an existing maintenance window
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /maintenanceWindows/{id}/validator:
    post:
      operationId: validateUpdateMaintenanceWindow
      parameters:
      - description: The ID of the maintenance window to be validated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        description: The JSON body of the request. Contains parameters of the maintenance
          window to be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `PUT /maintenancewindow/{id}` request
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
  /maintenanceWindows/validator:
    post:
      operationId: validateCreateMaintenanceWindow
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        description: The JSON body of the request. Contains parameters of the maintenance
          window be validated.
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid
      summary: Validates the payload for the `POST /maintenancewindow` request
      tags:
      - Maintenance windows
      x-token-scopes:
      - '`WriteConfig` (Write configuration)'
components:
  requestBodies:
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_3:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_2:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    AlertingCustomEventFilter:
      description: "Configuration of a custom event filter. \n\nFilters custom events\
        \ by title or description. If both specified, the AND logic applies."
      properties:
        customTitleFilter:
          $ref: '#/components/schemas/AlertingCustomTextFilter'
        customDescriptionFilter:
          $ref: '#/components/schemas/AlertingCustomTextFilter'
      type: object
    AlertingCustomTextFilter:
      description: Configuration of a matching filter.
      properties:
        enabled:
          description: The filter is enabled (`true`) or disabled (`false`).
          type: boolean
        value:
          description: The value to compare to.
          minLength: 1
          type: string
        operator:
          description: "Operator of the comparison. \n\n You can reverse it by setting\
            \ **negate** to `true`."
          enum:
          - BEGINS_WITH
          - CONTAINS
          - CONTAINS_REGEX
          - ENDS_WITH
          - EQUALS
          type: string
        negate:
          description: Reverses the comparison **operator**. For example it turns
            the **begins with** into **does not begin with**.
          type: boolean
        caseInsensitive:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\n If not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
      required:
      - caseInsensitive
      - enabled
      - negate
      - operator
      - value
      type: object
    AlertingEventTypeFilter:
      description: "Configuration of the event filter for the alerting profile. \n\
        \nYou have two mutually exclusive options: \n* Select an event type from the\
        \ list of the predefined events. Specify it in the **predefinedEventFilter**\
        \ field. \n* Set a rule for custom events. Specify it in the **customEventFilter**\
        \ field."
      properties:
        predefinedEventFilter:
          $ref: '#/components/schemas/AlertingPredefinedEventFilter'
        customEventFilter:
          $ref: '#/components/schemas/AlertingCustomEventFilter'
      type: object
    AlertingPredefinedEventFilter:
      description: Configuration of a predefined event filter.
      properties:
        eventType:
          description: The type of the predefined event.
          enum:
          - APPLICATION_ERROR_RATE_INCREASED
          - APPLICATION_SLOWDOWN
          - APPLICATION_UNEXPECTED_HIGH_LOAD
          - APPLICATION_UNEXPECTED_LOW_LOAD
          - AWS_LAMBDA_HIGH_ERROR_RATE
          - CUSTOM_APPLICATION_ERROR_RATE_INCREASED
          - CUSTOM_APPLICATION_SLOWDOWN
          - CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD
          - CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - DATABASE_CONNECTION_FAILURE
          - DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION
          - DATA_CENTER_SERVICE_UNAVAILABLE
          - EBS_VOLUME_HIGH_LATENCY
          - EC2_HIGH_CPU
          - ELB_HIGH_BACKEND_ERROR_RATE
          - ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION
          - ENTERPRISE_APPLICATION_UNAVAILABLE
          - ESXI_GUEST_ACTIVE_SWAP_WAIT
          - ESXI_GUEST_CPU_LIMIT_REACHED
          - ESXI_HOST_CPU_SATURATION
          - ESXI_HOST_DATASTORE_LOW_DISK_SPACE
          - ESXI_HOST_DISK_QUEUE_SLOW
          - ESXI_HOST_DISK_SLOW
          - ESXI_HOST_MEMORY_SATURATION
          - ESXI_HOST_NETWORK_PROBLEMS
          - ESXI_HOST_OVERLOADED_STORAGE
          - ESXI_VM_IMPACT_HOST_CPU_SATURATION
          - ESXI_VM_IMPACT_HOST_MEMORY_SATURATION
          - EXTERNAL_SYNTHETIC_TEST_OUTAGE
          - EXTERNAL_SYNTHETIC_TEST_SLOWDOWN
          - HOST_OF_SERVICE_UNAVAILABLE
          - HTTP_CHECK_GLOBAL_OUTAGE
          - HTTP_CHECK_LOCAL_OUTAGE
          - HTTP_CHECK_TEST_LOCATION_SLOWDOWN
          - MOBILE_APPLICATION_ERROR_RATE_INCREASED
          - MOBILE_APPLICATION_SLOWDOWN
          - MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD
          - MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD
          - MOBILE_APP_CRASH_RATE_INCREASED
          - MONITORING_UNAVAILABLE
          - OSI_DISK_LOW_INODES
          - OSI_GRACEFULLY_SHUTDOWN
          - OSI_HIGH_CPU
          - OSI_HIGH_MEMORY
          - OSI_LOW_DISK_SPACE
          - OSI_NIC_DROPPED_PACKETS_HIGH
          - OSI_NIC_ERRORS_HIGH
          - OSI_NIC_UTILIZATION_HIGH
          - OSI_SLOW_DISK
          - OSI_UNEXPECTEDLY_UNAVAILABLE
          - PGI_OF_SERVICE_UNAVAILABLE
          - PGI_UNAVAILABLE
          - PG_LOW_INSTANCE_COUNT
          - PROCESS_CRASHED
          - PROCESS_HIGH_GC_ACTIVITY
          - PROCESS_MEMORY_RESOURCE_EXHAUSTED
          - PROCESS_NA_HIGH_CONN_FAIL_RATE
          - PROCESS_NA_HIGH_LOSS_RATE
          - PROCESS_THREADS_RESOURCE_EXHAUSTED
          - RDS_HIGH_CPU
          - RDS_HIGH_LATENCY
          - RDS_LOW_MEMORY
          - RDS_LOW_STORAGE_SPACE
          - RDS_OF_SERVICE_UNAVAILABLE
          - RDS_RESTART_SEQUENCE
          - SERVICE_ERROR_RATE_INCREASED
          - SERVICE_SLOWDOWN
          - SERVICE_UNEXPECTED_HIGH_LOAD
          - SERVICE_UNEXPECTED_LOW_LOAD
          - SYNTHETIC_GLOBAL_OUTAGE
          - SYNTHETIC_LOCAL_OUTAGE
          - SYNTHETIC_NODE_OUTAGE
          - SYNTHETIC_PRIVATE_LOCATION_OUTAGE
          - SYNTHETIC_TEST_LOCATION_SLOWDOWN
          type: string
        negate:
          description: "The alert triggers when the problem of specified severity\
            \ arises while the specified event **is** happening (`false`) or while\
            \ the specified event is **not** happening (`true`). \n\n For example,\
            \ if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high\
            \ traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set\
            \ to `true`, the alerting profile will trigger only when the slowdown\
            \ problem is raised while there is no unexpected high traffic event. \n\
            \nConsider the following use case as an example. The Slowdown (`PERFORMANCE`)\
            \ severity rule is set. Depending on the configuration of the event filter\
            \ (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event\
            \ is used as an example), the behavior of the alerting profile is one\
            \ of the following:* **negate** is set to `false`: The alert triggers\
            \ when the slowdown problem is raised while unexpected high traffic event\
            \ is happening. \n* **negate** is set to `true`: The alert triggers when\
            \ the slowdown problem is raised while there is no unexpected high traffic\
            \ event. \n\n* no event rule is set: The alert triggers when the slowdown\
            \ problem is raised, regardless of any events."
          type: boolean
      required:
      - eventType
      - negate
      type: object
    AlertingProfile:
      description: Configuration of an alerting profile.
      example:
        id: 12345678-abcd-1234-abcd-1234567890ab
        displayName: sampleAlertingProfile
        mzId: "1"
        rules:
        - severityLevel: AVAILABILITY
          tagFilter:
            includeMode: INCLUDE_ALL
            tagFilters:
            - context: AWS
              key: tagKey
              value: tagValue
          delayInMinutes: 60
        eventTypeFilters:
        - predefinedEventFilter:
            eventType: OSI_HIGH_CPU
            negate: true
        - customEventFilter:
            customTitleFilter:
              enabled: true
              value: filterValue
              operator: EQUALS
              negate: false
              caseInsensitive: true
            customDescriptionFilter:
              enabled: false
              value: filterValue
              operator: CONTAINS
              negate: true
              caseInsensitive: false
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the alerting profile.
          example: 12345678-abcd-1234-abcd-1234567890ab
          format: uuid
          type: string
        displayName:
          description: The name of the alerting profile, displayed in the UI.
          maxLength: 100
          minLength: 1
          type: string
        rules:
          description: "A list of severity rules. \n\n The rules are evaluated from\
            \ top to bottom. The first matching rule applies and further evaluation\
            \ stops.\n\n If you specify both severity rule and event filter, the AND\
            \ logic applies."
          items:
            $ref: '#/components/schemas/AlertingProfileSeverityRule'
          maxItems: 20
          minItems: 0
          type: array
        mzId:
          description: The ID of the management zone to which the alerting profile
            applies.
          type: string
        eventTypeFilters:
          description: "The list of event filters. \n\nFor all filters that are *negated*\
            \ inside of these event filters, that is all \"Predefined\" as well as\
            \ \"Custom\" (Title and/or Description) ones the AND logic applies.\n\
            For all *non-negated* ones the OR logic applies.\nBetween these two groups,\
            \ negated and non-negated, the AND logic applies.\n\n If you specify both\
            \ severity rule and event filter, the AND logic applies."
          items:
            $ref: '#/components/schemas/AlertingEventTypeFilter'
          maxItems: 20
          minItems: 0
          type: array
      required:
      - displayName
      type: object
    AlertingProfileSeverityRule:
      description: "A severity rule of the alerting profile. \n\n A severity rule\
        \ defines the level of severity that must be met before an alert is sent our\
        \ for a detected problem. Additionally it restricts the alerting to certain\
        \ monitored entities."
      properties:
        severityLevel:
          description: The severity level to trigger the alert.
          enum:
          - AVAILABILITY
          - CUSTOM_ALERT
          - ERROR
          - MONITORING_UNAVAILABLE
          - PERFORMANCE
          - RESOURCE_CONTENTION
          type: string
        tagFilter:
          $ref: '#/components/schemas/AlertingProfileTagFilter'
        delayInMinutes:
          description: Send a notification if a problem remains open longer than *X*
            minutes.
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      required:
      - delayInMinutes
      - severityLevel
      - tagFilter
      type: object
    AlertingProfileTagFilter:
      description: Configuration of the tag filtering of the alerting profile.
      properties:
        includeMode:
          description: "The filtering mode: \n* `INCLUDE_ANY`: The rule applies to\
            \ monitored entities that have at least one of the specified tags. You\
            \ can specify up to 100 tags. \n* `INCLUDE_ALL`: The rule applies to monitored\
            \ entities that have **all** of the specified tags. You can specify up\
            \ to 10 tags. \n* `NONE`: The rule applies to all monitored entities."
          enum:
          - INCLUDE_ALL
          - INCLUDE_ANY
          - NONE
          type: string
        tagFilters:
          description: A list of required tags.
          items:
            $ref: '#/components/schemas/TagFilter'
          type: array
          uniqueItems: true
      required:
      - includeMode
      type: object
    ConfigurationMetadata:
      description: Metadata useful for debugging
      example:
        currentConfigurationVersions:
        - 1.0.4
        - "1.23"
        configurationVersions:
        - 4
        - 2
        clusterVersion: 1.192.1
      properties:
        currentConfigurationVersions:
          description: A Sorted list of string version numbers of the configuration.
          example:
          - 1.0.4
          - "1.23"
          items:
            type: string
          type: array
        clusterVersion:
          description: Dynatrace server version.
          example: 1.192.1
          type: string
        configurationVersions:
          description: A Sorted list of the version numbers of the configuration.
          example:
          - 4
          - 2
          items:
            format: int64
            type: integer
          type: array
      readOnly: true
      type: object
    TagFilter:
      description: A tag-based filter of monitored entities.
      example:
        context: AWS
        value: value
        key: key
      properties:
        context:
          description: "The origin of the tag, such as AWS or Cloud Foundry. \n\n\
            Custom tags use the `CONTEXTLESS` value."
          enum:
          - AWS
          - AWS_GENERIC
          - AZURE
          - CLOUD_FOUNDRY
          - CONTEXTLESS
          - ENVIRONMENT
          - GOOGLE_CLOUD
          - KUBERNETES
          type: string
        key:
          description: "The key of the tag. \n\nCustom tags have the tag value here."
          minLength: 1
          type: string
        value:
          description: "The value of the tag. \n\n Not applicable to custom tags."
          type: string
      required:
      - context
      - key
      type: object
    EntityShortRepresentation:
      description: The short representation of a Dynatrace entity.
      example:
        id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
        name: Dynatrace entity
        description: Dynatrace entity for the REST API example
      properties:
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
      required:
      - id
      type: object
    ConstraintViolation:
      properties:
        location:
          type: string
        message:
          type: string
        path:
          type: string
        parameterLocation:
          enum:
          - PATH
          - PAYLOAD_BODY
          - QUERY
          type: string
      type: object
    Error:
      properties:
        message:
          type: string
        code:
          format: int32
          type: integer
        constraintViolations:
          items:
            $ref: '#/components/schemas/ConstraintViolation'
          type: array
      type: object
    ErrorEnvelope:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    StubList:
      description: An ordered list of short representations of Dynatrace entities.
      example:
        values:
        - id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
          name: Dynatrace entity 1
          description: Dynatrace entity 1 for the REST API example
        - id: ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618
          name: Dynatrace entity 2
        - id: 8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f
      properties:
        values:
          description: An ordered list of short representations of Dynatrace entities.
          items:
            $ref: '#/components/schemas/EntityShortRepresentation'
          type: array
      required:
      - values
      type: object
    ApplicationAnomalyDetectionConfig:
      description: The configuration of anomaly detection for applications.
      example:
        responseTimeDegradation:
          detectionMode: DETECT_AUTOMATICALLY
          automaticDetection:
            responseTimeDegradationMilliseconds: 250
            responseTimeDegradationPercent: 90
            slowestResponseTimeDegradationMilliseconds: 500
            slowestResponseTimeDegradationPercent: 200
            loadThreshold: ONE_REQUEST_PER_MINUTE
        trafficDrop:
          enabled: true
          trafficDropPercent: 95
        trafficSpike:
          enabled: false
        failureRateIncrease:
          detectionMode: DETECT_USING_FIXED_THRESHOLDS
          thresholds:
            threshold: 10
            sensitivity: LOW
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        responseTimeDegradation:
          $ref: '#/components/schemas/ResponseTimeDegradationDetectionConfig'
        trafficDrop:
          $ref: '#/components/schemas/TrafficDropDetectionConfig'
        trafficSpike:
          $ref: '#/components/schemas/TrafficSpikeDetectionConfig'
        failureRateIncrease:
          $ref: '#/components/schemas/FailureRateIncreaseDetectionConfig'
      required:
      - failureRateIncrease
      - responseTimeDegradation
      - trafficDrop
      - trafficSpike
      type: object
    FailureRateIncreaseAutodetectionConfig:
      description: "Parameters of failure rate increase auto-detection. Required if\
        \ **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\
        \nThe absolute and relative thresholds **both** must exceed to trigger an\
        \ alert. \n\nExample: If the expected error rate is 1.5%, and you set an absolute\
        \ increase of 1%, and a relative increase of 50%, the thresholds will be:\
        \ \nAbsolute: 1.5% + **1%** = 2.5% \nRelative: 1.5% + 1.5% * **50%** = 2.25%"
      properties:
        failingServiceCallPercentageIncreaseAbsolute:
          description: Absolute increase of failing service calls to trigger an alert,
            %.
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        failingServiceCallPercentageIncreaseRelative:
          description: Relative increase of failing service calls to trigger an alert,
            %.
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
      required:
      - failingServiceCallPercentageIncreaseAbsolute
      - failingServiceCallPercentageIncreaseRelative
      type: object
    FailureRateIncreaseDetectionConfig:
      description: Configuration of failure rate increase detection.
      properties:
        detectionMode:
          description: 'How to detect failure rate increase: automatically, or based
            on fixed thresholds, or do not detect.'
          enum:
          - DETECT_AUTOMATICALLY
          - DETECT_USING_FIXED_THRESHOLDS
          - DONT_DETECT
          type: string
        automaticDetection:
          $ref: '#/components/schemas/FailureRateIncreaseAutodetectionConfig'
        thresholds:
          $ref: '#/components/schemas/FailureRateIncreaseThresholdConfig'
      required:
      - detectionMode
      type: object
    FailureRateIncreaseThresholdConfig:
      description: "Fixed thresholds for failure rate increase detection. \n\n Required\
        \ if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable\
        \ otherwise."
      properties:
        threshold:
          description: Failure rate during any 5-minute period to trigger an alert,
            %.
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        sensitivity:
          description: "Sensitivity of the threshold. \n\nWith `low` sensitivity,\
            \ high statistical confidence is used. Brief violations (for example,\
            \ due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity,\
            \ no statistical confidence is used. Each violation triggers alert."
          enum:
          - HIGH
          - LOW
          - MEDIUM
          type: string
      required:
      - sensitivity
      - threshold
      type: object
    ResponseTimeDegradationAutodetectionConfig:
      description: "Parameters of the response time degradation auto-detection. Required\
        \ if the **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise.\
        \ \n\nViolation of **any** criterion triggers an alert."
      properties:
        responseTimeDegradationMilliseconds:
          description: Alert if the response time degrades by more than *X* milliseconds.
          format: int32
          maximum: 100000
          minimum: 0
          type: integer
        responseTimeDegradationPercent:
          description: Alert if the response time degrades by more than *X* %.
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        slowestResponseTimeDegradationMilliseconds:
          description: Alert if the response time of the slowest 10% degrades by more
            than *X* milliseconds.
          format: int32
          maximum: 100000
          minimum: 0
          type: integer
        slowestResponseTimeDegradationPercent:
          description: Alert if the response time of the slowest 10% degrades by more
            than *X* %.
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        loadThreshold:
          description: "Minimal service load to detect response time degradation.\
            \ \n\n Response time degradation of services with smaller load won't trigger\
            \ alerts."
          enum:
          - FIFTEEN_REQUESTS_PER_MINUTE
          - FIVE_REQUESTS_PER_MINUTE
          - ONE_REQUEST_PER_MINUTE
          - TEN_REQUESTS_PER_MINUTE
          type: string
      required:
      - loadThreshold
      - responseTimeDegradationMilliseconds
      - responseTimeDegradationPercent
      - slowestResponseTimeDegradationMilliseconds
      - slowestResponseTimeDegradationPercent
      type: object
    ResponseTimeDegradationDetectionConfig:
      description: Configuration of response time degradation detection.
      properties:
        detectionMode:
          description: 'How to detect response time degradation: automatically, or
            based on fixed thresholds, or do not detect.'
          enum:
          - DETECT_AUTOMATICALLY
          - DETECT_USING_FIXED_THRESHOLDS
          - DONT_DETECT
          type: string
        automaticDetection:
          $ref: '#/components/schemas/ResponseTimeDegradationAutodetectionConfig'
        thresholds:
          $ref: '#/components/schemas/ResponseTimeDegradationThresholdConfig'
      required:
      - detectionMode
      type: object
    ResponseTimeDegradationThresholdConfig:
      description: "Fixed thresholds for response time degradation detection. \n\n\
        \ Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable\
        \ otherwise."
      properties:
        responseTimeThresholdMilliseconds:
          description: Response time during any 5-minute period to trigger an alert,
            in milliseconds.
          format: int32
          maximum: 100000
          minimum: 0
          type: integer
        slowestResponseTimeThresholdMilliseconds:
          description: Response time of the 10% slowest during any 5-minute period
            to trigger an alert, in milliseconds.
          format: int32
          maximum: 100000
          minimum: 0
          type: integer
        loadThreshold:
          description: "Minimal service load to detect response time degradation.\
            \ \n\n Response time degradation of services with smaller load won't trigger\
            \ alerts."
          enum:
          - FIFTEEN_REQUESTS_PER_MINUTE
          - FIVE_REQUESTS_PER_MINUTE
          - ONE_REQUEST_PER_MINUTE
          - TEN_REQUESTS_PER_MINUTE
          type: string
        sensitivity:
          description: "Sensitivity of the threshold. \n\nWith `low` sensitivity,\
            \ high statistical confidence is used. Brief violations (for example,\
            \ due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity,\
            \ no statistical confidence is used. Each violation triggers an alert."
          enum:
          - HIGH
          - LOW
          - MEDIUM
          type: string
      required:
      - loadThreshold
      - responseTimeThresholdMilliseconds
      - sensitivity
      - slowestResponseTimeThresholdMilliseconds
      type: object
    TrafficDropDetectionConfig:
      description: The configuration of traffic drops detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        trafficDropPercent:
          description: Alert if the observed traffic is less than *X* % of the expected
            value.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - enabled
      type: object
    TrafficSpikeDetectionConfig:
      description: The configuration of traffic spikes detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        trafficSpikePercent:
          description: Alert if the observed traffic is more than *X* % of the expected
            value.
          format: int32
          maximum: 1000
          minimum: 100
          type: integer
      required:
      - enabled
      type: object
    AwsAnomalyDetectionConfig:
      description: The configuration of anomaly detection for AWS.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        rdsHighCpuDetection:
          enabled: true
          customThresholds:
            cpuUsagePercentage: 99
        rdsHighWriteReadLatencyDetection:
          enabled: true
          customThresholds:
            writeReadLatency: 800
        rdsLowStorageDetection:
          enabled: true
          customThresholds:
            freeStoragePercentage: 7
        rdsHighMemoryDetection:
          enabled: true
          customThresholds:
            freeMemory: 96.99
            swapUsage: 5.5
        elbHighConnectionErrorsDetection:
          enabled: true
          customThresholds:
            connectionErrorsPerMinute: 4
        rdsRestartsSequenceDetection:
          enabled: true
          customThresholds:
            restartsPerMinute: 3
        lambdaHighErrorRateDetection:
          enabled: true
          customThresholds:
            failedInvocationsRate: 2
        ec2CandidateCpuSaturationDetection:
          enabled: true
          customThresholds:
            cpuUsagePercentage: 98
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        rdsHighCpuDetection:
          $ref: '#/components/schemas/RdsHighCpuDetectionConfig'
        rdsHighWriteReadLatencyDetection:
          $ref: '#/components/schemas/RdsHighWriteReadLatencyDetectionConfig'
        rdsLowStorageDetection:
          $ref: '#/components/schemas/RdsLowStorageDetectionConfig'
        rdsHighMemoryDetection:
          $ref: '#/components/schemas/RdsHighMemoryDetectionConfig'
        elbHighConnectionErrorsDetection:
          $ref: '#/components/schemas/ElbHighConnectionErrorsDetectionConfig'
        rdsRestartsSequenceDetection:
          $ref: '#/components/schemas/RdsRestartsSequenceDetectionConfig'
        lambdaHighErrorRateDetection:
          $ref: '#/components/schemas/LambdaHighErrorRateDetectionConfig'
        ec2CandidateCpuSaturationDetection:
          $ref: '#/components/schemas/Ec2CandidateCpuSaturationDetectionConfig'
      required:
      - elbHighConnectionErrorsDetection
      - lambdaHighErrorRateDetection
      - rdsHighCpuDetection
      - rdsHighMemoryDetection
      - rdsHighWriteReadLatencyDetection
      - rdsLowStorageDetection
      - rdsRestartsSequenceDetection
      type: object
    Ec2CandidateCpuSaturationDetectionConfig:
      description: The configuration of the high CPU saturation on EC2 without installed
        agent (monitoring candidate). If null, then this configuration won't be changed.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/Ec2CandidateCpuSaturationThresholds'
      required:
      - enabled
      type: object
    Ec2CandidateCpuSaturationThresholds:
      description: Custom thresholds for high CPU saturation on EC2 monitoring candidate.
        If not set, automatic mode is used.
      properties:
        cpuUsagePercentage:
          description: Alert if CPU usage is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - cpuUsagePercentage
      type: object
    ElbHighConnectionErrorsDetectionConfig:
      description: The configuration of the high number of backend connection errors
        on ELB detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/ElbHighConnectionErrorsThresholds'
      required:
      - enabled
      type: object
    ElbHighConnectionErrorsThresholds:
      description: Custom thresholds for high number of backend connection errors
        on ELB. If not set, automatic mode is used.
      properties:
        connectionErrorsPerMinute:
          description: Alert if number of backend connection errors is higher than
            *X* per minute in 3 out of 5 samples.
          format: int32
          minimum: 1
          type: integer
      required:
      - connectionErrorsPerMinute
      type: object
    LambdaHighErrorRateDetectionConfig:
      description: The configuration of the AWS Lambda high error rate detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/LambdaHighErrorRateThresholds'
      required:
      - enabled
      type: object
    LambdaHighErrorRateThresholds:
      description: Custom thresholds for AWS Lambda high error rate. If not set, automatic
        mode is used.
      properties:
        failedInvocationsRate:
          description: Alert if failed invocations rate is higher than *X*% in 3 out
            of 5 samples.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - failedInvocationsRate
      type: object
    RdsHighCpuDetectionConfig:
      description: The configuration of the high CPU utilization on RDS detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/RdsHighCpuThresholds'
      required:
      - enabled
      type: object
    RdsHighCpuThresholds:
      description: Custom thresholds for high CPU utilization on RDS. If not set,
        automatic mode is used.
      properties:
        cpuUsagePercentage:
          description: Alert if CPU usage is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - cpuUsagePercentage
      type: object
    RdsHighLatencyThresholds:
      description: Custom thresholds for high RDS write/read latency. If not set,
        automatic mode is used
      properties:
        writeReadLatency:
          description: Alert if read/write latency is higher than *X* milliseconds
            in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - writeReadLatency
      type: object
    RdsHighMemoryDetectionConfig:
      description: The configuration of RDS running out of memory detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/RdsHighMemoryThresholds'
      required:
      - enabled
      type: object
    RdsHighMemoryThresholds:
      description: "Custom thresholds for RDS running out of memory. If not set, automatic\
        \ mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
      properties:
        freeMemory:
          description: Freeable memory is lower than *X* Megabytes in 3 out of 5 samples.
          exclusiveMinimum: false
          maximum: 1000
          minimum: 0.01
          type: number
        swapUsage:
          description: Swap usage is higher than *X* Gigabytes in 3 out of 5 samples.
          exclusiveMinimum: false
          maximum: 1000
          minimum: 0.01
          type: number
      required:
      - freeMemory
      - swapUsage
      type: object
    RdsHighWriteReadLatencyDetectionConfig:
      description: The configuration of the high RDS write/read latency detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/RdsHighLatencyThresholds'
      required:
      - enabled
      type: object
    RdsLowStorageDetectionConfig:
      description: The configuration of the low free storage space on RDS detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/RdsLowStorageThresholds'
      required:
      - enabled
      type: object
    RdsLowStorageThresholds:
      description: Custom thresholds for low free storage space on RDS. If not set,
        automatic mode is used.
      properties:
        freeStoragePercentage:
          description: Alert if free storage space divided by allocated storage is
            lower than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - freeStoragePercentage
      type: object
    RdsRestartsSequenceDetectionConfig:
      description: The configuration of the restarts sequence on RDS detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/RdsRestartsThresholds'
      required:
      - enabled
      type: object
    RdsRestartsThresholds:
      description: Custom thresholds for restarts sequence on RDS. If not set, automatic
        mode is used.
      properties:
        restartsPerMinute:
          description: Alert if number of restarts is *X* per minute or higher in
            3 out of 20 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - restartsPerMinute
      type: object
    DatabaseAnomalyDetectionConfig:
      description: The configuration of the anomaly detection for database services.
      example:
        responseTimeDegradation:
          detectionMode: DETECT_AUTOMATICALLY
          automaticDetection:
            responseTimeDegradationMilliseconds: 250
            responseTimeDegradationPercent: 90
            slowestResponseTimeDegradationMilliseconds: 500
            slowestResponseTimeDegradationPercent: 200
            loadThreshold: ONE_REQUEST_PER_MINUTE
        loadDrop:
          enabled: true
          loadDropPercent: 40
          minAbnormalStateDurationInMinutes: 5
        loadSpike:
          enabled: false
        failureRateIncrease:
          detectionMode: DETECT_USING_FIXED_THRESHOLDS
          thresholds:
            threshold: 10
            sensitivity: LOW
        databaseConnectionFailureCount:
          enabled: "true"
          connectionFailsCount: 5
          timePeriodMinutes: 5
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        responseTimeDegradation:
          $ref: '#/components/schemas/ResponseTimeDegradationDetectionConfig'
        loadDrop:
          $ref: '#/components/schemas/LoadDropDetectionConfig'
        loadSpike:
          $ref: '#/components/schemas/LoadSpikeDetectionConfig'
        failureRateIncrease:
          $ref: '#/components/schemas/FailureRateIncreaseDetectionConfig'
        databaseConnectionFailureCount:
          $ref: '#/components/schemas/DatabaseConnectionFailureDetectionConfig'
      required:
      - databaseConnectionFailureCount
      - failureRateIncrease
      - responseTimeDegradation
      type: object
    DatabaseConnectionFailureDetectionConfig:
      description: "Parameters of the failed database connections detection. \n\n\
        The alert is triggered when failed connections number exceeds **connectionFailsCount**\
        \ during any **timePeriodMinutes** minutes period."
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        connectionFailsCount:
          description: Number of failed database connections during any **timePeriodMinutes**
            minutes period to trigger an alert.
          format: int32
          maximum: 9999999
          minimum: 1
          type: integer
        timePeriodMinutes:
          description: The *X* minutes time period during which the **connectionFailsCount**
            is evaluated.
          format: int32
          maximum: 15
          minimum: 1
          type: integer
      required:
      - enabled
      type: object
    LoadDropDetectionConfig:
      description: The configuration of load drops detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        loadDropPercent:
          description: Alert if the observed load is less than *X* % of the expected
            value.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        minAbnormalStateDurationInMinutes:
          description: Alert if the service stays in abnormal state for at least *X*
            minutes.
          format: int32
          maximum: 60
          minimum: 1
          type: integer
      required:
      - enabled
      type: object
    LoadSpikeDetectionConfig:
      description: The configuration of load spikes detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        loadSpikePercent:
          description: Alert if the observed load is more than *X* % of the expected
            value.
          format: int32
          maximum: 1000
          minimum: 100
          type: integer
        minAbnormalStateDurationInMinutes:
          description: Alert if the service stays in abnormal state for at least *X*
            minutes.
          format: int32
          maximum: 60
          minimum: 1
          type: integer
      required:
      - enabled
      type: object
    DiskEventAnomalyDetectionConfig:
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        metric: LOW_DISK_SPACE
        violatingSamples: 8
        diskNameFilter:
          value: value
          operator: CONTAINS
        tagFilters:
        - context: AWS
          value: value
          key: key
        - context: AWS
          value: value
          key: key
        name: name
        threshold: 80.08281904610115
        id: id
        enabled: true
        samples: 10
        hostGroupId: hostGroupId
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the disk event rule.
          readOnly: true
          type: string
        name:
          description: The name of the disk event rule.
          maxLength: 49
          minLength: 1
          type: string
        enabled:
          description: Disk event rule enabled/disabled.
          type: boolean
        metric:
          description: The metric to monitor.
          enum:
          - LOW_DISK_SPACE
          - LOW_INODES
          - READ_TIME_EXCEEDING
          - WRITE_TIME_EXCEEDING
          type: string
        threshold:
          description: "The threshold to trigger disk event. \n\n * A percentage for\
            \ `LowDiskSpace` or `LowInodes` metrics. \n * In milliseconds for `ReadTimeExceeding`\
            \ or `WriteTimeExceeding` metrics."
          format: double
          maximum: 1000
          minimum: 0
          type: number
        samples:
          description: The number of samples to evaluate.
          example: 10
          format: int32
          maximum: 60
          minimum: 3
          type: integer
        violatingSamples:
          description: The number of samples that must violate the threshold to trigger
            an event. Must not exceed the number of evaluated samples.
          example: 8
          format: int32
          minimum: 1
          type: integer
        diskNameFilter:
          $ref: '#/components/schemas/DiskNameFilter'
        tagFilters:
          description: Narrows the rule usage down to the hosts matching the specified
            tags.
          items:
            $ref: '#/components/schemas/TagFilter'
          type: array
          uniqueItems: true
        hostGroupId:
          description: Narrows the rule usage down to disks that run on hosts that
            themselves run on the specified host group.
          type: string
      required:
      - enabled
      - metric
      - name
      - samples
      - threshold
      - violatingSamples
      type: object
    DiskNameFilter:
      description: Narrows the rule usage down to disks, matching the specified criteria.
      example:
        value: value
        operator: CONTAINS
      properties:
        operator:
          description: Comparison operator.
          enum:
          - CONTAINS
          - DOES_NOT_CONTAIN
          - DOES_NOT_EQUAL
          - DOES_NOT_START_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        value:
          description: Value to compare to.
          maxLength: 100
          minLength: 0
          type: string
      required:
      - operator
      - value
      type: object
    ConnectionLostDetectionConfig:
      description: Configuration of lost connection detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        enabledOnGracefulShutdowns:
          description: Alert (`true`) on graceful host shutdowns.
          type: boolean
      required:
      - enabled
      - enabledOnGracefulShutdowns
      type: object
    DiskLowInodesDetectionConfig:
      description: Configuration of low disk inodes number detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/DiskLowInodesThresholds'
      required:
      - enabled
      type: object
    DiskLowInodesThresholds:
      description: Custom thresholds for low disk inodes number. If not set, automatic
        mode is used.
      properties:
        freeInodesPercentage:
          description: Alert if percentage of available inodes is lower than *X*%
            in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - freeInodesPercentage
      type: object
    DiskLowSpaceDetectionConfig:
      description: Configuration of low disk space detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/DiskLowSpaceThresholds'
      required:
      - enabled
      type: object
    DiskLowSpaceThresholds:
      description: Custom thresholds for low disk space. If not set, automatic mode
        is used.
      properties:
        freeSpacePercentage:
          description: Alert if free disk space is lower than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - freeSpacePercentage
      type: object
    DiskSlowWriteAndReadsThresholds:
      description: Custom thresholds for slow running disks. If not set, the automatic
        mode is used.
      properties:
        writeAndReadTime:
          description: Alert if disk read/write time is higher than *X* milliseconds
            in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - writeAndReadTime
      type: object
    DiskSlowWritesAndReadsDetectionConfig:
      description: Configuration of slow running disks detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/DiskSlowWriteAndReadsThresholds'
      required:
      - enabled
      type: object
    HighCpuSaturationDetectionConfig:
      description: Configuration of high CPU saturation detection
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/HighCpuSaturationThresholds'
      required:
      - enabled
      type: object
    HighCpuSaturationThresholds:
      description: Custom thresholds for high CPU saturation. If not set then the
        automatic mode is used.
      properties:
        cpuSaturation:
          description: Alert if CPU usage is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - cpuSaturation
      type: object
    HighGcActivityDetectionConfig:
      description: Configuration of high Garbage Collector activity detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/HighGcActivityThresholds'
      required:
      - enabled
      type: object
    HighGcActivityThresholds:
      description: "Custom thresholds for high GC activity. If not set, automatic\
        \ mode is used. \n\n Meeting **any** of these conditions triggers an alert."
      properties:
        gcTimePercentage:
          description: GC time is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        gcSuspensionPercentage:
          description: GC suspension is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - gcSuspensionPercentage
      - gcTimePercentage
      type: object
    HighMemoryDetectionConfig:
      description: Configuration of high memory usage detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/HighMemoryThresholds'
      required:
      - enabled
      type: object
    HighMemoryThresholds:
      description: "Custom thresholds for high memory usage. If not set then the automatic\
        \ mode is used. \n\n **Both** conditions must be met to trigger an alert."
      properties:
        pageFaultsPerSecondWindows:
          description: Memory page fault rate is higher than *X* faults per second
            on Windows.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        usedMemoryPercentageWindows:
          description: Memory usage is higher than *X*% on Windows.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        pageFaultsPerSecondNonWindows:
          description: Memory page fault rate is higher than *X* faults per second
            on Linux.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        usedMemoryPercentageNonWindows:
          description: Memory usage is higher than *X*% on Linux.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - pageFaultsPerSecondNonWindows
      - pageFaultsPerSecondWindows
      - usedMemoryPercentageNonWindows
      - usedMemoryPercentageWindows
      type: object
    HighNetworkDetectionConfig:
      description: Configuration of high network utilization detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/HighNetworkThresholds'
      required:
      - enabled
      type: object
    HighNetworkThresholds:
      description: Custom thresholds for high network utilization. If not set, automatic
        mode is used.
      properties:
        utilizationPercentage:
          description: Alert if sent/received traffic utilization is higher than *X*%
            in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - utilizationPercentage
      type: object
    HostsAnomalyDetectionConfig:
      description: Configuration of anomaly detection for hosts.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        connectionLostDetection:
          enabled: true
          enabledOnGracefulShutdowns: true
        highCpuSaturationDetection:
          enabled: true
          customThresholds:
            cpuSaturation: 90
        highMemoryDetection:
          enabled: true
          customThresholds:
            pageFaultsPerSecondWindows: 50
            usedMemoryPercentageWindows: 85
            pageFaultsPerSecondNonWindows: 10
            usedMemoryPercentageNonWindows: 85
        highGcActivityDetection:
          enabled: true
          customThresholds:
            gcTimePercentage: 35
            gcSuspensionPercentage: 20
        outOfMemoryDetection:
          enabled: true
          customThresholds:
            outOfMemoryExceptionsNumber: 2
        outOfThreadsDetection:
          enabled: true
          customThresholds:
            outOfThreadsExceptionsNumber: 2
        networkDroppedPacketsDetection:
          enabled: true
          customThresholds:
            droppedPacketsPercentage: 8
            totalPacketsRate: 8
        networkErrorsDetection:
          enabled: true
          customThresholds:
            errorsPercentage: 9
            totalPacketsRate: 9
        highNetworkDetection:
          enabled: true
          customThresholds:
            utilizationPercentage: 88
        networkTcpProblemsDetection:
          enabled: true
          customThresholds:
            newConnectionFailuresPercentage: 5
            failedConnectionsNumberPerMinute: 5
        networkHighRetransmissionDetection:
          enabled: true
          customThresholds:
            retransmissionRatePercentage: 15
            retransmittedPacketsNumberPerMinute: 15
        diskLowSpaceDetection:
          enabled: true
          customThresholds:
            freeSpacePercentage: 10
        diskSlowWritesAndReadsDetection:
          enabled: true
          customThresholds:
            writeAndReadTime: 300
        diskLowInodesDetection:
          enabled: true
          customThresholds:
            freeInodesPercentage: 10
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        connectionLostDetection:
          $ref: '#/components/schemas/ConnectionLostDetectionConfig'
        highCpuSaturationDetection:
          $ref: '#/components/schemas/HighCpuSaturationDetectionConfig'
        highMemoryDetection:
          $ref: '#/components/schemas/HighMemoryDetectionConfig'
        highGcActivityDetection:
          $ref: '#/components/schemas/HighGcActivityDetectionConfig'
        outOfMemoryDetection:
          $ref: '#/components/schemas/OutOfMemoryDetectionConfig'
        outOfThreadsDetection:
          $ref: '#/components/schemas/OutOfThreadsDetectionConfig'
        networkDroppedPacketsDetection:
          $ref: '#/components/schemas/NetworkDroppedPacketsDetectionConfig'
        networkErrorsDetection:
          $ref: '#/components/schemas/NetworkErrorsDetectionConfig'
        highNetworkDetection:
          $ref: '#/components/schemas/HighNetworkDetectionConfig'
        networkTcpProblemsDetection:
          $ref: '#/components/schemas/NetworkTcpProblemsDetectionConfig'
        networkHighRetransmissionDetection:
          $ref: '#/components/schemas/NetworkHighRetransmissionDetectionConfig'
        diskLowSpaceDetection:
          $ref: '#/components/schemas/DiskLowSpaceDetectionConfig'
        diskSlowWritesAndReadsDetection:
          $ref: '#/components/schemas/DiskSlowWritesAndReadsDetectionConfig'
        diskLowInodesDetection:
          $ref: '#/components/schemas/DiskLowInodesDetectionConfig'
      required:
      - connectionLostDetection
      - diskLowInodesDetection
      - diskLowSpaceDetection
      - diskSlowWritesAndReadsDetection
      - highCpuSaturationDetection
      - highGcActivityDetection
      - highMemoryDetection
      - highNetworkDetection
      - networkDroppedPacketsDetection
      - networkErrorsDetection
      - networkHighRetransmissionDetection
      - networkTcpProblemsDetection
      - outOfMemoryDetection
      - outOfThreadsDetection
      type: object
    NetworkDroppedPacketsDetectionConfig:
      description: Configuration of high number of dropped packets detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/NetworkDroppedPacketsThresholds'
      required:
      - enabled
      type: object
    NetworkDroppedPacketsThresholds:
      description: "Custom thresholds for dropped packets. If not set, automatic mode\
        \ is used. \n\n **All** of these conditions must be met to trigger an alert."
      properties:
        droppedPacketsPercentage:
          description: Receive/transmit dropped packet percentage is higher than *X*%
            in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        totalPacketsRate:
          description: Total receive/transmit packets rate is higher than *X* packets
            per second in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - droppedPacketsPercentage
      - totalPacketsRate
      type: object
    NetworkErrorsDetectionConfig:
      description: Configuration of high number of network errors detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/NetworkErrorsThresholds'
      required:
      - enabled
      type: object
    NetworkErrorsThresholds:
      description: "Custom thresholds for network errors. If not set, automatic mode\
        \ is used. \n\n **All** of these conditions must be met to trigger an alert."
      properties:
        errorsPercentage:
          description: Receive/transmit error packet percentage is higher than *X*%
            in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        totalPacketsRate:
          description: Total receive/transmit packets rate is higher than *X* packets
            per second in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - errorsPercentage
      - totalPacketsRate
      type: object
    NetworkHighRetransmissionDetectionConfig:
      description: Configuration of high retransmission rate detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/NetworkHighRetransmissionThresholds'
      required:
      - enabled
      type: object
    NetworkHighRetransmissionThresholds:
      description: "Custom thresholds for high retransmission rate. If not set, automatic\
        \ mode is used. \n\n **All** of these conditions must be met to trigger an\
        \ alert."
      properties:
        retransmissionRatePercentage:
          description: Retransmission rate is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        retransmittedPacketsNumberPerMinute:
          description: Number of retransmitted packets is higher than *X* packets
            per minute in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - retransmissionRatePercentage
      - retransmittedPacketsNumberPerMinute
      type: object
    NetworkTcpProblemsDetectionConfig:
      description: Configuration of TCP connectivity problems detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/NetworkTcpProblemsThresholds'
      required:
      - enabled
      type: object
    NetworkTcpProblemsThresholds:
      description: "Custom thresholds for TCP connection problems. If not set, automatic\
        \ mode is used. \n\n **All** of these conditions must be met to trigger an\
        \ alert."
      properties:
        newConnectionFailuresPercentage:
          description: Percentage of new connection failures is higher than *X*% in
            3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        failedConnectionsNumberPerMinute:
          description: Number of failed connections is higher than *X* connections
            per minute in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - failedConnectionsNumberPerMinute
      - newConnectionFailuresPercentage
      type: object
    OutOfMemoryDetectionConfig:
      description: Configuration of Java out of memory problems detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/OutOfMemoryThresholds'
      required:
      - enabled
      type: object
    OutOfMemoryThresholds:
      description: Custom thresholds for Java out of memory. If not set, automatic
        mode is used.
      properties:
        outOfMemoryExceptionsNumber:
          description: Alert if the number of Java out of memory exceptions is *X*
            per minute or higher.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - outOfMemoryExceptionsNumber
      type: object
    OutOfThreadsDetectionConfig:
      description: Configuration of Java out of threads problems detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/OutOfThreadsThresholds'
      required:
      - enabled
      type: object
    OutOfThreadsThresholds:
      description: Custom thresholds for Java out of threads detection. If not set,
        automatic mode is used.
      properties:
        outOfThreadsExceptionsNumber:
          description: Alert if the number of Java out of threads exceptions is *X*
            per minute or higher.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - outOfThreadsExceptionsNumber
      type: object
    CustomDeviceGroupNameAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/CustomDeviceGroupNameAlertingScope_allOf'
      description: A scope filter for the related custom device group name.
      required:
      - filterType
      - nameFilter
      type: object
    EntityIdAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/EntityIdAlertingScope_allOf'
      description: A scope filter for a monitored entity identifier.
      required:
      - entityId
      - filterType
      type: object
    HostGroupNameAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/CustomDeviceGroupNameAlertingScope_allOf'
      description: A scope filter for the related host group name.
      required:
      - filterType
      - nameFilter
      type: object
    HostNameAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/CustomDeviceGroupNameAlertingScope_allOf'
      description: A scope filter for the related host name.
      required:
      - filterType
      - nameFilter
      type: object
    ManagementZoneAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/ManagementZoneAlertingScope_allOf'
      description: A scope filter for a management zone identifier.
      required:
      - filterType
      type: object
    MetricEvent:
      description: The configuration of the metric event.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        metricId: com.dynatrace.builtin:host.disk.bytesread
        name: My metric event
        description: This is the description for my metric event.
        aggregationType: AVG
        severity: CUSTOM_ALERT
        alertingScope:
        - filterType: ENTITY_ID
          entityId: HOST-000000000001E240
        - filterType: TAG
          tagFilter:
            context: CONTEXTLESS
            key: someKey
            value: someValue
        metricDimensions:
        - filterType: ENTITY
          key: dt.entity.disk
          nameFilter:
            value: diskName
            operator: EQUALS
        enabled: true
        disabledReason: NONE
        warningReason: NONE
        monitoringStrategy:
          type: STATIC_THRESHOLD
          alertCondition: ABOVE
          samples: 5
          violatingSamples: 3
          dealertingSamples: 5
          threshold: 80.0
          unit: KILO_BYTE_PER_SECOND
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the metric event.
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9\.\-_:]+$
          type: string
        metricId:
          description: The ID of the metric evaluated by the metric event.
          type: string
        name:
          description: The name of the metric event displayed in the UI.
          maxLength: 1024
          minLength: 0
          type: string
        description:
          description: The description of the metric event.
          maxLength: 4000
          minLength: 0
          type: string
        aggregationType:
          description: "How the metric data points are aggregated for the evaluation.\
            \ \n\n The timeseries must support this aggregation."
          enum:
          - AVG
          - COUNT
          - MAX
          - MEDIAN
          - MIN
          - P90
          - SUM
          - VALUE
          type: string
        severity:
          description: "The type of the event to trigger on the threshold violation.\
            \ \n\nThe `CUSTOM_ALERT` type is not correlated with other alerts.\nThe\
            \ `INFO` type does not open a problem."
          enum:
          - AVAILABILITY
          - CUSTOM_ALERT
          - ERROR
          - INFO
          - PERFORMANCE
          - RESOURCE_CONTENTION
          type: string
        enabled:
          description: The metric event is enabled (`true`) or disabled (`false`).
          type: boolean
        disabledReason:
          description: "The reason of automatic disabling. \n\nThe `NONE` means config\
            \ was not disabled automatically."
          enum:
          - NONE
          - TOO_MANY_DIMS
          - TOPX_FORCIBLY_DEACTIVATED
          readOnly: true
          type: string
        warningReason:
          description: "The reason of a warning set on the config. \n\nThe `NONE`\
            \ means config has no warnings."
          enum:
          - NONE
          - TOO_MANY_DIMS
          readOnly: true
          type: string
        alertingScope:
          description: Defines the scope of the metric event. Only one filter is allowed
            per filter type, except for tags, where up to 3 are allowed. The filters
            are combined by conjunction.
          items:
            $ref: '#/components/schemas/MetricEventAlertingScope'
          type: array
        metricDimensions:
          description: Defines the dimensions of the metric to alert on. The filters
            are combined by conjunction.
          items:
            $ref: '#/components/schemas/MetricEventDimensions'
          type: array
        monitoringStrategy:
          $ref: '#/components/schemas/MetricEventMonitoringStrategy'
        primaryDimensionKey:
          description: Defines which dimension key should be used for the **alertingScope**.
          type: string
      required:
      - description
      - enabled
      - metricId
      - monitoringStrategy
      - name
      type: object
    MetricEventAlertingScope:
      description: "A single filter for the alerting scope.\n\nThis is the base version\
        \ of the filter, depending on the type, \nthe actual JSON may contain additional\
        \ fields."
      discriminator:
        propertyName: filterType
      properties:
        filterType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `ENTITY_ID` -> EntityIdAlertingScope\
            \ \n* `MANAGEMENT_ZONE` -> ManagementZoneAlertingScope \n* `TAG` -> TagFilterAlertingScope\
            \ \n* `NAME` -> NameAlertingScope \n* `CUSTOM_DEVICE_GROUP_NAME` -> CustomDeviceGroupNameAlertingScope\
            \ \n* `HOST_GROUP_NAME` -> HostGroupNameAlertingScope \n* `HOST_NAME`\
            \ -> HostNameAlertingScope \n* `PROCESS_GROUP_ID` -> ProcessGroupIdAlertingScope\
            \ \n* `PROCESS_GROUP_NAME` -> ProcessGroupNameAlertingScope \n"
          enum:
          - CUSTOM_DEVICE_GROUP_NAME
          - ENTITY_ID
          - HOST_GROUP_NAME
          - HOST_NAME
          - MANAGEMENT_ZONE
          - NAME
          - PROCESS_GROUP_ID
          - PROCESS_GROUP_NAME
          - TAG
          type: string
      required:
      - filterType
      type: object
    MetricEventAutoAdaptiveBaselineMonitoringStrategy:
      allOf:
      - $ref: '#/components/schemas/MetricEventMonitoringStrategy'
      - $ref: '#/components/schemas/MetricEventAutoAdaptiveBaselineMonitoringStrategy_allOf'
      description: An auto-adaptive baseline strategy to detect anomalies within metrics
        that show a regular change over time, as the baseline is also updated automatically.
        An example is to detect an anomaly in the number of received network packets
        or within the number of user actions over time.
      required:
      - alertCondition
      - dealertingSamples
      - numberOfSignalFluctuations
      - samples
      - type
      - violatingSamples
      type: object
    MetricEventDimensions:
      description: "A single filter for the metrics dimensions.\n\nThis is the base\
        \ version of the filter, depending on the type, \nthe actual JSON may contain\
        \ additional fields."
      discriminator:
        propertyName: filterType
      properties:
        filterType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `ENTITY` -> MetricEventEntityDimensions\
            \ \n* `STRING` -> MetricEventStringDimensions \n"
          enum:
          - ENTITY
          - STRING
          type: string
        key:
          description: The dimensions key on the metric.
          type: string
      required:
      - filterType
      type: object
    MetricEventEntityDimensions:
      allOf:
      - $ref: '#/components/schemas/MetricEventDimensions'
      - $ref: '#/components/schemas/MetricEventEntityDimensions_allOf'
      description: A filter for the metrics entity dimensions.
      required:
      - filterType
      - nameFilter
      type: object
    MetricEventMonitoringStrategy:
      description: "A monitoring strategy for a metric event config.\n\nThis is the\
        \ base version of the monitoring strategy, depending on the type, \nthe actual\
        \ JSON may contain additional fields."
      discriminator:
        propertyName: type
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `STATIC_THRESHOLD` -> MetricEventStaticThresholdMonitoringStrategy\
            \ \n* `AUTO_ADAPTIVE_BASELINE` -> MetricEventAutoAdaptiveBaselineMonitoringStrategy\
            \ \n"
          enum:
          - AUTO_ADAPTIVE_BASELINE
          - STATIC_THRESHOLD
          type: string
      required:
      - type
      type: object
    MetricEventStaticThresholdMonitoringStrategy:
      allOf:
      - $ref: '#/components/schemas/MetricEventMonitoringStrategy'
      - $ref: '#/components/schemas/MetricEventStaticThresholdMonitoringStrategy_allOf'
      description: A static threshold monitoring strategy to alert on hard limits
        within a given metric. An example is the violation of a critical memory limit.
      required:
      - alertCondition
      - dealertingSamples
      - samples
      - threshold
      - type
      - unit
      - violatingSamples
      type: object
    MetricEventStringDimensions:
      allOf:
      - $ref: '#/components/schemas/MetricEventDimensions'
      - $ref: '#/components/schemas/MetricEventStringDimensions_allOf'
      description: A filter for the metrics string dimensions.
      required:
      - filterType
      - textFilter
      type: object
    MetricEventTextFilterMetricEventDimensionsFilterOperatorDto:
      description: A filter for a string value based on the given operator.
      properties:
        value:
          description: The value to match on.
          maxLength: 1000
          minLength: 1
          type: string
        operator:
          description: The operator to match on.
          enum:
          - EQUALS
          type: string
      required:
      - operator
      - value
      type: object
    MetricEventTextFilterMetricEventTextFilterOperatorDto:
      description: A filter for a string value based on the given operator.
      properties:
        value:
          description: The value to match on.
          maxLength: 1000
          minLength: 1
          type: string
        operator:
          description: The operator to match on.
          enum:
          - CONTAINS_CASE_INSENSITIVE
          - CONTAINS_CASE_SENSITIVE
          - EQUALS
          type: string
      required:
      - operator
      - value
      type: object
    NameAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/CustomDeviceGroupNameAlertingScope_allOf'
      description: A scope filter for a monitored entity name.
      required:
      - filterType
      - nameFilter
      type: object
    ProcessGroupIdAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/ProcessGroupIdAlertingScope_allOf'
      description: A scope filter for a process group identifier.
      required:
      - filterType
      - processGroupId
      type: object
    ProcessGroupNameAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/CustomDeviceGroupNameAlertingScope_allOf'
      description: A scope filter for the related process group name.
      required:
      - filterType
      - nameFilter
      type: object
    TagFilterAlertingScope:
      allOf:
      - $ref: '#/components/schemas/MetricEventAlertingScope'
      - $ref: '#/components/schemas/TagFilterAlertingScope_allOf'
      description: A scope filter for tags on entities.
      required:
      - filterType
      - tagFilter
      type: object
    AnomalyDetectionPG:
      description: Configuration of anomaly detection for the process group.
      example:
        availabilityMonitoring:
          method: MINIMUM_THRESHOLD
          minimumThreshold: 5
      properties:
        availabilityMonitoring:
          $ref: '#/components/schemas/AvailabilityMonitoringPG'
      type: object
    AvailabilityMonitoringPG:
      description: Configuration of the availability monitoring for the process group.
      example:
        method: MINIMUM_THRESHOLD
        minimumThreshold: 5
      properties:
        method:
          description: "How to monitor the availability of the process group: \n\n\
            * `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable.\
            \ \n* `MINIMUM_THRESHOLD`: Alert if the number of active processes in\
            \ the group falls below the specified threshold. \n* `OFF`: Availability\
            \ monitoring is disabled."
          enum:
          - MINIMUM_THRESHOLD
          - "OFF"
          - PROCESS_IMPACT
          type: string
        minimumThreshold:
          description: Alert if the number of active processes in the group is lower
            than this value.
          format: int32
          type: integer
      required:
      - method
      type: object
    ServiceAnomalyDetectionConfig:
      description: Dynatrace automatically detects service-related performance anomalies
        such as response time degradations and failure rate increases. Use these settings
        to configure detection sensitivity, set alert thresholds, or disable alerting
        for certain services.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        responseTimeDegradation:
          detectionMode: DETECT_AUTOMATICALLY
          automaticDetection:
            responseTimeDegradationMilliseconds: 250
            responseTimeDegradationPercent: 90
            slowestResponseTimeDegradationMilliseconds: 500
            slowestResponseTimeDegradationPercent: 200
            loadThreshold: ONE_REQUEST_PER_MINUTE
        loadDrop:
          enabled: true
          loadDropPercent: 40
          minAbnormalStateDurationInMinutes: 5
        loadSpike:
          enabled: false
        failureRateIncrease:
          detectionMode: DETECT_USING_FIXED_THRESHOLDS
          thresholds:
            threshold: 10
            sensitivity: LOW
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        responseTimeDegradation:
          $ref: '#/components/schemas/ResponseTimeDegradationDetectionConfig'
        loadDrop:
          $ref: '#/components/schemas/LoadDropDetectionConfig'
        loadSpike:
          $ref: '#/components/schemas/LoadSpikeDetectionConfig'
        failureRateIncrease:
          $ref: '#/components/schemas/FailureRateIncreaseDetectionConfig'
      required:
      - failureRateIncrease
      - responseTimeDegradation
      type: object
    DroppedPacketsDetectionConfig:
      description: The configuration of the high number of dropped packets detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/DroppedPacketsThresholds'
      required:
      - enabled
      type: object
    DroppedPacketsThresholds:
      description: Custom thresholds for high number of dropped packets. If not set
        then the automatic mode is used.
      properties:
        droppedPacketsPerSecond:
          description: Alert if receive/transmit dropped packets rate on NIC is higher
            than *X* packets per second in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - droppedPacketsPerSecond
      type: object
    EsxiHighCpuSaturationConfig:
      description: The configuration of the CPU saturation on ESXi host detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/EsxiHighCpuThresholds'
      required:
      - enabled
      type: object
    EsxiHighCpuThresholds:
      description: "Custom thresholds for CPU saturation detection on ESXi. If not\
        \ set then the automatic mode is used. \n\n **All** conditions must be fulfilled\
        \ to trigger an alert."
      properties:
        cpuUsagePercentage:
          description: CPU usage is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        vmCpuReadyPercentage:
          description: VM CPU ready is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        cpuPeakPercentage:
          description: At least one peak higher than *X*% occurred in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - cpuPeakPercentage
      - cpuUsagePercentage
      - vmCpuReadyPercentage
      type: object
    EsxiHighMemoryDetectionConfig:
      description: The configuration of the memory saturation on ESXi host detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/EsxiHighMemoryThresholds'
      required:
      - enabled
      type: object
    EsxiHighMemoryThresholds:
      description: Custom thresholds for memory saturation on ESXi host. If not set
        then the automatic mode is used.
      properties:
        compressionDecompressionRate:
          description: Alert if ESXi host swap IN/OUT or compression/decompression
            rate is higher *X* kilobytes per second in 3 out of 5 samples.
          exclusiveMinimum: false
          maximum: 1000000
          minimum: 0.01
          type: number
      required:
      - compressionDecompressionRate
      type: object
    GuestCPULimitReachedConfig:
      description: The configuration of the guest CPU limit reached configuration
        detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/GuestCPULimitThresholds'
      required:
      - enabled
      type: object
    GuestCPULimitThresholds:
      description: "Custom thresholds for guest CPU limit detection. If not set then\
        \ the automatic mode is used. \n\n **All** conditions must be fulfilled to\
        \ trigger an alert."
      properties:
        hostCpuUsageMinPercentage:
          description: Hypervisor CPU usage is higher than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        vmCpuUsageMaxPercentage:
          description: VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher
            than *X*% in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        vmCpuReadyMaxPercentage:
          description: VM CPU ready is higher than *X*% occurred in 3 out of 5 samples.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - hostCpuUsageMinPercentage
      - vmCpuReadyMaxPercentage
      - vmCpuUsageMaxPercentage
      type: object
    LowDatastoreSpaceDetectionConfig:
      description: The configuraiton of the low datastore free space detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/LowDatastoreSpaceThresholds'
      required:
      - enabled
      type: object
    LowDatastoreSpaceThresholds:
      description: Custom thresholds for low datastore free space. If not set then
        the automatic mode is used.
      properties:
        freeSpacePercentage:
          description: Alert if datastore free space is lower than *X*%.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - freeSpacePercentage
      type: object
    OverloadedStorageDetectionConfig:
      description: The cofiguration of the overloaded storage on physical storage
        device detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/OverloadedStorageThresholds'
      required:
      - enabled
      type: object
    OverloadedStorageThresholds:
      description: Custom thresholds for overloaded storage on physical storage device.
        If not set then the automatic mode is used.
      properties:
        commandAbortsNumber:
          description: Alert if number of command aborts is higher than *X* in 3 out
            of 5 samples.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - commandAbortsNumber
      type: object
    SlowPhysicalStorageDetectionConfig:
      description: The configuraiton of the physical storage device running slow detection.
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/SlowPhysicalStorageThresholds'
      required:
      - enabled
      type: object
    SlowPhysicalStorageThresholds:
      description: "Custom thresholds for slow running physical storage device. If\
        \ not set then the automatic mode is used. \n\n Fulfillment of **any** condition\
        \ triggers an alert."
      properties:
        avgReadWriteLatency:
          description: Read/write latency is higher than *X* milliseconds in 4 out
            of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        peakReadWriteLatency:
          description: Peak value for read/write latency is higher than *X* milliseconds
            in 4 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - avgReadWriteLatency
      - peakReadWriteLatency
      type: object
    UndersizedStorageDetectionConfig:
      description: Undersized storage device detection cofing
      properties:
        enabled:
          description: The detection is enabled (`true`) or disabled (`false`).
          type: boolean
        customThresholds:
          $ref: '#/components/schemas/UndersizedStorageThresholds'
      required:
      - enabled
      type: object
    UndersizedStorageThresholds:
      description: "Custom thresholds for undersized storage device. If not set then\
        \ the automatic mode is used. \n\n Fulfillment of **any** condition triggers\
        \ an alert."
      properties:
        averageQueueCommandLatency:
          description: Average queue command latency is higher than *X* milliseconds
            in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        peakQueueCommandLatency:
          description: Peak queue command latency is higher than *X* milliseconds
            in 3 out of 5 samples.
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - averageQueueCommandLatency
      - peakQueueCommandLatency
      type: object
    VMwareAnomalyDetectionConfig:
      description: The configuration of the anomaly detection for VMware.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        esxiHighCpuSaturation:
          enabled: true
          customThresholds:
            cpuUsagePercentage: 80
            vmCpuReadyPercentage: 10
            cpuPeakPercentage: 90
        esxiHighMemoryDetection:
          enabled: true
          customThresholds:
            compressionDecompressionRate: 120
        overloadedStorageDetection:
          enabled: true
          customThresholds:
            commandAbortsNumber: 1
        undersizedStorageDetection:
          enabled: true
          customThresholds:
            averageQueueCommandLatency: 15
            peakQueueCommandLatency: 160
        slowPhysicalStorageDetection:
          enabled: true
          customThresholds:
            avgReadWriteLatency: 150
            peakReadWriteLatency: 400
        droppedPacketsDetection:
          enabled: true
          customThresholds:
            droppedPacketsPerSecond: 4
        lowDatastoreSpaceDetection:
          enabled: true
          customThresholds:
            freeSpacePercentage: 5
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        esxiHighCpuSaturation:
          $ref: '#/components/schemas/EsxiHighCpuSaturationConfig'
        guestCpuLimitReached:
          $ref: '#/components/schemas/GuestCPULimitReachedConfig'
        esxiHighMemoryDetection:
          $ref: '#/components/schemas/EsxiHighMemoryDetectionConfig'
        overloadedStorageDetection:
          $ref: '#/components/schemas/OverloadedStorageDetectionConfig'
        undersizedStorageDetection:
          $ref: '#/components/schemas/UndersizedStorageDetectionConfig'
        slowPhysicalStorageDetection:
          $ref: '#/components/schemas/SlowPhysicalStorageDetectionConfig'
        droppedPacketsDetection:
          $ref: '#/components/schemas/DroppedPacketsDetectionConfig'
        lowDatastoreSpaceDetection:
          $ref: '#/components/schemas/LowDatastoreSpaceDetectionConfig'
      required:
      - droppedPacketsDetection
      - esxiHighCpuSaturation
      - esxiHighMemoryDetection
      - lowDatastoreSpaceDetection
      - overloadedStorageDetection
      - slowPhysicalStorageDetection
      - undersizedStorageDetection
      type: object
    MobileCustomApdex:
      description: "Apdex configuration of a mobile or custom application. \n\nA duration\
        \ less than the **tolerable** threshold is considered satisfied."
      example:
        frustratedOnError: true
        toleratedThreshold: 6
        frustratingThreshold: 1
      properties:
        toleratedThreshold:
          description: 'Apdex **tolerable** threshold, in milliseconds: a duration
            greater than or equal to this value is considered tolerable.'
          format: int32
          type: integer
        frustratingThreshold:
          description: 'Apdex **frustrated** threshold, in milliseconds: a duration
            greater than or equal to this value is considered frustrated.'
          format: int32
          type: integer
        frustratedOnError:
          description: 'Apdex error condition: if `true` the user session is considered
            frustrated when an error is reported.'
          type: boolean
      required:
      - frustratedOnError
      - frustratingThreshold
      - toleratedThreshold
      type: object
    MobileCustomAppConfig:
      description: Configuration of a mobile or custom application.
      example:
        identifier: identifier
        beaconEndpointUrl: beaconEndpointUrl
        applicationType: CUSTOM_APPLICATION
        costControlUserSessionPercentage: 8
        apdexSettings:
          frustratedOnError: true
          toleratedThreshold: 6
          frustratingThreshold: 1
        iconType: AMAZON_ECHO
        name: name
        beaconEndpointType: CLUSTER_ACTIVE_GATE
        applicationId: applicationId
        optInModeEnabled: true
        sessionReplayOnCrashEnabled: true
      properties:
        identifier:
          description: The Dynatrace entity ID of the application.
          readOnly: true
          type: string
        name:
          description: The name of the application.
          type: string
        applicationType:
          description: The type of the application.
          enum:
          - CUSTOM_APPLICATION
          - MOBILE_APPLICATION
          readOnly: true
          type: string
        applicationId:
          description: "The UUID of the application. \n\n It is used only by OneAgent\
            \ to send data to Dynatrace."
          readOnly: true
          type: string
        iconType:
          description: "The icon of the custom application. \n\nMobile applications\
            \ always use the mobile phone icon`."
          enum:
          - AMAZON_ECHO
          - DESKTOP
          - EMBEDDED
          - IOT
          - MICROSOFT_HOLOLENS
          - UFO
          - USERS
          type: string
        costControlUserSessionPercentage:
          description: The percentage of user sessions to be analyzed.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        apdexSettings:
          $ref: '#/components/schemas/MobileCustomApdex'
        optInModeEnabled:
          description: The opt-in mode is enabled (`true`) or disabled (`false`).
          type: boolean
        sessionReplayOnCrashEnabled:
          description: The session replay on crash is enabled (`true`) or disabled
            (`false`).
          type: boolean
        beaconEndpointType:
          description: The type of the beacon endpoint.
          enum:
          - CLUSTER_ACTIVE_GATE
          - ENVIRONMENT_ACTIVE_GATE
          - INSTRUMENTED_WEB_SERVER
          type: string
        beaconEndpointUrl:
          description: "The URL of the beacon endpoint. \n\n Only applicable when\
            \ the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`."
          type: string
      required:
      - name
      type: object
    MobileSessionProperty:
      description: Configuration of the mobile session property.
      example:
        cleanupRule: cleanupRule
        displayName: displayName
        origin: API
        name: name
        storeAsUserActionProperty: true
        serverSideRequestAttribute: serverSideRequestAttribute
        aggregation: FIRST
        type: DOUBLE
        key: key
        storeAsSessionProperty: true
      properties:
        key:
          description: The unique key of the session property.
          type: string
        displayName:
          description: The display name of the property.
          type: string
        type:
          description: The data type of the property.
          enum:
          - DOUBLE
          - LONG
          - STRING
          type: string
        origin:
          description: The origin of the property
          enum:
          - API
          - SERVER_SIDE_REQUEST_ATTRIBUTE
          type: string
        aggregation:
          description: "The aggregation type of the property. \n\n  It defines how\
            \ multiple values of the property are aggregated."
          enum:
          - FIRST
          - LAST
          - MAX
          - MIN
          - SUM
          type: string
        storeAsUserActionProperty:
          description: If `true`, the property is stored as a user action property
          type: boolean
        storeAsSessionProperty:
          description: If `true`, the property is stored as a session property
          type: boolean
        cleanupRule:
          description: "The cleanup rule of the property. \n\nDefines how to extract\
            \ the data you need from a string value. Specify the [regular expression](https://www.dynatrace.com/support/help/shortlink/regex)\
            \ for the data you need there."
          type: string
        serverSideRequestAttribute:
          description: "The ID of the request attribute. \n\nOnly applicable when\
            \ the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          type: string
        name:
          description: "The name of the reported value. \n\nOnly applicable when the\
            \ **origin** is set to `API`."
          type: string
      required:
      - key
      - origin
      - type
      type: object
    MobileSessionPropertyUpdate:
      description: An update of a mobile session property.
      example:
        cleanupRule: cleanupRule
        displayName: displayName
        origin: API
        name: name
        storeAsUserActionProperty: true
        serverSideRequestAttribute: serverSideRequestAttribute
        aggregation: FIRST
        type: DOUBLE
        storeAsSessionProperty: true
      properties:
        displayName:
          description: The display name of the property.
          type: string
        type:
          description: The data type of the property.
          enum:
          - DOUBLE
          - LONG
          - STRING
          type: string
        origin:
          description: The origin of the property
          enum:
          - API
          - SERVER_SIDE_REQUEST_ATTRIBUTE
          type: string
        aggregation:
          description: "The aggregation type of the property. \n\n  It defines how\
            \ multiple values of the property are aggregated."
          enum:
          - FIRST
          - LAST
          - MAX
          - MIN
          - SUM
          type: string
        storeAsUserActionProperty:
          description: If `true`, the property is stored as a user action property
          type: boolean
        storeAsSessionProperty:
          description: If `true`, the property is stored as a session property
          type: boolean
        cleanupRule:
          description: "The cleanup rule of the property. \n\nDefines how to extract\
            \ the data you need from a string value. Specify the [regular expression](https://www.dynatrace.com/support/help/shortlink/regex)\
            \ for the data you need there."
          type: string
        serverSideRequestAttribute:
          description: "The ID of the request attribute. \n\nOnly applicable when\
            \ the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          type: string
        name:
          description: "The name of the reported value. \n\nOnly applicable when the\
            \ **origin** is set to `API`."
          type: string
      required:
      - origin
      - type
      type: object
    MobileSessionPropertyList:
      description: A list of short representations of mobile session properties.
      example:
        sessionProperties:
        - displayName: displayName
          key: key
        - displayName: displayName
          key: key
      properties:
        sessionProperties:
          description: A list of short representations of mobile session properties.
          items:
            $ref: '#/components/schemas/MobileSessionPropertyShort'
          type: array
      type: object
    MobileSessionPropertyShort:
      description: A short representation of mobile session property.
      example:
        displayName: displayName
        key: key
      properties:
        key:
          description: The key of the session property.
          type: string
        displayName:
          description: The display name of the session property.
          type: string
      required:
      - key
      type: object
    KeyUserActionMobile:
      description: A list of key actions in an application.
      example:
        name: name
      properties:
        name:
          description: The name of the key use action.
          type: string
      type: object
    KeyUserActionMobileList:
      description: A list of key actions in an application.
      example:
        keyUserActions:
        - name: name
        - name: name
      properties:
        keyUserActions:
          description: A list of key actions in an application.
          items:
            $ref: '#/components/schemas/KeyUserActionMobile'
          type: array
          uniqueItems: true
      type: object
    ApplicationDataPrivacy:
      description: Data privacy settings of the application.
      example:
        identifier: identifier
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        doNotTrackBehaviour: CAPTURE_ANONYMIZED
        dataCaptureOptInEnabled: true
        persistentCookieForUserTracking: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        identifier:
          description: Dynatrace entity ID of the web application.
          readOnly: true
          type: string
        dataCaptureOptInEnabled:
          description: Set to `true` to disable data capture and cookies until JavaScriptAPI
            dtrum.enable() is called.
          type: boolean
        persistentCookieForUserTracking:
          description: Set to `true` to set persistent cookie in order to recognize
            returning devices.
          type: boolean
        doNotTrackBehaviour:
          description: 'How to handle browsers'' "Do Not Track": `IGNORE_DO_NOT_TRACK`,
            or `CAPTURE_ANONYMIZED`, or `DO_NOT_CAPTURE`.'
          enum:
          - CAPTURE_ANONYMIZED
          - DO_NOT_CAPTURE
          - IGNORE_DO_NOT_TRACK
          type: string
      required:
      - dataCaptureOptInEnabled
      - doNotTrackBehaviour
      - persistentCookieForUserTracking
      type: object
    ApplicationDataPrivacyList:
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        values:
        - identifier: identifier
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
          doNotTrackBehaviour: CAPTURE_ANONYMIZED
          dataCaptureOptInEnabled: true
          persistentCookieForUserTracking: true
        - identifier: identifier
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
          doNotTrackBehaviour: CAPTURE_ANONYMIZED
          dataCaptureOptInEnabled: true
          persistentCookieForUserTracking: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        values:
          items:
            $ref: '#/components/schemas/ApplicationDataPrivacy'
          type: array
      type: object
    AdditionalEventHandlers:
      description: Additional event handlers and wrappers.
      properties:
        userMouseupEventForClicks:
          description: Use mouseup event for clicks enabled/disabled.
          type: boolean
        clickEventHandler:
          description: Click event handler enabled/disabled.
          type: boolean
        mouseupEventHandler:
          description: Mouseup event handler enabled/disabled.
          type: boolean
        blurEventHandler:
          description: Blur event handler enabled/disabled.
          type: boolean
        changeEventHandler:
          description: Change event handler enabled/disabled.
          type: boolean
        toStringMethod:
          description: toString method enabled/disabled.
          type: boolean
        maxDomNodesToInstrument:
          description: Max. number of DOM nodes to instrument. Valid values range
            from 0 to 100000.
          format: int32
          maximum: 100000
          minimum: 0
          type: integer
      required:
      - blurEventHandler
      - changeEventHandler
      - clickEventHandler
      - maxDomNodesToInstrument
      - mouseupEventHandler
      - toStringMethod
      - userMouseupEventForClicks
      type: object
    AdvancedJavaScriptTagSettings:
      description: Advanced JavaScript tag settings.
      properties:
        syncBeaconFirefox:
          description: Send the beacon signal as a synchronous XMLHttpRequest using
            Firefox enabled/disabled.
          type: boolean
        syncBeaconInternetExplorer:
          description: Send the beacon signal as a synchronous XMLHttpRequest using
            Internet Explorer enabled/disabled.
          type: boolean
        instrumentUnsupportedAjaxFrameworks:
          description: Instrumentation of unsupported Ajax frameworks enabled/disabled.
          type: boolean
        specialCharactersToEscape:
          description: Additional special characters that are to be escaped using
            non-alphanumeric characters in HTML escape format.
          maxLength: 30
          minLength: 0
          pattern: '[^"<>]*'
          type: string
        maxActionNameLength:
          description: Maximum character length for action names. Valid values range
            from 5 to 10000.
          format: int32
          maximum: 10000
          minimum: 5
          type: integer
        maxErrorsToCapture:
          description: Maximum number of errors to be captured per page. Valid values
            range from 0 to 50.
          format: int32
          maximum: 50
          minimum: 0
          type: integer
        additionalEventHandlers:
          $ref: '#/components/schemas/AdditionalEventHandlers'
        eventWrapperSettings:
          $ref: '#/components/schemas/EventWrapperSettings'
        globalEventCaptureSettings:
          $ref: '#/components/schemas/GlobalEventCaptureSettings'
      required:
      - additionalEventHandlers
      - eventWrapperSettings
      - globalEventCaptureSettings
      - instrumentUnsupportedAjaxFrameworks
      - maxActionNameLength
      - maxErrorsToCapture
      - specialCharactersToEscape
      type: object
    Apdex:
      description: Defines the Apdex settings of an application.
      properties:
        threshold:
          type: number
        toleratedThreshold:
          description: "Maximal length of an action, in milliseconds, which is considered\
            \ as satisfied user experience. \n\n You can use values between 100 and\
            \ 60000."
          format: int32
          maximum: 60000
          minimum: 100
          type: integer
        frustratingThreshold:
          description: "Maximal length of an action, in milliseconds, which is considered\
            \ as tolerable user experience. \n\n You can use values between 100 and\
            \ 240000."
          format: int32
          maximum: 240000
          minimum: 100
          type: integer
        toleratedFallbackThreshold:
          description: "Fallback threshold of an XHR action, in milliseconds, defining\
            \ a satisfied user experience, when the configured KPM is not available.\
            \ \n\n Values between 100 and 60000 are allowed."
          format: int32
          maximum: 60000
          minimum: 100
          type: integer
        frustratingFallbackThreshold:
          description: "Fallback threshold of an XHR action, in milliseconds, defining\
            \ a tolerable user experience, when the configured KPM is not available.\
            \ \n\n Values between 100 and 240000 are allowed."
          format: int32
          maximum: 240000
          minimum: 100
          type: integer
      type: object
    ContentCapture:
      description: Settings for content capture.
      properties:
        resourceTimingSettings:
          $ref: '#/components/schemas/ResourceTimingSettings'
        javaScriptErrors:
          description: JavaScript errors monitoring enabled/disabled.
          type: boolean
        timeoutSettings:
          $ref: '#/components/schemas/TimeoutSettings'
        visuallyCompleteAndSpeedIndex:
          description: Visually complete and Speed index support enabled/disabled.
          type: boolean
        visuallyComplete2Settings:
          $ref: '#/components/schemas/VisuallyComplete2Settings'
      required:
      - javaScriptErrors
      - resourceTimingSettings
      - timeoutSettings
      - visuallyCompleteAndSpeedIndex
      type: object
    ConversionGoal:
      description: A conversion goal of the application.
      properties:
        name:
          description: The name of the conversion goal.
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: "The ID of conversion goal. \n\n Omit it while creating a new\
            \ conversion goal."
          type: string
        type:
          description: The type of the conversion goal.
          enum:
          - Destination
          - UserAction
          - VisitDuration
          - VisitNumActions
          type: string
        destinationDetails:
          $ref: '#/components/schemas/DestinationDetails'
        userActionDetails:
          $ref: '#/components/schemas/UserActionDetails'
        visitDurationDetails:
          $ref: '#/components/schemas/VisitDurationDetails'
        visitNumActionDetails:
          $ref: '#/components/schemas/VisitNumActionDetails'
      required:
      - name
      type: object
    DestinationDetails:
      description: Configuration of a destination-based conversion goal.
      properties:
        urlOrPath:
          description: The path to be reached to hit the conversion goal.
          type: string
        matchType:
          description: The operator of the match.
          enum:
          - Begins
          - Contains
          - Ends
          type: string
        caseSensitive:
          description: The match is case-sensitive (`true`) or (`false`).
          type: boolean
      required:
      - urlOrPath
      type: object
    EventWrapperSettings:
      description: In addition to the event handlers, events called using `addEventListener`
        or `attachEvent` can be captured. Be careful with this option! Event wrappers
        can conflict with the JavaScript code on a web page.
      properties:
        click:
          description: Click enabled/disabled.
          type: boolean
        mouseUp:
          description: MouseUp enabled/disabled.
          type: boolean
        change:
          description: Change enabled/disabled.
          type: boolean
        blur:
          description: Blur enabled/disabled.
          type: boolean
        touchStart:
          description: TouchStart enabled/disabled.
          type: boolean
        touchEnd:
          description: TouchEnd enabled/disabled.
          type: boolean
      required:
      - blur
      - change
      - click
      - mouseUp
      - touchEnd
      - touchStart
      type: object
    GlobalEventCaptureSettings:
      description: Global event capture settings.
      properties:
        mouseUp:
          description: MouseUp enabled/disabled.
          type: boolean
        mouseDown:
          description: MouseDown enabled/disabled.
          type: boolean
        click:
          description: Click enabled/disabled.
          type: boolean
        doubleClick:
          description: DoubleClick enabled/disabled.
          type: boolean
        keyUp:
          description: KeyUp enabled/disabled.
          type: boolean
        keyDown:
          description: KeyDown enabled/disabled.
          type: boolean
        scroll:
          description: Scroll enabled/disabled.
          type: boolean
        additionalEventCapturedAsUserInput:
          description: "Additional events to be captured globally as user input. \n\
            \nFor example, DragStart or DragEnd."
          maxLength: 100
          minLength: 0
          pattern: '[a-z,]*'
          type: string
      required:
      - additionalEventCapturedAsUserInput
      - click
      - doubleClick
      - keyDown
      - keyUp
      - mouseDown
      - mouseUp
      - scroll
      type: object
    IpAddressRange:
      description: The IP address or the IP address range to be mapped to the location.
      example:
        address: address
        subnetMask: 18
        addressTo: addressTo
      properties:
        subnetMask:
          description: The subnet mask of the IP address range.
          format: int32
          maximum: 128
          minimum: 0
          type: integer
        address:
          description: "The IP address to be mapped. \n\nFor an IP address range,\
            \ this is the **from** address."
          type: string
        addressTo:
          description: The **to** address of the IP address range.
          type: string
      required:
      - address
      type: object
    JavaScriptFrameworkSupport:
      description: Support of various JavaScript frameworks.
      properties:
        angular:
          description: AngularJS and Angular support enabled/disabled.
          type: boolean
        dojo:
          description: Dojo support enabled/disabled.
          type: boolean
        extJS:
          description: ExtJS, Sencha Touch support enabled/disabled.
          type: boolean
        icefaces:
          description: ICEfaces support enabled/disabled.
          type: boolean
        jQuery:
          description: jQuery, Backbone.js support enabled/disabled.
          type: boolean
        mooTools:
          description: MooTools support enabled/disabled.
          type: boolean
        prototype:
          description: Prototype support enabled/disabled.
          type: boolean
        activeXObject:
          description: ActiveXObject detection support enabled/disabled.
          type: boolean
      required:
      - activeXObject
      - angular
      - dojo
      - extJS
      - icefaces
      - jQuery
      - mooTools
      - prototype
      type: object
    JavaScriptInjectionRules:
      description: Rules for javascript injection
      properties:
        enabled:
          description: The enable or disable rule of the java script injection.
          type: boolean
        urlOperator:
          description: The url operator of the java script injection.
          enum:
          - ALL_PAGES
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        urlPattern:
          description: The url pattern of the java script injection.
          type: string
        rule:
          description: The url rule of the java script injection.
          enum:
          - AFTER_SPECIFIC_HTML
          - AUTOMATIC_INJECTION
          - BEFORE_SPECIFIC_HTML
          - DO_NOT_INJECT
          type: string
        htmlPattern:
          description: The html pattern of the java script injection.
          type: string
      required:
      - enabled
      - rule
      - urlOperator
      type: object
    MetaDataCapturing:
      description: Configuration to capture meta data with the JavaScript agent.
      properties:
        type:
          description: The type of the meta data to capture.
          enum:
          - COOKIE
          - CSS_SELECTOR
          - JAVA_SCRIPT_FUNCTION
          - JAVA_SCRIPT_VARIABLE
          - META_TAG
          - QUERY_STRING
          type: string
        capturingName:
          description: The name of the meta data to capture.
          type: string
        name:
          description: Name for displaying the captured values in Dynatrace.
          type: string
        uniqueId:
          description: The unique id of the meta data to capture.
          format: int32
          minimum: 0
          type: integer
        publicMetadata:
          description: True if this metadata should be captured regardless of the
            privacy settings
          type: boolean
      required:
      - capturingName
      - name
      - type
      type: object
    MonitoringSettings:
      description: Real user monitoring settings.
      properties:
        fetchRequests:
          description: '`fetch()` request capture enabled/disabled.'
          type: boolean
        xmlHttpRequest:
          description: '`XmlHttpRequest` support enabled/disabled.'
          type: boolean
        javaScriptFrameworkSupport:
          $ref: '#/components/schemas/JavaScriptFrameworkSupport'
        contentCapture:
          $ref: '#/components/schemas/ContentCapture'
        excludeXhrRegex:
          description: |-
            You can exclude some actions from becoming XHR actions.

            Put a regular expression, matching all the required URLs, here.

            If noting specified the feature is disabled.
          type: string
        correlationHeaderInclusionRegex:
          description: |
            To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (x-dtc) to each such request to the respective endpoints in AWS.

            Important: These endpoints must accept the x-dtc header, or the requests will fail.
          type: string
        injectionMode:
          description: JavaScript injection mode.
          enum:
          - CODE_SNIPPET
          - CODE_SNIPPET_ASYNC
          - INLINE_CODE
          - JAVASCRIPT_TAG
          type: string
        addCrossOriginAnonymousAttribute:
          description: Add the cross origin = anonymous attribute to capture JavaScript
            error messages and W3C resource timings.
          type: boolean
        scriptTagCacheDurationInHours:
          description: Time duration for the cache settings.
          format: int32
          type: integer
        libraryFileLocation:
          description: |-
            The location of your application’s custom JavaScript library file.

            If nothing specified the root directory of your web server is used.

            Only supported by auto-injected applications.
          maxLength: 512
          minLength: 0
          type: string
        monitoringDataPath:
          description: |-
            The location to send monitoring data from the JavaScript tag.

            Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.

            Only supported by auto-injected applications.
          maxLength: 512
          minLength: 0
          type: string
        customConfigurationProperties:
          description: Additional JavaScript tag properties that are specific to your
            application. To do this, type key=value pairs separated using a (|) symbol.
          maxLength: 1000
          minLength: 0
          type: string
        serverRequestPathId:
          description: Path to identify the server’s request ID.
          maxLength: 150
          minLength: 0
          pattern: '[a-zA-Z-~\\.]*'
          type: string
        secureCookieAttribute:
          description: Secure attribute usage for Dynatrace cookies enabled/disabled.
          type: boolean
        cookiePlacementDomain:
          description: Domain for cookie placement.
          maxLength: 150
          minLength: 0
          type: string
        cacheControlHeaderOptimizations:
          description: Optimize the value of cache control headers for use with Dynatrace
            real user monitoring enabled/disabled.
          type: boolean
        advancedJavaScriptTagSettings:
          $ref: '#/components/schemas/AdvancedJavaScriptTagSettings'
        browserRestrictionSettings:
          $ref: '#/components/schemas/WebApplicationConfigBrowserRestrictionSettings'
        ipAddressRestrictionSettings:
          $ref: '#/components/schemas/WebApplicationConfigIpAddressRestrictionSettings'
        javaScriptInjectionRules:
          description: Java script injection rules.
          items:
            $ref: '#/components/schemas/JavaScriptInjectionRules'
          type: array
      required:
      - advancedJavaScriptTagSettings
      - cacheControlHeaderOptimizations
      - contentCapture
      - cookiePlacementDomain
      - customConfigurationProperties
      - excludeXhrRegex
      - fetchRequests
      - injectionMode
      - javaScriptFrameworkSupport
      - secureCookieAttribute
      - serverRequestPathId
      - xmlHttpRequest
      type: object
    ResourceTimingSettings:
      description: Settings for resource timings capture.
      properties:
        w3cResourceTimings:
          description: W3C resource timings for third party/CDN enabled/disabled.
          type: boolean
        nonW3cResourceTimings:
          description: Timing for JavaScript files and images on non-W3C supported
            browsers enabled/disabled.
          type: boolean
        nonW3cResourceTimingsInstrumentationDelay:
          description: "Instrumentation delay for monitoring resource and image resource\
            \ impact in browsers that don't offer W3C resource timings. \n\nValid\
            \ values range from 0 to 9999.\n\nOnly effective if **nonW3cResourceTimings**\
            \ is enabled."
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        resourceTimingCaptureType:
          description: |-
            Defines how detailed resource timings are captured.

            Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.
          enum:
          - CAPTURE_ALL_SUMMARIES
          - CAPTURE_FULL_DETAILS
          - CAPTURE_LIMITED_SUMMARIES
          type: string
        resourceTimingsDomainLimit:
          description: |-
            Limits the number of domains for which W3C resource timings are captured.

            Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`.
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      required:
      - nonW3cResourceTimings
      - nonW3cResourceTimingsInstrumentationDelay
      - resourceTimingCaptureType
      - resourceTimingsDomainLimit
      - w3cResourceTimings
      type: object
    TimeoutSettings:
      description: Settings for timed action capture.
      properties:
        timedActionSupport:
          description: "Timed action support enabled/disabled. \n\nEnable to detect\
            \ actions that trigger sending of XHRs via *setTimout* methods."
          type: boolean
        temporaryActionLimit:
          description: Defines how deep temporary actions may cascade. 0 disables
            temporary actions completely. Recommended value if enabled is 3.
          format: int32
          type: integer
        temporaryActionTotalTimeout:
          description: The total timeout of all cascaded timeouts that should still
            be able to create a temporary action
          format: int32
          type: integer
      required:
      - temporaryActionLimit
      - temporaryActionTotalTimeout
      - timedActionSupport
      type: object
    UserActionAndSessionProperties:
      description: Defines userAction and session custom defined properties settings
        of an application.
      properties:
        displayName:
          description: The display name of the property.
          type: string
        type:
          description: The data type of the property.
          enum:
          - DATE
          - DOUBLE
          - LONG
          - LONG_STRING
          - STRING
          type: string
        origin:
          description: The origin of the property
          enum:
          - JAVASCRIPT_API
          - META_DATA
          - SERVER_SIDE_REQUEST_ATTRIBUTE
          type: string
        aggregation:
          description: "The aggregation type of the property. \n\n  It defines how\
            \ multiple values of the property are aggregated."
          enum:
          - FIRST
          - LAST
          type: string
        storeAsUserActionProperty:
          description: If `true`, the property is stored as a user action property
          type: boolean
        storeAsSessionProperty:
          description: If `true`, the property is stored as a session property
          type: boolean
        cleanupRule:
          description: "The cleanup rule of the property. \n\nDefines how to extract\
            \ the data you need from a string value. Specify the [regular expression](https://www.dynatrace.com/support/help/shortlink/regex)\
            \ for the data you need there."
          type: string
        serverSideRequestAttribute:
          description: "The ID of the request attribute. \n\nOnly applicable when\
            \ the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          type: string
        uniqueId:
          description: Unique id among all userTags and properties of this application
          format: int32
          minimum: 1
          type: integer
        key:
          description: Key of the property
          type: string
        metadataId:
          description: If the origin is META_DATA, metaData id of the property
          format: int32
          type: integer
        ignoreCase:
          description: If true, the value of this property will always be stored in
            lower case. Defaults to false.
          type: boolean
      required:
      - key
      - origin
      - type
      - uniqueId
      type: object
    UserActionDetails:
      description: Configuration of a user action-based conversion goal.
      properties:
        value:
          description: The value to be matched to hit the conversion goal.
          type: string
        caseSensitive:
          description: The match is case-sensitive (`true`) or (`false`).
          type: boolean
        matchType:
          description: The operator of the match.
          enum:
          - Begins
          - Contains
          - Ends
          type: string
        matchEntity:
          description: The type of the entity to which the rule applies.
          enum:
          - ActionName
          - CssSelector
          - JavaScriptVariable
          - MetaTag
          - PagePath
          - PageTitle
          - PageUrl
          - UrlAnchor
          - XhrUrl
          type: string
        actionType:
          description: Type of the action to which the rule applies.
          enum:
          - Custom
          - Load
          - Xhr
          type: string
      type: object
    UserActionNamingPlaceholder:
      description: The placeholder settings.
      properties:
        name:
          description: Placeholder name.
          maxLength: 50
          minLength: 1
          type: string
        input:
          description: Input.
          enum:
          - ELEMENT_IDENTIFIER
          - INPUT_TYPE
          - METADATA
          - PAGE_TITLE
          - PAGE_URL
          - SOURCE_URL
          - TOP_XHR_URL
          - XHR_URL
          type: string
        processingPart:
          description: Part.
          enum:
          - ALL
          - ANCHOR
          - PATH
          type: string
        processingSteps:
          description: Processing actions.
          items:
            $ref: '#/components/schemas/UserActionNamingPlaceholderProcessingStep'
          type: array
        metadataId:
          description: Id of the metadata.
          format: int32
          type: integer
        useGuessedElementIdentifier:
          description: Use the element identifier that was selected by Dynatrace.
          type: boolean
      required:
      - input
      - name
      - processingPart
      - useGuessedElementIdentifier
      type: object
    UserActionNamingPlaceholderProcessingStep:
      description: The processing step settings.
      properties:
        type:
          description: "An action to be taken by the processing: \n\n* `SUBSTRING`:\
            \ Extracts the string between **patternBefore** and **patternAfter**.\
            \ \n* `REPLACEMENT`: Replaces the string between **patternBefore** and\
            \ **patternAfter** with the specified **replacement**.\n* `REPLACE_WITH_PATTERN`:\
            \ Replaces the **patternToReplace** with the specified **replacement**.\
            \ \n* `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string\
            \ that matches the **regularExpression**. \n* `REPLACE_WITH_REGULAR_EXPRESSION`:\
            \ Replaces all occurrences that match **regularExpression** with the specified\
            \ **replacement**. \n* `REPLACE_IDS`: Replaces all IDs and UUIDs with\
            \ the specified **replacement**."
          enum:
          - EXTRACT_BY_REGULAR_EXPRESSION
          - REPLACEMENT
          - REPLACE_IDS
          - REPLACE_WITH_PATTERN
          - REPLACE_WITH_REGULAR_EXPRESSION
          - SUBSTRING
          type: string
        patternBefore:
          description: The pattern before the required value. It will be removed.
          type: string
        patternBeforeSearchType:
          description: The required occurrence of **patternBefore**.
          enum:
          - FIRST
          - LAST
          type: string
        patternAfter:
          description: The pattern after the required value. It will be removed.
          type: string
        patternAfterSearchType:
          description: The required occurrence of **patternAfter**.
          enum:
          - FIRST
          - LAST
          type: string
        replacement:
          description: Replacement for the original value.
          type: string
        patternToReplace:
          description: "The pattern to be replaced. \n\n Only applicable if the **type**\
            \ is `REPLACE_WITH_PATTERN`."
          type: string
        regularExpression:
          description: "A regular expression for the string to be extracted or replaced.\
            \ \n\n Only applicable if the **type** is `EXTRACT_BY_REGULAR_EXPRESSION`\
            \ or `REPLACE_WITH_REGULAR_EXPRESSION`."
          type: string
        fallbackToInput:
          description: "If set to true: Returns the input if **patternBefore** or\
            \ **patternAfter** cannot be found and the **type** is `SUBSTRING`. \n\
            \n Returns the input if **regularExpression** doesn't match and **type**\
            \ is `EXTRACT_BY_REGULAR_EXPRESSION`. \n\n Otherwise null is returned."
          type: boolean
      required:
      - type
      type: object
    UserActionNamingRule:
      description: The settings of naming rule.
      properties:
        template:
          description: Naming pattern. Use Curly brackets `{}` to select placeholders.
          minLength: 1
          type: string
        conditions:
          description: Defines the conditions when the naming rule should apply.
          items:
            $ref: '#/components/schemas/UserActionNamingRuleCondition'
          type: array
      required:
      - template
      type: object
    UserActionNamingRuleCondition:
      description: The settings of conditions for user action naming.
      properties:
        operand1:
          description: Must be a defined placeholder wrapped in curly braces
          minLength: 1
          type: string
        operand2:
          description: Must be null if operator is "IS_EMPTY", a regex if operator
            is "MATCHES_REGULAR_ERPRESSION". In all other cases the value can be a
            freetext or a placeholder wrapped in curly braces
          type: string
        operator:
          description: The operator of the condition
          enum:
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - IS_EMPTY
          - IS_NOT_EMPTY
          - MATCHES_REGULAR_EXPRESSION
          - NOT_CONTAINS
          - NOT_ENDS_WITH
          - NOT_EQUALS
          - NOT_MATCHES_REGULAR_EXPRESSION
          - NOT_STARTS_WITH
          - STARTS_WITH
          type: string
      required:
      - operand1
      - operator
      type: object
    UserActionNamingSettings:
      description: The settings of user action naming.
      properties:
        placeholders:
          description: User action placeholders.
          items:
            $ref: '#/components/schemas/UserActionNamingPlaceholder'
          type: array
        loadActionNamingRules:
          description: User action naming rules for loading actions.
          items:
            $ref: '#/components/schemas/UserActionNamingRule'
          type: array
        xhrActionNamingRules:
          description: User action naming rules for xhr actions.
          items:
            $ref: '#/components/schemas/UserActionNamingRule'
          type: array
        customActionNamingRules:
          description: User action naming rules for custom actions.
          items:
            $ref: '#/components/schemas/UserActionNamingRule'
          type: array
        ignoreCase:
          description: Case insensitive naming.
          type: boolean
        useFirstDetectedLoadAction:
          description: First load action found under an XHR action should be used
            when true. Else the deepest one under the xhr action is used
          type: boolean
        splitUserActionsByDomain:
          description: Deactivate this setting if different domains should not result
            in separate user actions.
          type: boolean
      type: object
    UserTag:
      description: Defines UserTags settings of an application.
      properties:
        uniqueId:
          description: uniqueId, unique among all userTags and properties of this
            application
          format: int32
          minimum: 1
          type: integer
        metadataId:
          description: If it's of type metaData, metaData id of the userTag
          format: int32
          type: integer
        cleanupRule:
          description: Cleanup rule expression of the userTag
          type: string
        serverSideRequestAttribute:
          description: requestAttribute Id of the userTag
          type: string
        ignoreCase:
          description: If true, the value of this tag will always be stored in lower
            case. Defaults to false.
          type: boolean
      required:
      - uniqueId
      type: object
    VisitDurationDetails:
      description: Configuration of a visit duration-based conversion goal.
      properties:
        durationInMillis:
          description: The duration of session to hit the conversion goal, in milliseconds.
          format: int64
          type: integer
      required:
      - durationInMillis
      type: object
    VisitNumActionDetails:
      description: Configuration of a number of user actions-based conversion goal.
      properties:
        numUserActions:
          description: The number of user actions to hit the conversion goal.
          format: int32
          type: integer
      type: object
    VisuallyComplete2Settings:
      description: Settings for VisuallyComplete2
      properties:
        imageUrlBlacklist:
          description: A RegularExpression used to exclude images and iframes from
            being detected by the VC module.
          type: string
        mutationBlacklist:
          description: Query selector for mutation nodes to ignore in VC and SI calculation
          type: string
        mutationTimeout:
          description: Determines the time in ms VC waits after an action closes to
            start calculation. Defaults to 50.
          format: int32
          maximum: 5000
          minimum: 0
          type: integer
        inactivityTimeout:
          description: The time in ms the VC module waits for no mutations happening
            on the page after the load action. Defaults to 1000.
          format: int32
          maximum: 30000
          minimum: 0
          type: integer
        threshold:
          description: Minimum visible area in pixels of elements to be counted towards
            VC and SI. Defaults to 50.
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      type: object
    SessionReplaySetting:
      description: Session replay settings.
      properties:
        enabled:
          description: SessionReplay Enabled.
          type: boolean
        costControlPercentage:
          description: Session replay sampling rating in percentage.
          type: integer
      type: object
    WaterfallSettings:
      description: These settings influence the monitoring data you receive for 3rd
        party, CDN, and 1st party resources.
      properties:
        uncompressedResourcesThreshold:
          description: Warn about uncompressed resources larger than *X* bytes.
          format: int32
          maximum: 99999
          minimum: 0
          type: integer
        resourcesThreshold:
          description: Warn about resources larger than *X* bytes.
          format: int32
          maximum: 99999000
          minimum: 0
          type: integer
        resourceBrowserCachingThreshold:
          description: Warn about resources with a lower browser cache rate above
            *X*%.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        slowFirstPartyResourcesThreshold:
          description: Warn about slow 1st party resources with a response time above
            *X* ms.
          format: int32
          maximum: 99999000
          minimum: 0
          type: integer
        slowThirdPartyResourcesThreshold:
          description: Warn about slow 3rd party resources with a response time above
            *X* ms.
          format: int32
          maximum: 99999000
          minimum: 0
          type: integer
        slowCdnResourcesThreshold:
          description: Warn about slow CDN resources with a response time above *X*
            ms.
          format: int32
          maximum: 99999000
          minimum: 0
          type: integer
        speedIndexVisuallyCompleteRatioThreshold:
          description: Warn if Speed index exceeds *X* % of Visually complete.
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      required:
      - resourceBrowserCachingThreshold
      - resourcesThreshold
      - slowCdnResourcesThreshold
      - slowFirstPartyResourcesThreshold
      - slowThirdPartyResourcesThreshold
      - speedIndexVisuallyCompleteRatioThreshold
      - uncompressedResourcesThreshold
      type: object
    WebApplicationConfig:
      description: Configuration of a web application.
      example:
        name: application name
        type: AUTO_INJECTED
        realUserMonitoringEnabled: true
        sessionReplayConfig:
          costControlPercentage: 100
          enabled: true
        costControlUserSessionPercentage: 100
        loadActionKeyPerformanceMetric: VISUALLY_COMPLETE
        xhrActionKeyPerformanceMetric: ACTION_DURATION
        loadActionApdexSettings:
          toleratedThreshold: 3000
          frustratingThreshold: 12000
          toleratedFallbackThreshold: 3000
          frustratingFallbackThreshold: 12000
        xhrActionApdexSettings:
          toleratedThreshold: 2500
          frustratingThreshold: 10000
          toleratedFallbackThreshold: 3000
          frustratingFallbackThreshold: 12000
        customActionApdexSettings:
          toleratedThreshold: 3000
          frustratingThreshold: 12000
          toleratedFallbackThreshold: 3000
          frustratingFallbackThreshold: 12000
        waterfallSettings:
          uncompressedResourcesThreshold: 860
          resourcesThreshold: 100000
          resourceBrowserCachingThreshold: 50
          slowFirstPartyResourcesThreshold: 200000
          slowThirdPartyResourcesThreshold: 200000
          slowCdnResourcesThreshold: 200000
          speedIndexVisuallyCompleteRatioThreshold: 50
        monitoringSettings:
          fetchRequests: false
          xmlHttpRequest: true
          javaScriptFrameworkSupport:
            angular: true
            dojo: false
            extJS: false
            icefaces: false
            jQuery: true
            mooTools: false
            prototype: true
            activeXObject: false
          contentCapture:
            resourceTimingSettings:
              w3cResourceTimings: true
              nonW3cResourceTimings: false
              nonW3cResourceTimingsInstrumentationDelay: 50
              resourceTimingCaptureType: CAPTURE_FULL_DETAILS
              resourceTimingsDomainLimit: 10
            javaScriptErrors: true
            timeoutSettings:
              timedActionSupport: false
              temporaryActionLimit: 0
              temporaryActionTotalTimeout: 100
            visuallyCompleteAndSpeedIndex: true
          excludeXhrRegex: ""
          injectionMode: JAVASCRIPT_TAG
          libraryFileLocation: ""
          monitoringDataPath: ""
          customConfigurationProperties: ""
          serverRequestPathId: ""
          secureCookieAttribute: false
          cookiePlacementDomain: ""
          cacheControlHeaderOptimizations: true
          advancedJavaScriptTagSettings:
            syncBeaconFirefox: false
            syncBeaconInternetExplorer: false
            instrumentUnsupportedAjaxFrameworks: false
            specialCharactersToEscape: ""
            maxActionNameLength: 100
            maxErrorsToCapture: 10
            additionalEventHandlers:
              userMouseupEventForClicks: false
              clickEventHandler: false
              mouseupEventHandler: false
              blurEventHandler: false
              changeEventHandler: false
              toStringMethod: false
              maxDomNodesToInstrument: 5000
            eventWrapperSettings:
              click: false
              mouseUp: false
              change: false
              blur: false
              touchStart: false
              touchEnd: false
            globalEventCaptureSettings:
              mouseUp: true
              mouseDown: true
              click: true
              doubleClick: true
              keyUp: true
              keyDown: true
              scroll: true
              additionalEventCapturedAsUserInput: ""
          browserRestrictionSettings:
            browserRestrictions:
            - browserType: INTERNET_EXPLORER
              browserVersion: "0"
              platform: ALL
              comparator: EQUALS
            mode: EXCLUDE
          javaScriptInjectionRules:
          - enabled: true
            urlOperator: CONTAINS
            urlPattern: /lorem/ipsum.jsp
            rule: AFTER_SPECIFIC_HTML
            htmlPattern: </title>
          ipAddressRestrictionSettings:
            ipAddressRestrictions:
            - subnetMask: 3
              address: 10.0.0.1
            - address: 10.0.0.1
              addressTo: 10.0.0.2
            mode: EXCLUDE
        userActionNamingSettings:
          placeholders:
          - name: myPlaceholder
            input: PAGE_URL
            processingPart: ALL
            processingSteps:
            - type: SUBSTRING
              patternBefore: .*b
              patternBeforeSearchType: FIRST
              patternAfter: .*a
              patternAfterSearchType: LAST
              replacement: value
            useGuessedElementIdentifier: false
          loadActionNamingRules:
          - template: Loading of {myPlaceholder}
            conditions:
            - operand1: '{myPlaceholder}'
              operand2: foo
              operator: CONTAINS
          xhrActionNamingRules:
          - template: Loading of {myPlaceholder}
            conditions:
            - operand1: '{myPlaceholder}'
              operand2: foo
              operator: CONTAINS
          ignoreCase: true
          splitUserActionsByDomain: true
        metaDataCaptureSettings:
        - type: JAVA_SCRIPT_VARIABLE
          capturingName: variableName
          name: display name
        conversionGoals:
        - name: conversionGoalName
          type: UserAction
          destinationDetails:
            urlOrPath: url or path
            matchType: Begins
            caseSensitive: false
          userActionDetails:
            value: value to match
            caseSensitive: true
            matchType: Ends
            matchEntity: ActionName
            actionType: Load
          visitDurationDetails:
            durationInMillis: 1
          visitNumActionDetails:
            numUserActions: 2
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        identifier:
          description: Dynatrace entity ID of the web application.
          readOnly: true
          type: string
        name:
          description: The name of the web application, displayed in the UI.
          maxLength: 50
          minLength: 0
          type: string
        type:
          description: The type of the web application.
          enum:
          - AUTO_INJECTED
          - BROWSER_EXTENSION_INJECTED
          - MANUALLY_INJECTED
          type: string
        realUserMonitoringEnabled:
          description: Real user monitoring enabled/disabled.
          type: boolean
        costControlUserSessionPercentage:
          description: Analize *X*% of user sessions.
          maximum: 100
          minimum: 0
          type: number
        loadActionKeyPerformanceMetric:
          description: The key performance metric of load actions.
          enum:
          - ACTION_DURATION
          - DOM_INTERACTIVE
          - LOAD_EVENT_END
          - LOAD_EVENT_START
          - RESPONSE_END
          - RESPONSE_START
          - SPEED_INDEX
          - VISUALLY_COMPLETE
          type: string
        sessionReplayConfig:
          $ref: '#/components/schemas/SessionReplaySetting'
        xhrActionKeyPerformanceMetric:
          description: The key performance metric of XHR actions.
          enum:
          - ACTION_DURATION
          - RESPONSE_END
          - RESPONSE_START
          - VISUALLY_COMPLETE
          type: string
        loadActionApdexSettings:
          $ref: '#/components/schemas/Apdex'
        xhrActionApdexSettings:
          $ref: '#/components/schemas/Apdex'
        customActionApdexSettings:
          $ref: '#/components/schemas/Apdex'
        waterfallSettings:
          $ref: '#/components/schemas/WaterfallSettings'
        monitoringSettings:
          $ref: '#/components/schemas/MonitoringSettings'
        userTags:
          description: User tags settings.
          items:
            $ref: '#/components/schemas/UserTag'
          type: array
        userActionAndSessionProperties:
          description: User action and session properties settings. Empty List means
            no change
          items:
            $ref: '#/components/schemas/UserActionAndSessionProperties'
          type: array
        userActionNamingSettings:
          $ref: '#/components/schemas/UserActionNamingSettings'
        metaDataCaptureSettings:
          description: Java script agent meta data capture settings.
          items:
            $ref: '#/components/schemas/MetaDataCapturing'
          type: array
        conversionGoals:
          description: A list of conversion goals of the application.
          items:
            $ref: '#/components/schemas/ConversionGoal'
          type: array
        urlInjectionPattern:
          description: Url injection pattern for manual web application.
          type: string
      required:
      - costControlUserSessionPercentage
      - customActionApdexSettings
      - loadActionApdexSettings
      - loadActionKeyPerformanceMetric
      - monitoringSettings
      - name
      - realUserMonitoringEnabled
      - waterfallSettings
      - xhrActionApdexSettings
      - xhrActionKeyPerformanceMetric
      type: object
    WebApplicationConfigBrowserRestriction:
      description: Browser exclusion rules for the browsers that are to be excluded.
      properties:
        browserVersion:
          description: The version of the browser that is used.
          type: string
        browserType:
          description: The type of the browser that is used.
          enum:
          - ANDROID_WEBKIT
          - BOTS_SPIDERS
          - CHROME
          - EDGE
          - FIREFOX
          - INTERNET_EXPLORER
          - OPERA
          - SAFARI
          type: string
        platform:
          description: The platform on which the browser is being used.
          enum:
          - ALL
          - DESKTOP
          - MOBILE
          type: string
        comparator:
          description: Compares different browsers together.
          enum:
          - EQUALS
          - GREATER_THAN_OR_EQUAL
          - LOWER_THAN_OR_EQUAL
          type: string
      required:
      - browserType
      type: object
    WebApplicationConfigBrowserRestrictionSettings:
      description: Settings for restricting certain browser type, version, platform
        and, comparator. It also restricts the mode.
      properties:
        mode:
          description: The mode of the list of browser restrictions.
          enum:
          - EXCLUDE
          - INCLUDE
          type: string
        browserRestrictions:
          description: A list of browser restrictions.
          items:
            $ref: '#/components/schemas/WebApplicationConfigBrowserRestriction'
          type: array
      required:
      - mode
      type: object
    WebApplicationConfigIpAddressRestrictionSettings:
      description: Settings for restricting certain ip addresses and for introducing
        subnet mask. It also restricts the mode.
      properties:
        mode:
          description: The mode of the list of ip address restrictions.
          enum:
          - EXCLUDE
          - INCLUDE
          type: string
        ipAddressRestrictions:
          items:
            $ref: '#/components/schemas/IpAddressRange'
          type: array
      required:
      - mode
      type: object
    ApplicationErrorRules:
      description: Configuration of error rules in the web application.
      example:
        httpErrorRules:
        - filter: BEGINS_WITH
          considerForAi: true
          considerUnknownErrorCode: true
          errorCodes: "400"
          capture: true
          impactApdex: true
          filterByUrl: true
          url: url
        - filter: BEGINS_WITH
          considerForAi: true
          considerUnknownErrorCode: true
          errorCodes: "400"
          capture: true
          impactApdex: true
          filterByUrl: true
          url: url
        ignoreCustomErrorsInApdexCalculation: true
        customErrorRules:
        - keyPattern: keyPattern
          customAlerting: true
          keyMatcher: BEGINS_WITH
          capture: true
          impactApdex: true
          valuePattern: valuePattern
          valueMatcher: BEGINS_WITH
        - keyPattern: keyPattern
          customAlerting: true
          keyMatcher: BEGINS_WITH
          capture: true
          impactApdex: true
          valuePattern: valuePattern
          valueMatcher: BEGINS_WITH
        ignoreHttpErrorsInApdexCalculation: true
        ignoreJavaScriptErrorsInApdexCalculation: true
      properties:
        ignoreJavaScriptErrorsInApdexCalculation:
          description: Exclude (`true`) or include (`false`) JavaScript errors in
            Apdex calculation.
          type: boolean
        ignoreHttpErrorsInApdexCalculation:
          description: Exclude (`true`) or include (`false`) HTTP errors listed in
            **httpErrorRules** in Apdex calculation.
          type: boolean
        ignoreCustomErrorsInApdexCalculation:
          description: Exclude (`true`) or include (`false`) custom errors listed
            in **customErrorRules** in Apdex calculation.
          type: boolean
        httpErrorRules:
          description: |-
            An ordered list of HTTP errors.

             Rules are evaluated from top to bottom; the first matching rule applies.
          items:
            $ref: '#/components/schemas/HttpErrorRule'
          type: array
        customErrorRules:
          description: |-
            An ordered list of custom errors.

             Rules are evaluated from top to bottom; the first matching rule applies.
          items:
            $ref: '#/components/schemas/CustomErrorRule'
          type: array
      required:
      - customErrorRules
      - httpErrorRules
      - ignoreCustomErrorsInApdexCalculation
      - ignoreHttpErrorsInApdexCalculation
      - ignoreJavaScriptErrorsInApdexCalculation
      type: object
    CustomErrorRule:
      description: Configuration of the custom error in the web application.
      example:
        keyPattern: keyPattern
        customAlerting: true
        keyMatcher: BEGINS_WITH
        capture: true
        impactApdex: true
        valuePattern: valuePattern
        valueMatcher: BEGINS_WITH
      properties:
        keyPattern:
          description: The key of the error to look for.
          minLength: 1
          type: string
        keyMatcher:
          description: The matching operation for the **keyPattern**.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          type: string
        valuePattern:
          description: The value of the error to look for.
          type: string
        valueMatcher:
          description: The matching operation for the **valuePattern**.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          type: string
        capture:
          description: Capture (`true`) or ignore (`false`) the error.
          type: boolean
        impactApdex:
          description: Include (`true`) or exclude (`false`) the error in Apdex calculation.
          type: boolean
        customAlerting:
          description: Include (`true`) or exclude (`false`) the error in Davis AI
            [problem detection and analysis](https://www.dynatrace.com/support/help/shortlink/problems-hub).
          type: boolean
      required:
      - capture
      - customAlerting
      - impactApdex
      - keyMatcher
      - keyPattern
      type: object
    HttpErrorRule:
      description: Configuration of the HTTP error in the web application.
      example:
        filter: BEGINS_WITH
        considerForAi: true
        considerUnknownErrorCode: true
        errorCodes: "400"
        capture: true
        impactApdex: true
        filterByUrl: true
        url: url
      properties:
        considerUnknownErrorCode:
          description: If `true`, match by errors that have unknown HTTP status code.
          type: boolean
        errorCodes:
          description: "The HTTP status code or status code range to match by. \n\n\
            This field is required if **considerUnknownErrorCode** is set to `false`."
          example: "400"
          type: string
        filterByUrl:
          description: If `true`, filter errors by URL.
          type: boolean
        filter:
          description: The matching rule for the URL.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          type: string
        url:
          description: The URL to look for.
          type: string
        capture:
          description: Capture (`true`) or ignore (`false`) the error.
          type: boolean
        impactApdex:
          description: Include (`true`) or exclude (`false`) the error in Apdex calculation.
          type: boolean
        considerForAi:
          description: Include (`true`) or exclude (`false`) the error in Davis AI
            [problem detection and analysis](https://www.dynatrace.com/support/help/shortlink/problems-hub).
          type: boolean
      required:
      - capture
      - considerForAi
      - considerUnknownErrorCode
      - filterByUrl
      - impactApdex
      type: object
    KeyUserAction:
      description: Configuration of the key user action.
      example:
        name: Loading of page /example
        actionType: Load
        domain: test.com
      properties:
        name:
          description: The name of the action.
          minLength: 1
          type: string
        actionType:
          description: The type of the action.
          enum:
          - Custom
          - Load
          - Xhr
          type: string
        domain:
          description: The domain where the action is performed.
          type: string
        meIdentifier:
          description: The Dynatrace entity ID of the action.
          readOnly: true
          type: string
      required:
      - actionType
      - name
      type: object
    KeyUserActionList:
      description: The list of key user actions in the web application
      example:
        keyUserActionList:
        - name: Loading of page /example
          actionType: Load
          domain: test.com
          meIdentifier: APPLICATION_METHOD-1234
      properties:
        keyUserActionList:
          items:
            $ref: '#/components/schemas/KeyUserAction'
          type: array
      type: object
    ApplicationDetectionRuleConfig:
      description: Application detection rule.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        id: 12345678-abcd-1234-abcd-1234567890ab
        applicationIdentifier: APPLICATION-123456
        filterConfig:
          pattern: myapp.example.com
          applicationMatchType: EQUALS
          applicationMatchTarget: DOMAIN
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadataDtoImpl'
        id:
          description: The ID of the rule.
          example: 12345678-abcd-1234-abcd-1234567890ab
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\nThe rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        applicationIdentifier:
          description: "The Dynatrace entity ID of the application, for example `APPLICATION-4A3B43`.\
            \ \n\n You must use an existing ID. If you need to create a rule for an\
            \ application that doesn't exist yet, [create an application first](https://www.dynatrace.com/support/help/shortlink/api-config-web-app-post-web-app)\
            \ and then configure detection rules for it."
          example: APPLICATION-123456
          type: string
        filterConfig:
          $ref: '#/components/schemas/ApplicationFilter'
        name:
          description: The unique name of the Application detection rule.
          type: string
      required:
      - applicationIdentifier
      - filterConfig
      type: object
    ApplicationFilter:
      description: The condition of an application detection rule.
      properties:
        pattern:
          description: The value to look for.
          example: myapp.example.com
          maxLength: 200
          minLength: 1
          type: string
        applicationMatchType:
          description: The operator of the matching.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - MATCHES
          example: EQUALS
          type: string
        applicationMatchTarget:
          description: Where to look for the the **pattern** value.
          enum:
          - DOMAIN
          - URL
          example: DOMAIN
          type: string
      required:
      - applicationMatchTarget
      - applicationMatchType
      - pattern
      type: object
    ConfigurationMetadataDtoImpl:
      description: Metadata useful for debugging.
      properties:
        currentConfigurationVersions:
          description: A Sorted list of string version numbers of the configuration.
          example:
          - 1.0.4
          - "1.23"
          items:
            type: string
          type: array
        configurationVersions:
          description: A Sorted list of the version numbers of the configuration.
          example:
          - 4
          - 2
          items:
            format: int64
            type: integer
          type: array
        clusterVersion:
          description: Dynatrace server version.
          example: 1.192.1
          type: string
      readOnly: true
      type: object
    ApplicationDetectionRulesHostDetectionSettings:
      description: Configuration of host detection headers.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        hostDetectionHeaders:
        - X-Host
        - X-Forwarded-Host
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        hostDetectionHeaders:
          description: "An ordered list of host detection headers. \n\nHeaders are\
            \ evaluated from top to bottom; the first matching header applies."
          items:
            type: string
          type: array
      required:
      - hostDetectionHeaders
      type: object
    ApplicationTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/ApplicationTypeComparison_allOf'
      description: Comparison for `APPLICATION_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    AutoTag:
      description: Configuration of an auto-tag. It defines the conditions of tag
        usage and the tag value.
      example:
        name: sampleAutoTag
        rules:
        - type: SERVICE
          enabled: true
          valueFormat: myTagValue {Service:DetectedName}
          propagationTypes:
          - SERVICE_TO_HOST_LIKE
          conditions:
          - key:
              attribute: SERVICE_DATABASE_NAME
            comparisonInfo:
              type: STRING
              operator: BEGINS_WITH
              value: sample
              negate: false
              caseSensitive: false
          - key:
              attribute: SERVICE_WEB_SERVER_NAME
            comparisonInfo:
              type: STRING
              operator: EXISTS
              negate: false
          - key:
              attribute: PROCESS_GROUP_CUSTOM_METADATA
              type: PROCESS_CUSTOM_METADATA_KEY
              dynamicKey:
                source: KUBERNETES
                key: kubernetes.io/limit-ranger
            comparisonInfo:
              type: STRING
              operator: BEGINS_WITH
              value: sample
              negate: false
              caseSensitive: false
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the auto-tag.
          example: 12345678-abcd-1234-abcd-1234567890ab
          format: uuid
          type: string
        name:
          description: "The name of the auto-tag, which is applied to entities. \n\
            \nAdditionally you can specify a **valueFormat** in the tag rule. In that\
            \ case the tag is used in the `name:valueFormat` format. \n\nFor example\
            \ you can extend the `Infrastructure` tag to `Infrastructure:Windows`\
            \ and `Infrastructure:Linux`."
          minLength: 1
          type: string
        rules:
          description: "The list of rules for tag usage. \n\nWhen there are multiple\
            \ rules, the OR logic applies."
          items:
            $ref: '#/components/schemas/AutoTagRule'
          type: array
      required:
      - name
      type: object
    AutoTagRule:
      description: "A rule for the auto-tag. \n\n Defines the conditions of tag usage."
      properties:
        type:
          description: Type of entities to which the rule applies.
          enum:
          - APPLICATION
          - AWS_APPLICATION_LOAD_BALANCER
          - AWS_CLASSIC_LOAD_BALANCER
          - AWS_NETWORK_LOAD_BALANCER
          - AWS_RELATIONAL_DATABASE_SERVICE
          - AZURE
          - CUSTOM_APPLICATION
          - CUSTOM_DEVICE
          - DCRUM_APPLICATION
          - ESXI_HOST
          - EXTERNAL_SYNTHETIC_TEST
          - HOST
          - HTTP_CHECK
          - MOBILE_APPLICATION
          - PROCESS_GROUP
          - SERVICE
          - SYNTHETIC_TEST
          type: string
        enabled:
          description: Tag rule is enabled (`true`) or disabled (`false`).
          type: boolean
        valueFormat:
          description: "The value of the auto-tag. If specified, the tag is used in\
            \ the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure`\
            \ tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\nYou\
            \ can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}`\
            \ \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}`\
            \ \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}`\
            \ \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}`\
            \ \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}`\
            \ \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}`\
            \ \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}`\
            \ \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}`\
            \ \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}`\
            \ \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{DockerContainerGroupInstance:StrippedImageName}`\
            \ \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}`\
            \ \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}`\
            \ \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}`\
            \ \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n\
            * `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}`\
            \ \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}`\
            \ \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}`\
            \ \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}`\
            \ \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}`\
            \ \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}`\
            \ \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}`\
            \ \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}`\
            \ \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}`\
            \ \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}`\
            \ \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n*\
            \ `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}`\
            \ \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n\
            * `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}`\
            \ \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n\
            * `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:UnstanceType}`\
            \ \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}`\
            \ \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}`\
            \ \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}`\
            \ \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}`\
            \ \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}`\
            \ \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}`\
            \ \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}`\
            \ \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}`\
            \ \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}`\
            \ \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}`\
            \ \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}`\
            \ \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}`\
            \ \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}`\
            \ \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}`\
            \ \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}`\
            \ \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}`\
            \ \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}`\
            \ \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}`\
            \ \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}`\
            \ \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}`\
            \ \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}`\
            \ \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}`\
            \ \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n\
            * `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}`\
            \ \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}`\
            \ \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}`\
            \ \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n\
            * `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}`\
            \ \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n\
            * `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}`\
            \ \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}`\
            \ \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}`\
            \ \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}`\
            \ \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}`\
            \ \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n\
            * `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n*\
            \ `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}`\
            \ \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}`\
            \ \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}`\
            \ \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}`\
            \ \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}`\
            \ \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}`\
            \ \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}`\
            \ \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}`\
            \ \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}`\
            \ \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}`\
            \ \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}`\
            \ \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}`\
            \ \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}`\
            \ \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}`\
            \ \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n\
            * `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}`\
            \ \n"
          type: string
        propagationTypes:
          description: "How to apply the tag to underlying entities: \n\n* `SERVICE_TO_PROCESS_GROUP_LIKE`:\
            \ Apply to underlying process groups of matching services. \n* `SERVICE_TO_HOST_LIKE`:\
            \ Apply to underlying hosts of matching services. \n* `PROCESS_GROUP_TO_HOST`:\
            \ Apply to underlying hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`:\
            \ Apply to all services provided by the process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`:\
            \ Apply to processes running on matching hosts. \n*  `AZURE_TO_PG`: Apply\
            \ to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`:\
            \ Apply to services provided by matching Azure entities."
          items:
            enum:
            - AZURE_TO_PG
            - AZURE_TO_SERVICE
            - HOST_TO_PROCESS_GROUP_INSTANCE
            - PROCESS_GROUP_TO_HOST
            - PROCESS_GROUP_TO_SERVICE
            - SERVICE_TO_HOST_LIKE
            - SERVICE_TO_PROCESS_GROUP_LIKE
            type: string
          type: array
        conditions:
          description: "A list of matching rules for the auto-tag. \n\nThe tag applies\
            \ only when **all** conditions are fulfilled."
          items:
            $ref: '#/components/schemas/EntityRuleEngineCondition'
          maxItems: 30
          minItems: 1
          type: array
      required:
      - conditions
      - enabled
      - type
      type: object
    AzureComputeModeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/AzureComputeModeComparison_allOf'
      description: Comparison for `AZURE_COMPUTE_MODE` attributes.
      required:
      - negate
      - operator
      type: object
    AzureSkuComparision:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/AzureSkuComparision_allOf'
      description: Comparison for `AZURE_SKU` attributes.
      required:
      - negate
      - operator
      type: object
    BitnessComparision:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/BitnessComparision_allOf'
      description: Comparison for `BITNESS` attributes.
      required:
      - negate
      - operator
      type: object
    CloudTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/CloudTypeComparison_allOf'
      description: Comparison for `CLOUD_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    ComparisonBasic:
      description: "Defines how the matching is actually performed: what and how are\
        \ we comparing. \n\nThe actual set of fields and possible values of the **operator**\
        \ field depend on the **type** of the comparison. \\n\\nFind the list of actual\
        \ models in the description of the **type** field and check the description\
        \ of the model you need."
      discriminator:
        propertyName: type
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actuala models in the description of\
            \ the **type** field and check the description of the model you need."
          type: string
        value:
          description: The value to compare to.
          type: object
        negate:
          description: Reverses the comparison **operator**. For example it turns
            the **begins with** into **does not begin with**.
          type: boolean
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or insensitive (`false`).
          type: boolean
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `STRING` -> StringComparison \n\
            * `INDEXED_NAME` -> IndexedNameComparison \n* `INDEXED_STRING` -> IndexedStringComparison\
            \ \n* `INTEGER` -> IntegerComparison \n* `SERVICE_TYPE` -> ServiceTypeComparison\
            \ \n* `PAAS_TYPE` -> PaasTypeComparison \n* `CLOUD_TYPE` -> CloudTypeComparison\
            \ \n* `AZURE_SKU` -> AzureSkuComparision \n* `AZURE_COMPUTE_MODE` -> AzureComputeModeComparison\
            \ \n* `ENTITY_ID` -> EntityIdComparison \n* `SIMPLE_TECH` -> SimpleTechComparison\
            \ \n* `SIMPLE_HOST_TECH` -> SimpleHostTechComparison \n* `SERVICE_TOPOLOGY`\
            \ -> ServiceTopologyComparison \n* `DATABASE_TOPOLOGY` -> DatabaseTopologyComparison\
            \ \n* `OS_TYPE` -> OsTypeComparison \n* `HYPERVISOR_TYPE` -> HypervisorTypeComparision\
            \ \n* `IP_ADDRESS` -> IpAddressComparison \n* `OS_ARCHITECTURE` -> OsArchitectureComparison\
            \ \n* `BITNESS` -> BitnessComparision \n* `APPLICATION_TYPE` -> ApplicationTypeComparison\
            \ \n* `MOBILE_PLATFORM` -> MobilePlatformComparison \n* `CUSTOM_APPLICATION_TYPE`\
            \ -> CustomApplicationTypeComparison \n* `DCRUM_DECODER_TYPE` -> DcrumDecoderComparison\
            \ \n* `SYNTHETIC_ENGINE_TYPE` -> SyntheticEngineTypeComparison \n* `TAG`\
            \ -> TagComparison \n* `INDEXED_TAG` -> IndexedTagComparison \n"
          enum:
          - APPLICATION_TYPE
          - AZURE_COMPUTE_MODE
          - AZURE_SKU
          - BITNESS
          - CLOUD_TYPE
          - CUSTOM_APPLICATION_TYPE
          - DATABASE_TOPOLOGY
          - DCRUM_DECODER_TYPE
          - ENTITY_ID
          - HYPERVISOR_TYPE
          - INDEXED_NAME
          - INDEXED_STRING
          - INDEXED_TAG
          - INTEGER
          - IP_ADDRESS
          - MOBILE_PLATFORM
          - OS_ARCHITECTURE
          - OS_TYPE
          - PAAS_TYPE
          - SERVICE_TOPOLOGY
          - SERVICE_TYPE
          - SIMPLE_HOST_TECH
          - SIMPLE_TECH
          - STRING
          - SYNTHETIC_ENGINE_TYPE
          - TAG
          type: string
      required:
      - negate
      - operator
      - type
      type: object
    ConditionKey:
      description: "The key to identify the data we're matching. \n\nThe actual set\
        \ of fields and possible values vary, depending on the **type** of the key.\
        \ \n\nFind the list of actual objects in the description of the **type** field."
      discriminator:
        propertyName: type
      properties:
        attribute:
          description: The attribute to be used for comparision.
          enum:
          - APPMON_SERVER_NAME
          - APPMON_SYSTEM_PROFILE_NAME
          - AWS_ACCOUNT_ID
          - AWS_ACCOUNT_NAME
          - AWS_APPLICATION_LOAD_BALANCER_NAME
          - AWS_APPLICATION_LOAD_BALANCER_TAGS
          - AWS_AUTO_SCALING_GROUP_NAME
          - AWS_AUTO_SCALING_GROUP_TAGS
          - AWS_AVAILABILITY_ZONE_NAME
          - AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS
          - AWS_CLASSIC_LOAD_BALANCER_NAME
          - AWS_CLASSIC_LOAD_BALANCER_TAGS
          - AWS_NETWORK_LOAD_BALANCER_NAME
          - AWS_NETWORK_LOAD_BALANCER_TAGS
          - AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME
          - AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT
          - AWS_RELATIONAL_DATABASE_SERVICE_ENGINE
          - AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS
          - AWS_RELATIONAL_DATABASE_SERVICE_NAME
          - AWS_RELATIONAL_DATABASE_SERVICE_PORT
          - AWS_RELATIONAL_DATABASE_SERVICE_TAGS
          - AZURE_ENTITY_NAME
          - AZURE_ENTITY_TAGS
          - AZURE_MGMT_GROUP_NAME
          - AZURE_MGMT_GROUP_UUID
          - AZURE_REGION_NAME
          - AZURE_SCALE_SET_NAME
          - AZURE_SUBSCRIPTION_NAME
          - AZURE_SUBSCRIPTION_UUID
          - AZURE_TENANT_NAME
          - AZURE_TENANT_UUID
          - AZURE_VM_NAME
          - BROWSER_MONITOR_NAME
          - BROWSER_MONITOR_TAGS
          - CLOUD_APPLICATION_LABELS
          - CLOUD_APPLICATION_NAME
          - CLOUD_APPLICATION_NAMESPACE_LABELS
          - CLOUD_APPLICATION_NAMESPACE_NAME
          - CLOUD_FOUNDRY_FOUNDATION_NAME
          - CLOUD_FOUNDRY_ORG_NAME
          - CUSTOM_APPLICATION_NAME
          - CUSTOM_APPLICATION_PLATFORM
          - CUSTOM_APPLICATION_TAGS
          - CUSTOM_APPLICATION_TYPE
          - CUSTOM_DEVICE_DETECTED_NAME
          - CUSTOM_DEVICE_DNS_ADDRESS
          - CUSTOM_DEVICE_GROUP_NAME
          - CUSTOM_DEVICE_GROUP_TAGS
          - CUSTOM_DEVICE_IP_ADDRESS
          - CUSTOM_DEVICE_METADATA
          - CUSTOM_DEVICE_NAME
          - CUSTOM_DEVICE_PORT
          - CUSTOM_DEVICE_TAGS
          - CUSTOM_DEVICE_TECHNOLOGY
          - DATA_CENTER_SERVICE_DECODER_TYPE
          - DATA_CENTER_SERVICE_IP_ADDRESS
          - DATA_CENTER_SERVICE_METADATA
          - DATA_CENTER_SERVICE_NAME
          - DATA_CENTER_SERVICE_PORT
          - DATA_CENTER_SERVICE_TAGS
          - DOCKER_CONTAINER_NAME
          - DOCKER_FULL_IMAGE_NAME
          - DOCKER_IMAGE_VERSION
          - DOCKER_STRIPPED_IMAGE_NAME
          - EC2_INSTANCE_AMI_ID
          - EC2_INSTANCE_AWS_INSTANCE_TYPE
          - EC2_INSTANCE_AWS_SECURITY_GROUP
          - EC2_INSTANCE_BEANSTALK_ENV_NAME
          - EC2_INSTANCE_ID
          - EC2_INSTANCE_NAME
          - EC2_INSTANCE_PRIVATE_HOST_NAME
          - EC2_INSTANCE_PUBLIC_HOST_NAME
          - EC2_INSTANCE_TAGS
          - ENTERPRISE_APPLICATION_DECODER_TYPE
          - ENTERPRISE_APPLICATION_IP_ADDRESS
          - ENTERPRISE_APPLICATION_METADATA
          - ENTERPRISE_APPLICATION_NAME
          - ENTERPRISE_APPLICATION_PORT
          - ENTERPRISE_APPLICATION_TAGS
          - ESXI_HOST_CLUSTER_NAME
          - ESXI_HOST_HARDWARE_MODEL
          - ESXI_HOST_HARDWARE_VENDOR
          - ESXI_HOST_NAME
          - ESXI_HOST_PRODUCT_NAME
          - ESXI_HOST_PRODUCT_VERSION
          - ESXI_HOST_TAGS
          - EXTERNAL_MONITOR_ENGINE_DESCRIPTION
          - EXTERNAL_MONITOR_ENGINE_NAME
          - EXTERNAL_MONITOR_ENGINE_TYPE
          - EXTERNAL_MONITOR_NAME
          - EXTERNAL_MONITOR_TAGS
          - GEOLOCATION_SITE_NAME
          - GOOGLE_CLOUD_PLATFORM_ZONE_NAME
          - GOOGLE_COMPUTE_INSTANCE_ID
          - GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE
          - GOOGLE_COMPUTE_INSTANCE_NAME
          - GOOGLE_COMPUTE_INSTANCE_PROJECT
          - GOOGLE_COMPUTE_INSTANCE_PROJECT_ID
          - GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES
          - HOST_AIX_LOGICAL_CPU_COUNT
          - HOST_AIX_SIMULTANEOUS_THREADS
          - HOST_AIX_VIRTUAL_CPU_COUNT
          - HOST_ARCHITECTURE
          - HOST_AWS_NAME_TAG
          - HOST_AZURE_COMPUTE_MODE
          - HOST_AZURE_SKU
          - HOST_AZURE_WEB_APPLICATION_HOST_NAMES
          - HOST_AZURE_WEB_APPLICATION_SITE_NAMES
          - HOST_BITNESS
          - HOST_BOSH_AVAILABILITY_ZONE
          - HOST_BOSH_DEPLOYMENT_ID
          - HOST_BOSH_INSTANCE_ID
          - HOST_BOSH_INSTANCE_NAME
          - HOST_BOSH_NAME
          - HOST_BOSH_STEMCELL_VERSION
          - HOST_CLOUD_TYPE
          - HOST_CPU_CORES
          - HOST_CUSTOM_METADATA
          - HOST_DETECTED_NAME
          - HOST_GROUP_ID
          - HOST_GROUP_NAME
          - HOST_HYPERVISOR_TYPE
          - HOST_IP_ADDRESS
          - HOST_KUBERNETES_LABELS
          - HOST_LOGICAL_CPU_CORES
          - HOST_NAME
          - HOST_ONEAGENT_CUSTOM_HOST_NAME
          - HOST_OS_TYPE
          - HOST_OS_VERSION
          - HOST_PAAS_MEMORY_LIMIT
          - HOST_PAAS_TYPE
          - HOST_TAGS
          - HOST_TECHNOLOGY
          - HTTP_MONITOR_NAME
          - HTTP_MONITOR_TAGS
          - KUBERNETES_CLUSTER_NAME
          - KUBERNETES_NODE_NAME
          - MOBILE_APPLICATION_NAME
          - MOBILE_APPLICATION_PLATFORM
          - MOBILE_APPLICATION_TAGS
          - NAME_OF_COMPUTE_NODE
          - OPENSTACK_ACCOUNT_NAME
          - OPENSTACK_ACCOUNT_PROJECT_NAME
          - OPENSTACK_AVAILABILITY_ZONE_NAME
          - OPENSTACK_PROJECT_NAME
          - OPENSTACK_REGION_NAME
          - OPENSTACK_VM_INSTANCE_TYPE
          - OPENSTACK_VM_NAME
          - OPENSTACK_VM_SECURITY_GROUP
          - PROCESS_GROUP_AZURE_HOST_NAME
          - PROCESS_GROUP_AZURE_SITE_NAME
          - PROCESS_GROUP_CUSTOM_METADATA
          - PROCESS_GROUP_DETECTED_NAME
          - PROCESS_GROUP_ID
          - PROCESS_GROUP_LISTEN_PORT
          - PROCESS_GROUP_NAME
          - PROCESS_GROUP_PREDEFINED_METADATA
          - PROCESS_GROUP_TAGS
          - PROCESS_GROUP_TECHNOLOGY
          - PROCESS_GROUP_TECHNOLOGY_EDITION
          - PROCESS_GROUP_TECHNOLOGY_VERSION
          - SERVICE_AKKA_ACTOR_SYSTEM
          - SERVICE_CTG_SERVICE_NAME
          - SERVICE_DATABASE_HOST_NAME
          - SERVICE_DATABASE_NAME
          - SERVICE_DATABASE_TOPOLOGY
          - SERVICE_DATABASE_VENDOR
          - SERVICE_DETECTED_NAME
          - SERVICE_ESB_APPLICATION_NAME
          - SERVICE_IBM_CTG_GATEWAY_URL
          - SERVICE_IIB_APPLICATION_NAME
          - SERVICE_MESSAGING_LISTENER_CLASS_NAME
          - SERVICE_NAME
          - SERVICE_PORT
          - SERVICE_PUBLIC_DOMAIN_NAME
          - SERVICE_REMOTE_ENDPOINT
          - SERVICE_REMOTE_SERVICE_NAME
          - SERVICE_TAGS
          - SERVICE_TECHNOLOGY
          - SERVICE_TECHNOLOGY_EDITION
          - SERVICE_TECHNOLOGY_VERSION
          - SERVICE_TOPOLOGY
          - SERVICE_TYPE
          - SERVICE_WEB_APPLICATION_ID
          - SERVICE_WEB_CONTEXT_ROOT
          - SERVICE_WEB_SERVER_ENDPOINT
          - SERVICE_WEB_SERVER_NAME
          - SERVICE_WEB_SERVICE_NAME
          - SERVICE_WEB_SERVICE_NAMESPACE
          - VMWARE_DATACENTER_NAME
          - VMWARE_VM_NAME
          - WEB_APPLICATION_NAME
          - WEB_APPLICATION_NAME_PATTERN
          - WEB_APPLICATION_TAGS
          - WEB_APPLICATION_TYPE
          type: string
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PROCESS_CUSTOM_METADATA_KEY` ->\
            \ CustomProcessMetadataConditionKey \n* `HOST_CUSTOM_METADATA_KEY` ->\
            \ CustomHostMetadataConditionKey \n* `PROCESS_PREDEFINED_METADATA_KEY`\
            \ -> ProcessMetadataConditionKey \n* `STRING` -> StringConditionKey \n"
          enum:
          - HOST_CUSTOM_METADATA_KEY
          - PROCESS_CUSTOM_METADATA_KEY
          - PROCESS_PREDEFINED_METADATA_KEY
          - STRING
          type: string
        dynamicKey:
          description: Dynamic key generated based on selected type/attribute.
          type: object
      required:
      - attribute
      type: object
    CustomApplicationTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/CustomApplicationTypeComparison_allOf'
      description: Comparison for `CUSTOM_APPLICATION_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    CustomHostMetadataConditionKey:
      allOf:
      - $ref: '#/components/schemas/ConditionKey'
      - $ref: '#/components/schemas/CustomHostMetadataConditionKey_allOf'
      description: The key for dynamic attributes of the `HOST_CUSTOM_METADATA_KEY`
        type.
      required:
      - attribute
      - dynamicKey
      type: object
    CustomHostMetadataKey:
      description: "The key of the attribute, which need dynamic keys. \n\nNot applicable\
        \ otherwise, as the attibute itself acts as a key."
      properties:
        source:
          description: The source of the custom metadata.
          enum:
          - ENVIRONMENT
          - GOOGLE_COMPUTE_ENGINE
          - PLUGIN
          type: string
        key:
          description: The actual key of the custom metadata.
          maxLength: 256
          minLength: 1
          type: string
      required:
      - key
      - source
      type: object
    CustomProcessMetadataConditionKey:
      allOf:
      - $ref: '#/components/schemas/ConditionKey'
      - $ref: '#/components/schemas/CustomProcessMetadataConditionKey_allOf'
      description: The key for dynamic attributes of the `PROCESS_CUSTOM_METADATA_KEY`
        type.
      required:
      - attribute
      - dynamicKey
      type: object
    CustomProcessMetadataKey:
      description: "The key of the attribute, which need dynamic keys. \n\nNot applicable\
        \ otherwise, as the attibute itself acts as a key."
      properties:
        source:
          description: The source of the custom metadata.
          enum:
          - CLOUD_FOUNDRY
          - ENVIRONMENT
          - GOOGLE_CLOUD
          - KUBERNETES
          - PLUGIN
          type: string
        key:
          description: The actual key of the custom metadata.
          maxLength: 256
          minLength: 1
          type: string
      required:
      - key
      - source
      type: object
    DatabaseTopologyComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/DatabaseTopologyComparison_allOf'
      description: Comparison for `DATABASE_TOPOLOGY` attributes.
      required:
      - negate
      - operator
      type: object
    DcrumDecoderComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/DcrumDecoderComparison_allOf'
      description: Comparison for `DCRUM_DECODER_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    EntityIdComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/EntityIdComparison_allOf'
      description: Comparison for `ENTITY_ID` attributes.
      required:
      - negate
      - operator
      type: object
    EntityRuleEngineCondition:
      description: A condition defines how to execute matching logic for an entity.
      properties:
        key:
          $ref: '#/components/schemas/ConditionKey'
        comparisonInfo:
          $ref: '#/components/schemas/ComparisonBasic'
      required:
      - comparisonInfo
      - key
      type: object
    HypervisorTypeComparision:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/HypervisorTypeComparision_allOf'
      description: Comparison for `HYPERVISOR_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    IndexedNameComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/IndexedNameComparison_allOf'
      description: Comparison for `INDEXED_NAME` attributes.
      required:
      - negate
      - operator
      type: object
    IndexedStringComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/IndexedStringComparison_allOf'
      description: Comparison for `INDEXED_STRING` attributes.
      required:
      - negate
      - operator
      type: object
    IndexedTagComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/IndexedTagComparison_allOf'
      description: Comparison for `INDEXED_TAG` attributes.
      required:
      - negate
      - operator
      type: object
    IntegerComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/IntegerComparison_allOf'
      description: Comparison for `INTEGER` attributes.
      required:
      - negate
      - operator
      type: object
    IpAddressComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/IpAddressComparison_allOf'
      description: Comparison for `IP_ADDRESS` attributes.
      required:
      - negate
      - operator
      type: object
    MobilePlatformComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/MobilePlatformComparison_allOf'
      description: Comparison for `MOBILE_PLATFORM` attributes.
      required:
      - negate
      - operator
      type: object
    OsArchitectureComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/OsArchitectureComparison_allOf'
      description: Comparison for `OS_ARCHITECTURE` attributes.
      required:
      - negate
      - operator
      type: object
    OsTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/OsTypeComparison_allOf'
      description: Comparison for `OS_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    PaasTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/PaasTypeComparison_allOf'
      description: Comparison for `PAAS_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    ProcessMetadataConditionKey:
      allOf:
      - $ref: '#/components/schemas/ConditionKey'
      - $ref: '#/components/schemas/ProcessMetadataConditionKey_allOf'
      description: The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY`
        type.
      required:
      - attribute
      - dynamicKey
      type: object
    ServiceTopologyComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/ServiceTopologyComparison_allOf'
      description: Comparison for `SERVICE_TOPOLOGY` attributes.
      required:
      - negate
      - operator
      type: object
    ServiceTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/ServiceTypeComparison_allOf'
      description: Comparison for `SERVICE_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    SimpleHostTech:
      description: The value to compare to.
      properties:
        type:
          description: Predefined technology, if technology is not predefined, then
            the verbatim type must be set
          enum:
          - APPARMOR
          - BOSH
          - BOSHBPM
          - CLOUDFOUNDRY
          - CONTAINERD
          - CRIO
          - DIEGO_CELL
          - DOCKER
          - GARDEN
          - GRSECURITY
          - KUBERNETES
          - OPENSHIFT
          - OPENSTACK_COMPUTE
          - OPENSTACK_CONTROLLER
          - SELINUX
          type: string
        verbatimType:
          description: Non-predefined technology, use for custom technologies.
          maxLength: 128
          minLength: 0
          type: string
      type: object
    SimpleHostTechComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/SimpleHostTechComparison_allOf'
      description: Comparison for `SIMPLE_HOST_TECH` attributes.
      required:
      - negate
      - operator
      type: object
    SimpleTech:
      description: The value to compare to.
      properties:
        type:
          description: Predefined technology, if technology is not predefined, then
            the verbatim type must be set
          enum:
          - ACTIVE_MQ
          - ACTIVE_MQ_ARTEMIS
          - ADO_NET
          - AIX
          - AKKA
          - AMAZON_REDSHIFT
          - AMQP
          - APACHE_CAMEL
          - APACHE_CASSANDRA
          - APACHE_COUCH_DB
          - APACHE_DERBY
          - APACHE_HTTP_CLIENT_ASYNC
          - APACHE_HTTP_CLIENT_SYNC
          - APACHE_HTTP_SERVER
          - APACHE_KAFKA
          - APACHE_SOLR
          - APACHE_STORM
          - APACHE_SYNAPSE
          - APACHE_TOMCAT
          - APPARMOR
          - APPLICATION_INSIGHTS_SDK
          - ASP_DOTNET
          - ASP_DOTNET_CORE
          - ASP_DOTNET_CORE_SIGNALR
          - ASP_DOTNET_SIGNALR
          - ASYNC_HTTP_CLIENT
          - AWS_LAMBDA
          - AWS_RDS
          - AWS_SERVICE
          - AXIS
          - AZURE_FUNCTIONS
          - AZURE_SERVICE_BUS
          - AZURE_SERVICE_FABRIC
          - AZURE_STORAGE
          - BOSHBPM
          - CITRIX
          - CITRIX_COMMON
          - CITRIX_DESKTOP_DELIVERY_CONTROLLERS
          - CITRIX_DIRECTOR
          - CITRIX_LICENSE_SERVER
          - CITRIX_PROVISIONING_SERVICES
          - CITRIX_STOREFRONT
          - CITRIX_VIRTUAL_DELIVERY_AGENT
          - CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT
          - CLOUDFOUNDRY
          - CLOUDFOUNDRY_AUCTIONEER
          - CLOUDFOUNDRY_BOSH
          - CLOUDFOUNDRY_GOROUTER
          - COLDFUSION
          - CONTAINERD
          - CORE_DNS
          - COUCHBASE
          - CRIO
          - CXF
          - DATASTAX
          - DB2
          - DIEGO_CELL
          - DOCKER
          - DOTNET
          - DOTNET_REMOTING
          - ELASTIC_SEARCH
          - ENVOY
          - ERLANG
          - ETCD
          - F5_LTM
          - FSHARP
          - GARDEN
          - GLASSFISH
          - GO
          - GRAAL_TRUFFLE
          - GRPC
          - GRSECURITY
          - HADOOP
          - HADOOP_HDFS
          - HADOOP_YARN
          - HAPROXY
          - HEAT
          - HESSIAN
          - HORNET_Q
          - IBM_CICS_REGION
          - IBM_CICS_TRANSACTION_GATEWAY
          - IBM_IMS_CONNECT_REGION
          - IBM_IMS_CONTROL_REGION
          - IBM_IMS_MESSAGE_PROCESSING_REGION
          - IBM_IMS_SOAP_GATEWAY
          - IBM_INTEGRATION_BUS
          - IBM_MQ
          - IBM_MQ_CLIENT
          - IBM_WEBSHPRERE_APPLICATION_SERVER
          - IBM_WEBSHPRERE_LIBERTY
          - IIS
          - IIS_APP_POOL
          - ISTIO
          - JAVA
          - JAX_WS
          - JBOSS
          - JBOSS_EAP
          - JDK_HTTP_SERVER
          - JERSEY
          - JETTY
          - JRUBY
          - JYTHON
          - KUBERNETES
          - LIBVIRT
          - LINKERD
          - MARIADB
          - MEMCACHED
          - MICROSOFT_SQL_SERVER
          - MONGODB
          - MSSQL_CLIENT
          - MULE_ESB
          - MYSQL
          - MYSQL_CONNECTOR
          - NETFLIX_SERVO
          - NETTY
          - NGINX
          - NODE_JS
          - OK_HTTP_CLIENT
          - ONEAGENT_SDK
          - OPENCENSUS
          - OPENSHIFT
          - OPENSTACK_COMPUTE
          - OPENSTACK_CONTROLLER
          - OPENTELEMETRY
          - OPENTRACING
          - OPEN_LIBERTY
          - ORACLE_DATABASE
          - ORACLE_WEBLOGIC
          - OWIN
          - PERL
          - PHP
          - PHP_FPM
          - PLAY
          - POSTGRE_SQL
          - POSTGRE_SQL_DOTNET_DATA_PROVIDER
          - POWER_DNS
          - PROGRESS
          - PYTHON
          - RABBIT_MQ
          - REACTOR_CORE
          - REDIS
          - RESTEASY
          - RESTLET
          - RIAK
          - RUBY
          - SAG_WEBMETHODS_IS
          - SAP
          - SAP_HANADB
          - SAP_HYBRIS
          - SAP_MAXDB
          - SAP_SYBASE
          - SCALA
          - SELINUX
          - SHAREPOINT
          - SPARK
          - SPRING
          - SQLITE
          - THRIFT
          - TIBCO
          - TIBCO_BUSINESS_WORKS
          - TIBCO_EMS
          - UNDERTOW_IO
          - VARNISH_CACHE
          - VIM2
          - VIRTUAL_MACHINE_KVM
          - VIRTUAL_MACHINE_QEMU
          - WILDFLY
          - WINDOWS_CONTAINERS
          - WINK
          - ZERO_MQ
          type: string
        verbatimType:
          description: Non-predefined technology, use for custom technologies.
          maxLength: 128
          minLength: 0
          type: string
      type: object
    SimpleTechComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/SimpleTechComparison_allOf'
      description: Comparison for `SIMPLE_TECH` attributes.
      required:
      - negate
      - operator
      type: object
    StringComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/StringComparison_allOf'
      description: Comparison for `STRING` attributes.
      required:
      - negate
      - operator
      type: object
    StringConditionKey:
      allOf:
      - $ref: '#/components/schemas/ConditionKey'
      - $ref: '#/components/schemas/StringConditionKey_allOf'
      description: The key for dynamic attributes of the `STRING` type.
      required:
      - attribute
      - dynamicKey
      type: object
    SyntheticEngineTypeComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/SyntheticEngineTypeComparison_allOf'
      description: Comparison for `SYNTHETIC_ENGINE_TYPE` attributes.
      required:
      - negate
      - operator
      type: object
    TagComparison:
      allOf:
      - $ref: '#/components/schemas/ComparisonBasic'
      - $ref: '#/components/schemas/TagComparison_allOf'
      description: Comparison for `TAG` attributes.
      required:
      - negate
      - operator
      type: object
    TagInfo:
      description: Tag of a Dynatrace entity.
      properties:
        context:
          description: "The origin of the tag, such as AWS or Cloud Foundry. \n\n\
            \ Custom tags use the `CONTEXTLESS` value."
          enum:
          - AWS
          - AWS_GENERIC
          - AZURE
          - CLOUD_FOUNDRY
          - CONTEXTLESS
          - ENVIRONMENT
          - GOOGLE_CLOUD
          - KUBERNETES
          type: string
        key:
          description: "The key of the tag. \n\n Custom tags have the tag value here."
          maxLength: 2000
          minLength: 1
          type: string
        value:
          description: "The value of the tag. \n\n Not applicable to custom tags."
          maxLength: 2000
          minLength: 0
          type: string
      required:
      - context
      - key
      type: object
    EnvironmentAutoUpdateConfig:
      description: "Environment-wide configuration of OneAgents auto-updates. \n\n\
        Applies to all OneAgents connecting to the environment if their **setting**\
        \ parameter is set to `INHERITED`. Otherwise, the host group or host level\
        \ setting applies."
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        version: 1.181.0
        setting: DISABLED
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        setting:
          description: "The auto-update state of OneAgents connecting to the environment:\
            \ \n\n* `ENABLED`: OneAgents automatically update to the most recent version.\
            \ \n* `DISABLED`: OneAgents update to the version specified in the **version**\
            \ field.\n\nOneAgents that connect to the environment use this configuration\
            \ only when their **setting** parameter is set to `INHERITED`."
          enum:
          - ENABLED
          - DISABLED
          example: DISABLED
          type: string
        version:
          description: "The version to which the OneAgent must be updated. \n\nSpecify\
            \ the version in the `<major>.<minor>.<revision>` format (for example\
            \ `1.181.0`). You can fetch the list of available versions with the [GET\
            \ available versions](https://www.dynatrace.com/support/help/shortlink/api-deployment-get-versions)\
            \ call. If no suitable installer is found for the provided version or\
            \ the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable\
            \ when the **setting** parameter is set to `DISABLED`."
          example: 1.181.0
          type: string
      required:
      - setting
      type: object
    AllowedBeaconOrigins:
      description: Configuration of the allowed beacon origins for CORS requests.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        allowedBeaconOrigins:
        - domainNameMatcher: EQUALS
          domainNamePattern: dynatrace.com
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        allowedBeaconOrigins:
          description: A list of allowed beacon origins for CORS requests.
          items:
            $ref: '#/components/schemas/BeaconDomainPattern'
          type: array
        rejectBeaconsWithoutOriginHeader:
          description: "Discard (`true`) or keep (`false`) beacons without the **Origin**\
            \ HTTP header on the BeaconForwarder. \n\nIf not set, `false` is used."
          type: boolean
      type: object
    BeaconDomainPattern:
      description: Allowed beacon origin for CORS requests.
      properties:
        domainNameMatcher:
          description: The matching operation for the **domainNamePattern**.
          enum:
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        domainNamePattern:
          description: The pattern of the allowed domain name.
          type: string
      required:
      - domainNameMatcher
      - domainNamePattern
      type: object
    ConditionalNamingRule:
      description: The rule for the conditional naming.
      example:
        id: 4e88530c-edec-4e31-9cb4-3f2c63abc2b7
        order: '!rm'
        type: PROCESS_GROUP
        nameFormat: TestNameFormat
        displayName: TestRule
        enabled: true
        rules:
        - key:
            attribute: PROCESS_GROUP_TECHNOLOGY
          comparisonInfo:
            type: SIMPLE_TECH
            operator: EQUALS
            value:
              type: JAVA
            negate: "false"
        - key:
            attribute: PROCESS_GROUP_PREDEFINED_METADATA
            dynamicKey: EXE_NAME
            type: PROCESS_PREDEFINED_METADATA_KEY
          comparisonInfo:
            type: STRING
            operator: CONTAINS
            value: test
            negate: "false"
            caseSensitive: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the naming rule.
          example: 12345678-abcd-1234-abcd-1234567890ab
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\nThe rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        type:
          description: The type of Dynatrace entities to which the rule applies.
          enum:
          - HOST
          - PROCESS_GROUP
          - SERVICE
          example: PROCESS_GROUP
          type: string
        nameFormat:
          description: "The name to be assigned to matching entities. You can use\
            \ the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}`\
            \ \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}`\
            \ \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}`\
            \ \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}`\
            \ \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}`\
            \ \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}`\
            \ \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}`\
            \ \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}`\
            \ \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}`\
            \ \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{DockerContainerGroupInstance:StrippedImageName}`\
            \ \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}`\
            \ \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}`\
            \ \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}`\
            \ \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n\
            * `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}`\
            \ \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}`\
            \ \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}`\
            \ \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}`\
            \ \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}`\
            \ \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}`\
            \ \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}`\
            \ \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}`\
            \ \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}`\
            \ \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}`\
            \ \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n*\
            \ `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}`\
            \ \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n\
            * `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}`\
            \ \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n\
            * `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:InstanceType}`\
            \ \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}`\
            \ \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}`\
            \ \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}`\
            \ \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}`\
            \ \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}`\
            \ \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}`\
            \ \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}`\
            \ \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}`\
            \ \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}`\
            \ \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}`\
            \ \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}`\
            \ \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}`\
            \ \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}`\
            \ \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}`\
            \ \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}`\
            \ \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}`\
            \ \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}`\
            \ \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}`\
            \ \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}`\
            \ \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}`\
            \ \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}`\
            \ \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}`\
            \ \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n\
            * `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}`\
            \ \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}`\
            \ \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}`\
            \ \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n\
            * `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}`\
            \ \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n\
            * `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}`\
            \ \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}`\
            \ \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}`\
            \ \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}`\
            \ \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}`\
            \ \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n\
            * `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n*\
            \ `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}`\
            \ \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}`\
            \ \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}`\
            \ \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}`\
            \ \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}`\
            \ \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}`\
            \ \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}`\
            \ \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}`\
            \ \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}`\
            \ \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}`\
            \ \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}`\
            \ \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}`\
            \ \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}`\
            \ \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}`\
            \ \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}`\
            \ \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n\
            * `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}`\
            \ \n"
          example: Host with {Host:CpuCores} cores
          maxLength: 99
          minLength: 1
          type: string
        displayName:
          description: The name of the rule
          example: Host Naming Rule using Cores
          maxLength: 99
          minLength: 1
          type: string
        enabled:
          description: The rule is enabled (`true`) or disabled (`false`).
          type: boolean
        rules:
          description: "A list of matching conditions of the rule. \n\nThe rule applies\
            \ only if **all** conditions are fulfilled."
          items:
            $ref: '#/components/schemas/EntityRuleEngineCondition'
          maxItems: 30
          minItems: 1
          type: array
      required:
      - displayName
      - enabled
      - nameFormat
      - rules
      - type
      type: object
    ContentResources:
      description: The configuration of content resources.
      example:
        resourceTypes:
        - regularExpression: regularExpression
          secondaryResourceType: secondaryResourceType
          primaryResourceType: CSS
        - regularExpression: regularExpression
          secondaryResourceType: secondaryResourceType
          primaryResourceType: CSS
        resourceUrlCleanupRules:
        - regularExpression: regularExpression
          resourceName: resourceName
          replaceWith: replaceWith
        - regularExpression: regularExpression
          resourceName: resourceName
          replaceWith: replaceWith
        resourceProviders:
        - domainNamePatterns:
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          resourceName: resourceName
          resourceType: CDN_RESOURCES
          brandIconUrl: brandIconUrl
        - domainNamePatterns:
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          - domainNamePatterns
          resourceName: resourceName
          resourceType: CDN_RESOURCES
          brandIconUrl: brandIconUrl
      properties:
        resourceProviders:
          description: |-
            An ordered list of manually added content providers.

             Rules are evaluated from top to bottom; the first matching rules applies.
          items:
            $ref: '#/components/schemas/ResourceProvider'
          type: array
        resourceUrlCleanupRules:
          description: |-
            An ordered list of resource URL cleanup rules.

             Rules are evaluated from top to bottom; the first matching rules applies.
          items:
            $ref: '#/components/schemas/ResourceUrlCleanupRule'
          type: array
        resourceTypes:
          description: |-
            An ordered list of manually defined resource types.

             Rules are evaluated from top to bottom; the first matching rules applies.
          items:
            $ref: '#/components/schemas/ResourceType'
          type: array
      type: object
    ResourceProvider:
      description: A rule for the content provider.
      example:
        domainNamePatterns:
        - domainNamePatterns
        - domainNamePatterns
        - domainNamePatterns
        - domainNamePatterns
        - domainNamePatterns
        resourceName: resourceName
        resourceType: CDN_RESOURCES
        brandIconUrl: brandIconUrl
      properties:
        resourceName:
          description: The name of the provider.
          maxLength: 50
          minLength: 0
          type: string
        resourceType:
          description: The type of the provider.
          enum:
          - CDN_RESOURCES
          - FIRST_PARTY_RESOURCES
          - THIRD_PARTY_RESOURCES
          type: string
        brandIconUrl:
          description: The URL of the provider's icon.
          type: string
        domainNamePatterns:
          description: A list of domain patterns of the provider.
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - brandIconUrl
      - domainNamePatterns
      - resourceName
      - resourceType
      type: object
    ResourceType:
      description: A rule for the resource type.
      example:
        regularExpression: regularExpression
        secondaryResourceType: secondaryResourceType
        primaryResourceType: CSS
      properties:
        regularExpression:
          description: The regular expression to detect the resource.
          type: string
        primaryResourceType:
          description: The primary type of the resource.
          enum:
          - CSS
          - IMAGE
          - OTHER
          - SCRIPT
          type: string
        secondaryResourceType:
          description: The secondary type of the resource.
          type: string
      required:
      - primaryResourceType
      - regularExpression
      type: object
    ResourceUrlCleanupRule:
      description: A rule for the URL cleanup rule.
      example:
        regularExpression: regularExpression
        resourceName: resourceName
        replaceWith: replaceWith
      properties:
        resourceName:
          description: The name of the rule.
          type: string
        regularExpression:
          description: The pattern (regular expression) to look for.
          type: string
        replaceWith:
          description: The text to replace the found pattern with.
          type: string
      required:
      - regularExpression
      - replaceWith
      - resourceName
      type: object
    CredentialsResponseElement:
      description: Metadata of the credentials set.
      example:
        name: Sample username-password credentials
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        type: USERNAME_PASSWORD
        description: Sample credentials for demo purposes.
        owner: user@domain.com
        ownerAccessOnly: "true"
      properties:
        name:
          description: The name of the credentials set.
          type: string
        id:
          description: The ID of the credentials set.
          type: string
        type:
          description: The type of the credentials set.
          enum:
          - CERTIFICATE
          - TOKEN
          - UNKNOWN
          - USERNAME_PASSWORD
          type: string
        description:
          description: A short description of the credentials set.
          type: string
        owner:
          description: The owner of the credential (user for which used API token
            was created).
          type: string
        ownerAccessOnly:
          description: Flag indicating that this credential is visible only to the
            owner.
          type: boolean
      required:
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    CredentialsList:
      description: A list of credentials sets for Synthetic monitors.
      example:
        credentials:
        - name: Sample username-password credentials
          id: CREDENTIALS_VAULT-E80203F993472E6D
          type: USERNAME_PASSWORD
          description: Sample credentials for demo purposes
          owner: admin
        - name: Sample certificate credentials
          id: CREDENTIALS_VAULT-842DEF439999E15B
          type: CERTIFICATE
          description: Sample credentials for demo purposes
          owner: John.Doe@domain.com
        - name: Sample token credentials
          id: CREDENTIALS_VAULT-854345639999E15B
          type: TOKEN
          description: Sample token for demo purposes
          owner: John.Doe@domain.com
      properties:
        credentials:
          description: A list of credentials sets for Synthetic monitors.
          items:
            $ref: '#/components/schemas/CredentialsResponseElement'
          type: array
      required:
      - credentials
      type: object
    CertificateCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - $ref: '#/components/schemas/CertificateCredentials_allOf'
      description: A credentials set of the `CERTIFICATE` type.
      required:
      - certificate
      - certificateFormat
      - name
      - password
      type: object
    Credentials:
      description: A set of credentials for synthetic monitors.
      discriminator:
        propertyName: type
      example:
        name: Sample credentials
        type: USERNAME_PASSWORD
        description: Sample set of credentials for API documentation
        user: john.smith
        password: 1234abcd
        ownerAccessOnly: "true"
      properties:
        name:
          description: The name of the credentials set.
          type: string
        id:
          description: The ID of the credentials set.
          type: string
        description:
          description: A short description of the credentials set.
          type: string
        ownerAccessOnly:
          description: The credentials set is available to every user (`false`) or
            to owner only (`true`).
          type: boolean
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `CERTIFICATE` -> CertificateCredentials\
            \ \n* `USERNAME_PASSWORD` -> UserPasswordCredentials \n* `TOKEN` -> TokenCredentials\
            \ \n"
          enum:
          - CERTIFICATE
          - TOKEN
          - USERNAME_PASSWORD
          type: string
      required:
      - name
      type: object
    TokenCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - $ref: '#/components/schemas/TokenCredentials_allOf'
      description: A credentials set of the `TOKEN` type.
      required:
      - name
      - token
      type: object
    UserPasswordCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - $ref: '#/components/schemas/UserPasswordCredentials_allOf'
      description: A credentials set of the `USERNAME_PASSWORD` type.
      required:
      - name
      - password
      - user
      type: object
    CustomService:
      example:
        name: CustomService
        enabled: true
        rules:
        - enabled: true
          className: com.your.company.ClassName
          methodRules:
          - methodName: AMethod
            argumentTypes:
            - java.lang.String
            returnType: void
        queueEntryPoint: false
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the custom service.
          format: uuid
          type: string
        name:
          description: The name of the custom service, displayed in the UI.
          maxLength: 500
          minLength: 3
          type: string
        order:
          description: |-
            The order string. Sorting custom services alphabetically by their order string determines their relative ordering.

            Typically this is managed by Dynatrace internally and will not be present in GET responses.
          maxLength: 2147483647
          minLength: 1
          type: string
        enabled:
          description: Custom service enabled/disabled.
          type: boolean
        rules:
          description: The list of rules defining the custom service.
          items:
            $ref: '#/components/schemas/DetectionRule'
          maxItems: 2000
          minItems: 1
          type: array
        queueEntryPoint:
          description: "The queue entry point flag. \n\nSet to `true` for custom messaging\
            \ services."
          type: boolean
        queueEntryPointType:
          description: The queue entry point type..
          enum:
          - IBM_MQ
          - JMS
          - KAFKA
          - MSMQ
          - RABBIT_MQ
          type: string
        processGroups:
          description: The list of process groups the custom service should belong
            to.
          items:
            type: string
          type: array
      required:
      - enabled
      - name
      - queueEntryPoint
      - rules
      type: object
    DetectionRule:
      properties:
        id:
          description: The ID of the detection rule.
          format: uuid
          type: string
        enabled:
          description: Rule enabled/disabled.
          type: boolean
        fileName:
          description: "The PHP file containing the class or methods to instrument.\
            \ \n\nRequired for PHP custom service. \n\n Not applicable to Java and\
            \ .NET."
          type: string
        fileNameMatcher:
          description: Matcher applying to the file name. Default value is `ENDS_WITH`
            (if applicable).
          enum:
          - ENDS_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        className:
          description: "The fully qualified class or interface to instrument. \n\n\
            Required for Java and .NET custom services. \n\n Not applicable to PHP."
          type: string
        matcher:
          description: Matcher applying to the class name. `STARTS_WITH` can only
            be used if there is at least one annotation defined. Default value is
            `EQUALS`.
          enum:
          - ENDS_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        methodRules:
          description: List of methods to instrument.
          items:
            $ref: '#/components/schemas/MethodRule'
          maxItems: 2000
          minItems: 1
          type: array
        annotations:
          description: "Additional annotations filter of the rule. \n\nOnly classes\
            \ where all listed annotations are available in the class itself or any\
            \ of its superclasses are instrumented. \n\nNot applicable to PHP."
          items:
            type: string
          type: array
      required:
      - enabled
      - methodRules
      type: object
    MethodRule:
      properties:
        id:
          description: The ID of the method rule.
          format: uuid
          type: string
        methodName:
          description: The method to instrument.
          minLength: 1
          type: string
        argumentTypes:
          description: Fully qualified types of argument the method expects.
          items:
            type: string
          type: array
        returnType:
          description: Fully qualified type the method returns.
          minLength: 1
          type: string
      required:
      - methodName
      - returnType
      type: object
    AssignedEntitiesTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/AssignedEntitiesTile_allOf'
      description: "Configuration of a tile with an assigned Dynatrace entity. \n\n\
        An example is the Bounce rate tile, showing the data from an assigned application."
      required:
      - assignedEntities
      - bounds
      - name
      - tileType
      type: object
    AssignedEntitiesWithMetricTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/AssignedEntitiesWithMetricTile_allOf'
      description: "Configuration of a tile with an assigned Dynatrace entity and\
        \ an assigned metric. \n\nAn example is the Worldmap tile, showing the data\
        \ from an assigned performance or behavior metric of an assigned application."
      required:
      - assignedEntities
      - bounds
      - name
      - tileType
      type: object
    CustomChartingItemMetadataConfig:
      description: Additional metadata for charted metric.
      properties:
        lastModified:
          description: The timestamp of the last metadata modification, in UTC milliseconds.
          format: int64
          type: integer
        customColor:
          description: The color of the metric in the chart, hex format.
          type: string
      required:
      - customColor
      type: object
    CustomChartingTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/CustomChartingTile_allOf'
      description: Configuration of a custom chart tile.
      required:
      - bounds
      - name
      - tileType
      type: object
    CustomFilterChartConfig:
      description: Configuration of a custom chart.
      properties:
        legendShown:
          description: Defines if a legend should be shown.
          type: boolean
        type:
          description: The type of the chart.
          enum:
          - PIE
          - SINGLE_VALUE
          - TIMESERIES
          - TOP_LIST
          type: string
        series:
          description: A list of charted metrics.
          items:
            $ref: '#/components/schemas/CustomFilterChartSeriesConfig'
          type: array
        resultMetadata:
          description: Additional information about charted metric.
          type: object
        axisLimits:
          description: The optional custom y-axis limits.
          type: object
        leftAxisCustomUnit:
          description: The custom unit for the left Y-axis.
          enum:
          - Bit
          - BitPerHour
          - BitPerMinute
          - BitPerSecond
          - Byte
          - BytePerHour
          - BytePerMinute
          - BytePerSecond
          - Cores
          - Count
          - Day
          - DecibelMilliWatt
          - GibiByte
          - Giga
          - GigaByte
          - Hour
          - KibiByte
          - KibiBytePerHour
          - KibiBytePerMinute
          - KibiBytePerSecond
          - Kilo
          - KiloByte
          - KiloBytePerHour
          - KiloBytePerMinute
          - KiloBytePerSecond
          - MebiByte
          - MebiBytePerHour
          - MebiBytePerMinute
          - MebiBytePerSecond
          - Mega
          - MegaByte
          - MegaBytePerHour
          - MegaBytePerMinute
          - MegaBytePerSecond
          - MicroSecond
          - MilliCores
          - MilliSecond
          - MilliSecondPerMinute
          - Minute
          - Month
          - NanoSecond
          - NanoSecondPerMinute
          - NotApplicable
          - PerHour
          - PerMinute
          - PerSecond
          - Percent
          - Pixel
          - Promille
          - Ratio
          - Second
          - State
          - Unspecified
          - Week
          - Year
          type: string
        rightAxisCustomUnit:
          description: The custom unit for the right Y-axis.
          enum:
          - Bit
          - BitPerHour
          - BitPerMinute
          - BitPerSecond
          - Byte
          - BytePerHour
          - BytePerMinute
          - BytePerSecond
          - Cores
          - Count
          - Day
          - DecibelMilliWatt
          - GibiByte
          - Giga
          - GigaByte
          - Hour
          - KibiByte
          - KibiBytePerHour
          - KibiBytePerMinute
          - KibiBytePerSecond
          - Kilo
          - KiloByte
          - KiloBytePerHour
          - KiloBytePerMinute
          - KiloBytePerSecond
          - MebiByte
          - MebiBytePerHour
          - MebiBytePerMinute
          - MebiBytePerSecond
          - Mega
          - MegaByte
          - MegaBytePerHour
          - MegaBytePerMinute
          - MegaBytePerSecond
          - MicroSecond
          - MilliCores
          - MilliSecond
          - MilliSecondPerMinute
          - Minute
          - Month
          - NanoSecond
          - NanoSecondPerMinute
          - NotApplicable
          - PerHour
          - PerMinute
          - PerSecond
          - Percent
          - Pixel
          - Promille
          - Ratio
          - Second
          - State
          - Unspecified
          - Week
          - Year
          type: string
      required:
      - resultMetadata
      - series
      - type
      type: object
    CustomFilterChartSeriesConfig:
      description: Configuration of a charted metric.
      properties:
        metric:
          description: The name of the charted metric.
          type: string
        aggregation:
          description: The charted aggregation of the metric.
          enum:
          - AVG
          - COUNT
          - DISTINCT
          - FASTEST10PERCENT
          - MAX
          - MEDIAN
          - MIN
          - NONE
          - OF_INTEREST_RATIO
          - OTHER_RATIO
          - PERCENTILE
          - PER_MIN
          - SLOWEST10PERCENT
          - SLOWEST5PERCENT
          - SUM
          - SUM_DIMENSIONS
          type: string
        percentile:
          description: "The charted percentile. \n\n Only applicable if the **aggregation**\
            \ is set to `PERCENTILE`."
          format: int64
          type: integer
        type:
          description: The visualization of the timeseries chart.
          enum:
          - AREA
          - BAR
          - LINE
          type: string
        entityType:
          description: The type of the Dynatrace entity that delivered the charted
            metric.
          type: string
        dimensions:
          description: Configuration of the charted metric splitting.
          items:
            $ref: '#/components/schemas/CustomFilterChartSeriesDimensionConfig'
          type: array
        sortAscending:
          description: 'Sort ascending (`true`) or descending (`false`). '
          type: boolean
        sortColumn:
          type: boolean
        aggregationRate:
          enum:
          - HOUR
          - MINUTE
          - SECOND
          - TOTAL
          type: string
      required:
      - aggregation
      - dimensions
      - entityType
      - metric
      - type
      type: object
    CustomFilterChartSeriesDimensionConfig:
      description: Configuration of the charted metric splitting.
      properties:
        id:
          description: The ID of the dimension by which the metric is split.
          type: string
        name:
          description: The name of the dimension by which the metric is split.
          type: string
        values:
          description: The splitting value.
          items:
            type: string
          type: array
        entityDimension:
          type: boolean
      required:
      - id
      - values
      type: object
    CustomFilterConfig:
      description: Configuration of the custom filter of a tile.
      properties:
        type:
          description: "The type of the filter. \n\n It shows to which entity the\
            \ filter belongs. \n\n Custom charts have the `MIXED` type."
          enum:
          - ALB
          - APPLICATION
          - APPLICATION_METHOD
          - APPMON
          - ASG
          - AWS_CREDENTIALS
          - AWS_CUSTOM_SERVICE
          - AWS_LAMBDA_FUNCTION
          - CLOUD_APPLICATION
          - CLOUD_APPLICATION_INSTANCE
          - CLOUD_APPLICATION_NAMESPACE
          - CONTAINER_GROUP_INSTANCE
          - CUSTOM_APPLICATION
          - CUSTOM_DEVICES
          - CUSTOM_SERVICES
          - DATABASE
          - DATABASE_KEY_REQUEST
          - DCRUM_APPLICATION
          - DCRUM_ENTITY
          - DYNAMO_DB
          - EBS
          - EC2
          - ELB
          - ENVIRONMENT
          - ESXI
          - EXTERNAL_SYNTHETIC_TEST
          - GLOBAL_BACKGROUND_ACTIVITY
          - HOST
          - IOT
          - KUBERNETES_CLUSTER
          - KUBERNETES_NODE
          - MDA_SERVICE
          - MIXED
          - MOBILE_APPLICATION
          - MONITORED_ENTITY
          - NLB
          - PG_BACKGROUND_ACTIVITY
          - PROBLEM
          - PROCESS_GROUP_INSTANCE
          - RDS
          - REMOTE_PLUGIN
          - SERVICE
          - SERVICE_KEY_REQUEST
          - SYNTHETIC_BROWSER_MONITOR
          - SYNTHETIC_HTTPCHECK
          - SYNTHETIC_HTTPCHECK_STEP
          - SYNTHETIC_LOCATION
          - SYNTHETIC_TEST
          - SYNTHETIC_TEST_STEP
          - UI_ENTITY
          - VIRTUAL_MACHINE
          - WEB_CHECK
          type: string
        customName:
          description: The name of the tile, set by user
          type: string
        defaultName:
          description: The default name of the tile
          minLength: 1
          type: string
        chartConfig:
          $ref: '#/components/schemas/CustomFilterChartConfig'
        filtersPerEntityType:
          description: A list of filters, applied to specific entity types.
          type: object
      required:
      - chartConfig
      - customName
      - defaultName
      - filtersPerEntityType
      - type
      type: object
    Dashboard:
      description: Configuration of a dashboard.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        dashboardMetadata:
          name: Example Dashboard
          shared: true
          sharingDetails:
            linkShared: true
            published: false
          dashboardFilter:
            timeframe: l_72_HOURS
            managementZone:
              id: "3438779970106539862"
              name: Example Management Zone
        tiles:
        - name: Hosts
          tileType: HEADER
          configured: true
          bounds:
            top: 0
            left: 0
            width: 304
            height: 38
          tileFilter: {}
        - name: Applications
          tileType: HEADER
          configured: true
          bounds:
            top: 0
            left: 304
            width: 304
            height: 38
          tileFilter: {}
        - name: Host health
          tileType: HOSTS
          configured: true
          bounds:
            top: 38
            left: 0
            width: 304
            height: 304
          tileFilter:
            managementZone:
              id: "3438779970106539862"
              name: Example Management Zone
          chartVisible: true
        - name: Application health
          tileType: APPLICATIONS
          configured: true
          bounds:
            top: 38
            left: 304
            width: 304
            height: 304
          tileFilter:
            managementZone:
              id: "3438779970106539862"
              name: Example Management Zone
          chartVisible: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the dashboard.
          type: string
        dashboardMetadata:
          $ref: '#/components/schemas/DashboardMetadata'
        tiles:
          description: The list of tiles on the dashboard.
          items:
            $ref: '#/components/schemas/Tile'
          type: array
      required:
      - dashboardMetadata
      - tiles
      type: object
    DashboardFilter:
      description: Filters, applied to a dashboard.
      properties:
        timeframe:
          description: The default timeframe of the dashboard.
          type: string
        managementZone:
          $ref: '#/components/schemas/EntityShortRepresentation'
      type: object
    DashboardMetadata:
      description: Parameters of a dashboard.
      properties:
        name:
          description: The name of the dashboard.
          type: string
        shared:
          description: The dashboard is shared (`true`) or private (`false`).
          type: boolean
        owner:
          description: The owner of the dashboard.
          type: string
        sharingDetails:
          $ref: '#/components/schemas/SharingInfo'
        dashboardFilter:
          $ref: '#/components/schemas/DashboardFilter'
        tags:
          description: A set of tags assigned to the dashboard.
          items:
            type: string
          type: array
          uniqueItems: true
        preset:
          description: The dashboard is a preset (`true`)
          readOnly: true
          type: boolean
        validFilterKeys:
          description: A set of all possible global dashboard filters that can be
            applied to dashboard
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - name
      type: object
    FilterableEntityTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/FilterableEntityTile_allOf'
      description: "Configuration of a tile with the built-in custom filter. \n\n\
        An example is the Service health tile, which may use a custom timeframe."
      required:
      - bounds
      - name
      - tileType
      type: object
    MarkdownTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/MarkdownTile_allOf'
      description: Configuration of the Markdown tile.
      required:
      - bounds
      - markdown
      - name
      - tileType
      type: object
    SharingInfo:
      description: Sharing configuration of a dashboard.
      properties:
        linkShared:
          description: If `true`, the dashboard is shared via link and authenticated
            users with the link can view.
          type: boolean
        published:
          description: If `true`, the dashboard is published to anyone on this environment.
          type: boolean
      type: object
    SyntheticSingleWebcheckTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/SyntheticSingleWebcheckTile_allOf'
      description: Configuration of the Browser monitor tile.
      required:
      - assignedEntities
      - bounds
      - name
      - tileType
      type: object
    Tile:
      description: "Configuration of a tile. \n\nThe actual set of fields depends\
        \ on the type of the tile. See the description of the **tileType** field."
      discriminator:
        propertyName: tileType
      properties:
        name:
          description: The name of the tile.
          type: string
        tileType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `CUSTOM_CHARTING` -> CustomChartingTile\
            \ \n* `DTAQL` -> UserSessionQueryTile \n* `MARKDOWN` -> MarkdownTile \n\
            * `HOSTS` -> FilterableEntityTile \n* `APPLICATIONS` -> FilterableEntityTile\
            \ \n* `SERVICES` -> FilterableEntityTile \n* `DATABASES_OVERVIEW` -> FilterableEntityTile\
            \ \n* `SYNTHETIC_TESTS` -> FilterableEntityTile \n* `APPLICATION_WORLDMAP`\
            \ -> AssignedEntitiesWithMetricTile \n* `RESOURCES` -> AssignedEntitiesWithMetricTile\
            \ \n* `THIRD_PARTY_MOST_ACTIVE` -> AssignedEntitiesWithMetricTile \n*\
            \ `UEM_CONVERSIONS_PER_GOAL` -> AssignedEntitiesWithMetricTile \n* `HOST`\
            \ -> AssignedEntitiesWithMetricTile \n* `PROCESS_GROUPS_ONE` -> AssignedEntitiesWithMetricTile\
            \ \n* `SYNTHETIC_SINGLE_WEBCHECK` -> SyntheticSingleWebcheckTile \n* `APPLICATION`\
            \ -> AssignedEntitiesTile \n* `VIRTUALIZATION` -> AssignedEntitiesTile\
            \ \n* `AWS` -> AssignedEntitiesTile \n* `SERVICE_VERSATILE` -> AssignedEntitiesTile\
            \ \n* `SESSION_METRICS` -> AssignedEntitiesTile \n* `USERS` -> AssignedEntitiesTile\
            \ \n* `UEM_KEY_USER_ACTIONS` -> AssignedEntitiesTile \n* `BOUNCE_RATE`\
            \ -> AssignedEntitiesTile \n* `UEM_CONVERSIONS_OVERALL` -> AssignedEntitiesTile\
            \ \n* `UEM_JSERRORS_OVERALL` -> AssignedEntitiesTile \n* `MOBILE_APPLICATION`\
            \ -> AssignedEntitiesTile \n* `SYNTHETIC_SINGLE_EXT_TEST` -> AssignedEntitiesTile\
            \ \n* `SYNTHETIC_HTTP_MONITOR` -> AssignedEntitiesTile \n* `DATABASE`\
            \ -> AssignedEntitiesTile \n* `CUSTOM_APPLICATION` -> AssignedEntitiesTile\
            \ \n* `APPLICATION_METHOD` -> AssignedEntitiesTile \n* `LOG_ANALYTICS`\
            \ -> AssignedEntitiesTile \n* `OPENSTACK` -> AssignedEntitiesTile \n*\
            \ `OPENSTACK_PROJECT` -> AssignedEntitiesTile \n* `OPENSTACK_AV_ZONE`\
            \ -> AssignedEntitiesTile \n* `DEVICE_APPLICATION_METHOD` -> AssignedEntitiesTile\
            \ \n* `DEM_KEY_USER_ACTION` -> AssignedEntitiesTile \n* `SLO` -> AssignedEntitiesTile\
            \ \n"
          enum:
          - APPLICATION
          - APPLICATIONS
          - APPLICATION_METHOD
          - APPLICATION_WORLDMAP
          - AWS
          - BOUNCE_RATE
          - CUSTOM_APPLICATION
          - CUSTOM_CHARTING
          - DATABASE
          - DATABASES_OVERVIEW
          - DEM_KEY_USER_ACTION
          - DEVICE_APPLICATION_METHOD
          - DTAQL
          - HOST
          - HOSTS
          - LOG_ANALYTICS
          - MARKDOWN
          - MOBILE_APPLICATION
          - OPENSTACK
          - OPENSTACK_AV_ZONE
          - OPENSTACK_PROJECT
          - PROCESS_GROUPS_ONE
          - RESOURCES
          - SERVICES
          - SERVICE_VERSATILE
          - SESSION_METRICS
          - SLO
          - SYNTHETIC_HTTP_MONITOR
          - SYNTHETIC_SINGLE_EXT_TEST
          - SYNTHETIC_SINGLE_WEBCHECK
          - SYNTHETIC_TESTS
          - THIRD_PARTY_MOST_ACTIVE
          - UEM_CONVERSIONS_OVERALL
          - UEM_CONVERSIONS_PER_GOAL
          - UEM_JSERRORS_OVERALL
          - UEM_KEY_USER_ACTIONS
          - USERS
          - VIRTUALIZATION
          type: string
        configured:
          description: The tile is configured and ready to use (`true`) or just placed
            on the dashboard (`false`).
          type: boolean
        bounds:
          $ref: '#/components/schemas/TileBounds'
        tileFilter:
          $ref: '#/components/schemas/TileFilter'
        assignedEntities:
          description: The list of Dynatrace entities, assigned to the tile.
          items:
            type: string
          type: array
        metric:
          description: The metric assigned to the tile.
          type: string
        filterConfig:
          $ref: '#/components/schemas/CustomFilterConfig'
        chartVisible:
          type: boolean
        markdown:
          description: The markdown-formatted content of the tile.
          type: string
        excludeMaintenanceWindows:
          description: Include (`false') or exclude (`true`) maintenance windows from
            availability calculations.
          type: boolean
        customName:
          description: The name of the tile, set by user.
          type: string
        query:
          description: A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info)
            executed by the tile.
          type: string
        type:
          description: The visualization of the tile.
          type: string
        timeFrameShift:
          description: "The comparison timeframe of the query. \n\n If specified,\
            \ you additionally get the results of the same query with the specified\
            \ time shift."
          type: string
        visualizationConfig:
          $ref: '#/components/schemas/UserSessionQueryTileConfiguration'
        limit:
          description: The limit of the results, if not set will use the default value
            of the system
          format: int32
          type: integer
      required:
      - bounds
      - name
      - tileType
      type: object
    TileBounds:
      description: The position and size of a tile.
      properties:
        top:
          description: The vertical distance from the top left corner of the dashboard
            to the top left corner of the tile, in pixels.
          format: int32
          type: integer
        left:
          description: The horizontal distance from the top left corner of the dashboard
            to the top left corner of the tile, in pixels.
          format: int32
          type: integer
        width:
          description: The width of the tile, in pixels.
          format: int32
          type: integer
        height:
          description: The height of the tile, in pixels.
          format: int32
          type: integer
      type: object
    TileFilter:
      description: "A filter applied to a tile. \n\n It overrides dashboard's filter."
      properties:
        timeframe:
          description: The default timeframe of the tile.
          type: string
        managementZone:
          $ref: '#/components/schemas/EntityShortRepresentation'
      type: object
    UserSessionQueryTile:
      allOf:
      - $ref: '#/components/schemas/Tile'
      - $ref: '#/components/schemas/UserSessionQueryTile_allOf'
      description: Configuration of a User session query tile.
      required:
      - bounds
      - customName
      - name
      - query
      - tileType
      - type
      type: object
    UserSessionQueryTileConfiguration:
      description: Configuration of a User session query visualization tile.
      properties:
        hasAxisBucketing:
          description: The axis bucketing when enabled groups similar series in the
            same virtual axis.
          type: boolean
      type: object
    DashboardList:
      description: A list of short representations of dashboards.
      example:
        dashboards:
        - id: d6740373-ff26-4681-b95f-fd5b858c97f7
          name: Home dashboard
          owner: admin
        - id: 54b34dbb-2ae7-4c27-9dbc-90a4f4c68b10
          name: Databases
          owner: viewer
        - id: 8525b0bf-e33c-4a92-a534-9dedc1391e10
          name: Business value
          owner: rocks
      properties:
        dashboards:
          description: A list of short representations of dashboards.
          items:
            $ref: '#/components/schemas/DashboardStub'
          type: array
      required:
      - dashboards
      type: object
    DashboardStub:
      description: A short representation of a dashboard.
      properties:
        id:
          description: The ID of the dashboard.
          type: string
        name:
          description: The name of the dashboard.
          readOnly: true
          type: string
        owner:
          description: The owner of the dashboard.
          readOnly: true
          type: string
      required:
      - id
      type: object
    DataPrivacyAndSecurity:
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        maskUserActionNames: true
        logAuditEvents: true
        maskPersonalDataInUris: true
        maskIpAddressesAndGpsCoordinates: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        maskIpAddressesAndGpsCoordinates:
          description: Mask IP addresses and GPS coordinates enabled/disabled.
          type: boolean
        maskUserActionNames:
          description: Mask user action names (Web applications only) enabled/disabled.
          type: boolean
        maskPersonalDataInUris:
          description: Mask personal data in URIs enabled/disabled.
          type: boolean
        logAuditEvents:
          description: The audit logging is enabled (`true`) or disabled (`false`).
          type: boolean
      required:
      - maskIpAddressesAndGpsCoordinates
      - maskPersonalDataInUris
      - maskUserActionNames
      type: object
    HostAutoUpdateConfig:
      description: Configuration of OneAgent auto-update.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        effectiveVersion: 1.191.0.20200326-161115
        id: HOST-0123456789ABCDE
        effectiveSetting: DISABLED
        version: 1.191.0.20200326-161115
        setting: DISABLED
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The Dynatrace entity ID of the host where OneAgent is deployed.
          example: HOST-0123456789ABCDE
          readOnly: true
          type: string
        setting:
          description: "The auto-update state of OneAgents on the host: \n\n* `ENABLED`:\
            \ OneAgent automatically updates to the most recent version. \n* `DISABLED`:\
            \ OneAgent updates to the version specified in the **version** field.\n\
            * `INHERITED`: The setting from the host group (if the host is a member\
            \ of a host group) or the environment-wide configuration (if the host\
            \ doesn't belong to a host group) is used."
          enum:
          - DISABLED
          - ENABLED
          - INHERITED
          example: DISABLED
          type: string
        version:
          description: "The version to which the OneAgent must be updated. \n\nSpecify\
            \ the version in the `<major>.<minor>.<revision>.<timestamp>` format (for\
            \ example `1.191.0.20200326-161115`). You can fetch the list of available\
            \ versions with the [GET available versions](https://www.dynatrace.com/support/help/shortlink/api-deployment-get-versions)\
            \ call. \n\nIf no suitable installer is found for the provided version\
            \ or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable\
            \ when the **effectiveSetting** value is `DISABLED`. \n\nIf the **setting**\
            \ parameter is set to `INHERITED` but the **version** is still set, it\
            \ will result in a one-time update: OneAgent will be updated to the specified\
            \ version and the **version** value will be set to `null`. For further\
            \ updates the parent setting will be used."
          example: 1.191.0.20200326-161115
          type: string
        effectiveSetting:
          description: "The actual state of the auto-update on the host. \n\nApplicable\
            \ only if the **setting** parameter is set to `INHERITED`. In that case\
            \ the value is taken from the host group or the environment-wide configuration."
          enum:
          - ENABLED
          - DISABLED
          example: DISABLED
          readOnly: true
          type: string
        effectiveVersion:
          description: "The actual version to which the OneAgent must be updated.\
            \ \n\nApplicable only if the **setting** parameter is set to `INHERITED`\
            \ and the **version** parameter is set to `null`. In that case the value\
            \ is taken from the host group or the environment-wide configuration."
          example: 1.191.0.20200326-161115
          readOnly: true
          type: string
      required:
      - setting
      type: object
    HostConfig:
      description: OneAgent configuration on a host.
      example:
        techMonitoringConfigList:
          technologies:
          - scope: ENVIRONMENT
            type: JAVA
            monitoringEnabled: true
          - scope: ENVIRONMENT
            type: JAVA
            monitoringEnabled: true
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
        monitoringConfig:
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
          monitoringMode: FULL_STACK
          id: HOST-0123456789ABCDE
          monitoringEnabled: true
        id: HOST-0123456789ABCDE
        autoUpdateConfig:
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
          effectiveVersion: 1.191.0.20200326-161115
          id: HOST-0123456789ABCDE
          effectiveSetting: DISABLED
          version: 1.191.0.20200326-161115
          setting: DISABLED
      properties:
        id:
          description: The Dynatrace entity ID of the host where OneAgent is deployed.
          example: HOST-0123456789ABCDE
          readOnly: true
          type: string
        monitoringConfig:
          $ref: '#/components/schemas/MonitoringConfig'
        autoUpdateConfig:
          $ref: '#/components/schemas/HostAutoUpdateConfig'
        techMonitoringConfigList:
          $ref: '#/components/schemas/TechMonitoringList'
      type: object
    MonitoringConfig:
      description: Monitoring configuration of OneAgent.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        monitoringMode: FULL_STACK
        id: HOST-0123456789ABCDE
        monitoringEnabled: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The Dynatrace entity ID of the host where OneAgent is deployed.
          example: HOST-0123456789ABCDE
          readOnly: true
          type: string
        monitoringEnabled:
          description: The monitoring is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
        monitoringMode:
          description: 'The monitoring mode for the host: full stack or infrastructure
            only.'
          enum:
          - CLOUD_INFRASTRUCTURE
          - FULL_STACK
          example: FULL_STACK
          type: string
      required:
      - monitoringEnabled
      - monitoringMode
      type: object
    TechMonitoringList:
      description: A list of technology monitoring configurations.
      example:
        technologies:
        - scope: ENVIRONMENT
          type: JAVA
          monitoringEnabled: true
        - scope: ENVIRONMENT
          type: JAVA
          monitoringEnabled: true
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        technologies:
          description: A list of technology monitoring configurations.
          items:
            $ref: '#/components/schemas/Technology'
          type: array
      required:
      - technologies
      type: object
    Technology:
      description: Configuration of technology monitoring.
      example:
        scope: ENVIRONMENT
        type: JAVA
        monitoringEnabled: true
      properties:
        type:
          description: The type of the technology.
          enum:
          - AIX_KERNEL_EXT
          - APACHE
          - CIM_V2
          - DOCKER
          - DOCKER_WIN
          - DOT_NET
          - DOT_NET_CORE
          - EXTENSIONS
          - EXTENSIONS_DS_GENERIC
          - EXTENSIONS_STATSD
          - GARDEN
          - GO
          - GO_STATIC
          - IBM_INTEGRATION_BUS
          - IIS
          - JAVA
          - LOG_ANALYTICS
          - NETWORK
          - NGINX
          - NODE_JS
          - OPENTRACINGNATIVE
          - PHP
          - PHP_74
          - PHP_80_EA
          - PHP_CGI
          - PHP_CLI
          - PHP_NG
          - PHP_WIN
          - PROCESS
          - RUBY
          - SDK
          - VARNISH
          - Z_OS
          example: JAVA
          type: string
        monitoringEnabled:
          description: The monitoring of the technology is enabled (`true`) or disabled
            (`false`).
          example: true
          type: boolean
        scope:
          description: "The validity of the configuration: \n\n* `HOST`: The setting\
            \ is valid for OneAgent on host only. Other OneAgents, connected to the\
            \ same Dynatrace server may have different setting. \n* `ENVIRONMENT`:\
            \ The setting is valid for all OneAgents, connected to the Dynatrace server."
          enum:
          - ENVIRONMENT
          - HOST
          example: ENVIRONMENT
          type: string
      required:
      - monitoringEnabled
      - type
      type: object
    Extension:
      description: General configuration of an extension.
      example:
        id: custom.remote.python.demo
        name: ActiveGate demo extension
        version: "1.01"
        type: ActiveGate
        metricGroup: custom.demo_metrics
        metadata:
          configurationVersions:
          - 7
          clusterVersion: 1.186.0.20200109-094111
        properties:
        - key: serverIp
          type: STRING
          defaultValue: 127.0.0.1
        - key: password
          type: PASSWORD
          defaultValue: ""
        - key: username
          type: STRING
          defaultValue: dynatrace
        - key: dropdownProperty
          type: DROPDOWN
          defaultValue: one
          dropdownValues:
          - one
          - two
          - three
      properties:
        id:
          description: The ID of the extension, for example `custom.remote.python.demo`.
          type: string
        name:
          description: The name of the extension, displayed in Dynatrace.
          type: string
        version:
          description: The version of the extension, displayed in Dynatrace.
          type: string
        type:
          description: The type of the extension. It indicates the runtime environment
            of the extension (for example, ACTIVEGATE).
          enum:
          - ACTIVEGATE
          - CODEMODULE
          - JMX
          - ONEAGENT
          - PMI
          - UNKNOWN
          type: string
        metricGroup:
          description: The metricGroup of the extension used for grouping custom metrics
            into a hierarchical namespace.
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        properties:
          description: A list of extension properties.
          items:
            $ref: '#/components/schemas/ExtensionProperty'
          type: array
      type: object
    ExtensionProperty:
      description: A property of an extension.
      properties:
        key:
          description: The key of the property.
          type: string
        type:
          description: The type of the property.
          type: string
        defaultValue:
          description: The default value of the property.
          type: string
        dropdownValues:
          description: "The list of possible values of the property. \n\n If such\
            \ a list is defined, only values from this list can be assigned to the\
            \ property."
          items:
            type: string
          type: array
      type: object
    ExtensionDto:
      example:
        id: custom.python.connectionpool
        name: Connection Pool
        type: ONEAGENT
      properties:
        id:
          type: string
        name:
          type: string
        type:
          enum:
          - ACTIVEGATE
          - CODEMODULE
          - JMX
          - ONEAGENT
          - PMI
          - UNKNOWN
          type: string
      type: object
    ExtensionListDto:
      example:
        extensions:
        - id: custom.python.connectionpool
          name: Connection Pool
          type: ONEAGENT
        totalResults: 9
        nextPageToken: LlUdYmu5S2MfX/ppfCInR9M=
      properties:
        extensions:
          description: A list of extensions.
          items:
            $ref: '#/components/schemas/ExtensionDto'
          type: array
        totalResults:
          description: The total number of entries in the result.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          type: string
      type: object
    ExtensionState:
      description: The state of the extension.
      properties:
        extensionId:
          description: The ID of the extension.
          type: string
        version:
          description: The version of the extension (for example `1.0.0`).
          type: string
        endpointId:
          description: The ID of the endpoint where the state is detected - Active
            Gate only.
          type: string
        state:
          description: The state of the extension.
          enum:
          - ERROR_AUTH
          - ERROR_COMMUNICATION_FAILURE
          - ERROR_CONFIG
          - ERROR_TIMEOUT
          - ERROR_UNKNOWN
          - INCOMPATIBLE
          - LIMIT_REACHED
          - NOTHING_TO_REPORT
          - OK
          - STATE_TYPE_UNKNOWN
          - UNINITIALIZED
          - UNSUPPORTED
          - WAITING_FOR_STATE
          type: string
        stateDescription:
          description: A short description of the state.
          type: string
        timestamp:
          description: The timestamp when the state was detected, in UTC milliseconds.
          format: int64
          type: integer
        hostId:
          description: The ID of the host on which the extension runs.
          type: string
        processId:
          description: The ID of the entity on which the extension is active.
          type: string
      type: object
    ExtensionStateList:
      description: A list of extension states.
      example:
        states:
        - extensionId: custom.python.connectionpool
          version: "1.82"
          endpointId: "null"
          state: OK
          stateDescription: ""
          timestamp: 1578578108213
          hostId: HOST-01A7DEFA5340A86D
          processId: PROCESS_GROUP_INSTANCE-2182DF2E20E3E067
        totalResults: 9
        nextPageToken: LlUdYmu5S2MfX/ppfCInR9M=
      properties:
        states:
          description: A list of extension states.
          items:
            $ref: '#/components/schemas/ExtensionState'
          type: array
        totalResults:
          description: The total number of entries in the result.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          type: string
      type: object
    GlobalExtensionConfiguration:
      description: Global Configuration of OneAgent and JMX extension
      example:
        id: custom.remote.python.demo
        properties:
        - key: serverIp
          type: STRING
          defaultValue: 127.0.0.1
        - key: password
          type: PASSWORD
          defaultValue: ""
        - key: username
          type: STRING
          defaultValue: dynatrace
        - key: dropdownProperty
          type: DROPDOWN
          defaultValue: one
          dropdownValues:
          - one
          - two
          - three
      properties:
        extensionId:
          description: The ID of the extension.
          type: string
        enabled:
          description: The extension is enabled (`true`) or disabled (`false`).
          type: boolean
        infraOnlyEnabled:
          description: The plugin is enabled (`true`) or disabled (`false`) globally
            for hosts in infrastructure-only monitoring mode
          type: boolean
        properties:
          additionalProperties:
            description: "The list of configuration parameters. \n\n Each parameter\
              \ is a key-value pair."
            type: string
          description: "The list of configuration parameters. \n\n Each parameter\
            \ is a key-value pair."
          type: object
      required:
      - enabled
      type: object
    ExtensionConfigurationList:
      description: A list of configurations.
      example:
        configurationsList:
        - id: custom.remote.python.demo
          enabled: true
          useGlobal: false
          hostId: HOST-01A7DEFA5340A86D
          properties:
            serverIp: 127.0.0.1
            username: dynatrace
            password: ""
            dropdownProperty: three
        totalResults: 9
        nextPageToken: LlUdYmu5S2MfX/ppfCInR9M=
      properties:
        configurationsList:
          description: List of configurations.
          items:
            $ref: '#/components/schemas/EntityShortRepresentation'
          type: array
        totalResults:
          description: The total number of entries in the result.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          type: string
      type: object
    Host:
      description: Host details. Contains ID, name, host group, and tags.
      example:
        name: example host
        id: HOST-0000000000000000
        hostGroup:
          meId: HOST_GROUP-CF1DA380B3A53F17
          name: example host group
        tags:
        - tagA
        - tagB
        managementZones:
        - id: "000000000000000000"
          name: example zone
      properties:
        name:
          description: The name of the host
          type: string
        id:
          description: The ID of the host
          type: string
        hostGroup:
          $ref: '#/components/schemas/HostGroup'
        tags:
          description: A list of tags of the host.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
        managementZones:
          description: A list of management zones to which the host belongs.
          items:
            $ref: '#/components/schemas/EntityShortRepresentation'
          type: array
      type: object
    HostGroup:
      description: Host group to which the host belongs.
      properties:
        meId:
          description: The Dynatrace entity ID of the host group.
          type: string
        name:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
      type: object
    HostList:
      description: The list of hosts supported by extension.
      example:
        nextPageKey: nextPageKey
        totalResults: 0
        hosts:
        - name: example host
          id: HOST-0000000000000000
          hostGroup:
            meId: HOST_GROUP-CF1DA380B3A53F17
            name: example host group
          tags:
          - tagA
          - tagB
          managementZones:
          - id: "000000000000000000"
            name: example zone
        - name: example host
          id: HOST-0000000000000000
          hostGroup:
            meId: HOST_GROUP-CF1DA380B3A53F17
            name: example host group
          tags:
          - tagA
          - tagB
          managementZones:
          - id: "000000000000000000"
            name: example zone
      properties:
        totalResults:
          description: Total number of results
          format: int32
          type: integer
        hosts:
          description: The list of hosts
          items:
            $ref: '#/components/schemas/Host'
          type: array
        nextPageKey:
          description: Next page key used for paging
          type: string
      type: object
    ExtensionConfigurationDto:
      example:
        id: custom.remote.python.demo
        enabled: true
        useGlobal: false
        hostId: HOST-01A7DEFA5340A86D
        properties:
          serverIp: 127.0.0.1
          username: dynatrace
          password: ""
          dropdownProperty: three
        activeGate:
          id: "7835970235169136995"
          name: ActiveGate Host Name
      properties:
        extensionId:
          description: The ID of the extension.
          type: string
        enabled:
          description: The extension is enabled (`true`) or disabled (`false`).
          type: boolean
        useGlobal:
          description: Allows to skip current configuration and use global one.
          type: boolean
        properties:
          additionalProperties:
            description: "The list of extension parameters. \n\n Each parameter is\
              \ a key-value pair."
            type: string
          description: "The list of extension parameters. \n\n Each parameter is a\
            \ key-value pair."
          type: object
        hostId:
          description: The ID of the host on which the extension runs.
          type: string
        activeGate:
          $ref: '#/components/schemas/EntityShortRepresentation'
        endpointId:
          description: The ID of the endpoint.
          type: string
        endpointName:
          description: The name of the endpoint, displayed in Dynatrace.
          type: string
      required:
      - enabled
      - useGlobal
      type: object
    FrequentIssueDetectionConfig:
      description: 'Parameters of the frequent issue detection. To learn more about
        it, see [Detection of frequent issues](https://www.dynatrace.com/support/help/shortlink/frequent-issues)
        help page. '
      example:
        frequentIssueDetectionApplicationEnabled: true
        frequentIssueDetectionServiceEnabled: true
        frequentIssueDetectionInfrastructureEnabled: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        frequentIssueDetectionApplicationEnabled:
          description: The detection for applications is enabled (`true`) or disabled
            (`false`).
          type: boolean
        frequentIssueDetectionServiceEnabled:
          description: The detection for services is enabled (`true`) or disabled
            (`false`).
          type: boolean
        frequentIssueDetectionInfrastructureEnabled:
          description: The detection for infrastructure is enabled (`true`) or disabled
            (`false`).
          type: boolean
      required:
      - frequentIssueDetectionApplicationEnabled
      - frequentIssueDetectionInfrastructureEnabled
      - frequentIssueDetectionServiceEnabled
      type: object
    IpAddressMappingLocation:
      description: The location for an IP address mapping.
      example:
        regionCode: regionCode
        city: city
        countryCode: countryCode
        latitude: -75.5850925717018
        longitude: 36.988422590534526
      properties:
        countryCode:
          description: "The country code of the location. \n\n Use the alpha-2 code\
            \ of the [ISO 3166-2 standard](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes),\
            \ (for example, `AT` for Austria or `PL` for Poland)."
          maxLength: 2
          minLength: 2
          type: string
        city:
          description: The city name of the location.
          type: string
        regionCode:
          description: "The region code of the location. \n\n For the [USA](https://www.iso.org/obp/ui/#iso:code:3166:US)\
            \ or [Canada](https://www.iso.org/obp/ui/#iso:code:3166:CA) use ISO 3166-2\
            \ state codes without `US-` or `CA-` prefix. \n\n For the rest of the\
            \ world use [FIPS 10-4 codes](https://en.wikipedia.org/wiki/List_of_FIPS_region_codes)\
            \ without country prefix."
          type: string
        latitude:
          description: The latitude of the location in `DDD.dddd` format.
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude of the location in `DDD.dddd` format.
          format: double
          maximum: 180
          minimum: -180
          type: number
      required:
      - countryCode
      type: object
    IpAddressMappingRule:
      description: Configuration of the IP address mapping to the geographic location.
      example:
        ipAddressMappingLocation:
          regionCode: regionCode
          city: city
          countryCode: countryCode
          latitude: -75.5850925717018
          longitude: 36.988422590534526
        ipAddressRange:
          address: address
          subnetMask: 18
          addressTo: addressTo
      properties:
        ipAddressMappingLocation:
          $ref: '#/components/schemas/IpAddressMappingLocation'
        ipAddressRange:
          $ref: '#/components/schemas/IpAddressRange'
      required:
      - ipAddressMappingLocation
      - ipAddressRange
      type: object
    IpAddressMappings:
      description: Configuration of the IP address mappings to geographic locations.
      example:
        ipAddressMappingRules:
        - ipAddressMappingLocation:
            regionCode: regionCode
            city: city
            countryCode: countryCode
            latitude: -75.5850925717018
            longitude: 36.988422590534526
          ipAddressRange:
            address: address
            subnetMask: 18
            addressTo: addressTo
        - ipAddressMappingLocation:
            regionCode: regionCode
            city: city
            countryCode: countryCode
            latitude: -75.5850925717018
            longitude: 36.988422590534526
          ipAddressRange:
            address: address
            subnetMask: 18
            addressTo: addressTo
      properties:
        ipAddressMappingRules:
          description: "A list of IP address mapping rules. \n\nRules are evaluated\
            \ from top to bottom; the first matching rule applies."
          items:
            $ref: '#/components/schemas/IpAddressMappingRule'
          type: array
      type: object
    IpDetectionHeaders:
      description: Configuration of the custom client IP headers.
      example:
        ipDetectionHeaders:
        - ipDetectionHeaders
        - ipDetectionHeaders
      properties:
        ipDetectionHeaders:
          description: "A list of custom client IP headers. \n\nHeaders are evaluated\
            \ from top to bottom; the first matching header applies."
          items:
            type: string
          type: array
      type: object
    HostGroupAutoUpdateConfig:
      description: "Configuration of OneAgent auto-update in a host group. \n\nApplies\
        \ to all OneAgents installed on hosts of the host group if their **setting**\
        \ parameter is set to `INHERITED`. Otherwise, the host level setting applies."
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        effectiveVersion: 1.181.0
        id: HOST_GROUP-0123456789ABCDE
        effectiveSetting: DISABLED
        version: 1.181.0
        setting: DISABLED
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The Dynatrace entity ID of the host group.
          example: HOST_GROUP-0123456789ABCDE
          readOnly: true
          type: string
        setting:
          description: "The auto-update state of OneAgents in a host group: \n\n*\
            \ `ENABLED`: OneAgents automatically update to the most recent version.\
            \ \n* `DISABLED`: OneAgents update to the version specified in the **version**\
            \ field.\n* `INHERITED`: The setting from the environment-wide configuration\
            \ is used.\n\nOneAgents installed on hosts of the host group use this\
            \ configuration only when their **setting** parameter is set to `INHERITED`."
          enum:
          - DISABLED
          - ENABLED
          - INHERITED
          example: DISABLED
          type: string
        version:
          description: "The version to which the OneAgent must be updated. \n\nSpecify\
            \ the version in the `<major>.<minor>.<revision>` format (for example\
            \ `1.181.0`). You can fetch the list of available versions with the [GET\
            \ available versions](https://www.dynatrace.com/support/help/shortlink/api-deployment-get-versions)\
            \ call. If no suitable installer is found for the provided version or\
            \ the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable\
            \ when the **setting** parameter is set to `DISABLED`."
          example: 1.181.0
          type: string
        effectiveSetting:
          description: "The actual state of the auto-update on the hosts in a host\
            \ group. \n\nApplicable only if the **setting** parameter is set to `INHERITED`.\
            \ In that case the value is taken from the environment-wide setting."
          enum:
          - ENABLED
          - DISABLED
          example: DISABLED
          readOnly: true
          type: string
        effectiveVersion:
          description: "The actual version to which the OneAgent must be updated.\
            \ \n\nApplicable only if the **setting** parameter is set to `INHERITED`.\
            \ In that case the value is taken from the environment-wide setting."
          example: 1.181.0
          readOnly: true
          type: string
      required:
      - setting
      type: object
    OneAgentHostGroupConfig:
      description: Configuration of OneAgent in a host group.
      example:
        id: HOST_GROUP-0123456789ABCDE
        autoUpdateConfig:
          metadata:
            currentConfigurationVersions:
            - 1.0.4
            - "1.23"
            configurationVersions:
            - 4
            - 2
            clusterVersion: 1.192.1
          effectiveVersion: 1.181.0
          id: HOST_GROUP-0123456789ABCDE
          effectiveSetting: DISABLED
          version: 1.181.0
          setting: DISABLED
      properties:
        id:
          description: The Dynatrace entity ID of the host group.
          example: HOST_GROUP-0123456789ABCDE
          readOnly: true
          type: string
        autoUpdateConfig:
          $ref: '#/components/schemas/HostGroupAutoUpdateConfig'
      type: object
    AliasQueue:
      description: Define an alias for a so called base queue. This can either be
        a local queue owned by this queue manager, a local definition of a remote
        queue or a cluster queue visible but owned by another queue manager. The alias
        can be made visible in one or more clusters.
      properties:
        aliasQueue:
          description: The name of the alias queue.
          maxLength: 500
          minLength: 1
          type: string
        baseQueue:
          description: The name of the base queue, which the alias queue should point
            to.
          maxLength: 500
          minLength: 1
          type: string
        clusterVisibility:
          description: The alias queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
            The queue manager must be part of these clusters.
          items:
            type: string
          maxItems: 10000
          minItems: 0
          type: array
      required:
      - aliasQueue
      - baseQueue
      - clusterVisibility
      type: object
    ClusterQueue:
      description: This local queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
        The queue manager must be part of these clusters.
      properties:
        localQueue:
          description: The name of the local queue.
          maxLength: 500
          minLength: 1
          type: string
        clusterVisibility:
          description: The local queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
            The queue manager must be part of these clusters.
          items:
            type: string
          maxItems: 10000
          minItems: 1
          type: array
      required:
      - clusterVisibility
      - localQueue
      type: object
    QueueManager:
      description: Parameters of the queue manager.
      example:
        name: name of a queue manager
        clusters:
        - name of a cluster this queue manager is part of
        - another name of a cluster this queue manager is part of
        aliasQueues:
        - aliasQueue: alias queue name
          baseQueue: real queue name
          clusterVisibility:
          - name of a cluster this alias should be visible in
          - another cluster
        remoteQueues:
        - localQueue: local definition of the remote queue
          remoteQueue: remote queue name
          remoteQueueManager: remote queue manager name
          clusterVisibility:
          - name of a cluster this local definition of the remote queue should be
            visible in
          - another cluster
        clusterQueues:
        - localQueue: name of a local queue
          clusterVisibility:
          - name of a cluster this local queue should be visible in
          - another cluster
      properties:
        name:
          description: The name of the queue manager.
          maxLength: 500
          minLength: 1
          type: string
        clusters:
          description: The queue manager will have access to all cluster visible queues
            in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
          items:
            type: string
          maxItems: 10000
          minItems: 0
          type: array
        aliasQueues:
          description: The list of alias queues in the queue manager.
          items:
            $ref: '#/components/schemas/AliasQueue'
          maxItems: 10000
          minItems: 0
          type: array
        remoteQueues:
          description: The list of remote queues in the queue manager.
          items:
            $ref: '#/components/schemas/RemoteQueue'
          maxItems: 10000
          minItems: 0
          type: array
        clusterQueues:
          description: The list of cluster queues in the queue manager.
          items:
            $ref: '#/components/schemas/ClusterQueue'
          maxItems: 10000
          minItems: 0
          type: array
      required:
      - aliasQueues
      - clusterQueues
      - clusters
      - name
      - remoteQueues
      type: object
    RemoteQueue:
      description: Define a local definition of a remote queue owned by another queue
        manager. The local definition can be made visible in one or more clusters.
      properties:
        localQueue:
          description: The name of the local definition of the remote queue.
          maxLength: 500
          minLength: 1
          type: string
        remoteQueue:
          description: The name of the remote queue.
          maxLength: 500
          minLength: 1
          type: string
        remoteQueueManager:
          description: The name of the remote queue manager.
          maxLength: 500
          minLength: 1
          type: string
        clusterVisibility:
          description: The local definition of the remote queue is visible in these
            [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
            The queue manager must be part of these clusters.
          items:
            type: string
          maxItems: 10000
          minItems: 0
          type: array
      required:
      - clusterVisibility
      - localQueue
      - remoteQueue
      - remoteQueueManager
      type: object
    IbmMQImsEntryQueue:
      description: Ibm MQ queue which is an entrypoint to IMS.
      example:
        queueManagerName: MyQueueManagerName
        queueName: MyQueueName
      properties:
        id:
          description: The ID of the IMS entry queue.
          example: 12345678-abcd-1234-abcd-1234567890ab
          format: uuid
          type: string
        queueManagerName:
          description: The name of the queue manager.
          maxLength: 500
          minLength: 1
          type: string
        queueName:
          description: The name of the queue.
          maxLength: 500
          minLength: 1
          type: string
      required:
      - queueManagerName
      - queueName
      type: object
    LogSourceFilter:
      description: "Configuration of the log filter for a custom log metric. \n\n\
        If several criteria are specified, the AND logic applies."
      properties:
        pathDefinitions:
          description: "A list of filtering criteria for log path. \n\nIf several\
            \ criteria are specified, the OR logic applies."
          items:
            $ref: '#/components/schemas/PathDefinition'
          type: array
        sourceEntities:
          description: "A list of Dynatrace entities, where the log can originate\
            \ from. Specify Dynatrace entity IDs here. \n\n Allowed types of entities\
            \ are `PROCESS_GROUP` and `PROCESS_GROUP_INSTANCE`. You can't mix entity\
            \ types. \n\nIf several entities are specified, the OR logic applies.\
            \ \n\nThis field is mutually exclusive with the **osTypes** field."
          items:
            type: string
          type: array
        hostFilters:
          description: "A list of hosts, where the log can originate from. Specify\
            \ Dynatrace entity IDs here. \n\nIf several hosts are specified, the OR\
            \ logic applies."
          items:
            type: string
          type: array
        osTypes:
          description: "A list of operating system types, where the log can originate\
            \ from. \n\nIf set, **only OS logs** are included in the result. \n\n\
            If several OS are specified, the OR logic applies. \n\nThis field is mutually\
            \ exclusive with the **sourceEntities** field."
          items:
            enum:
            - AIX
            - DARWIN
            - HPUX
            - LINUX
            - SOLARIS
            - WINDOWS
            - ZOS
            type: string
          maxItems: 1
          minItems: 0
          type: array
      type: object
    PathDefinition:
      description: A filtering criterion for log path.
      properties:
        definition:
          description: "The path to the required log path. \n\n If the **type** is\
            \ set to `WILDCARD`, it may contain wildcard characters (`*`)."
          example: /var/log/sample.log
          minLength: 1
          type: string
        type:
          description: 'The type of the log path **definition**: fixed or an expression
            with wildcards.'
          enum:
          - FIXED
          - WILDCARD
          example: FIXED
          type: string
      required:
      - definition
      - type
      type: object
    DimensionalManagementZoneConditionDto:
      description: List of the conditions that have to match.
      properties:
        conditionType:
          description: The type of the condition.
          enum:
          - DIMENSION
          - LOG_FILE_NAME
          - METRIC_KEY
          type: string
        ruleMatcher:
          description: In what way the actual values are compared to the expected
            ones.
          enum:
          - BEGINS_WITH
          - EQUALS
          type: string
        key:
          description: The main value that is compared. For dimensions, this is the
            key.
          type: string
        value:
          description: The dimension value. For types other than dimension this must
            be null.
          type: string
      required:
      - conditionType
      - key
      - ruleMatcher
      type: object
    DimensionalManagementZoneRuleDto:
      properties:
        enabled:
          description: Whether or not this rule is enabled.
          type: boolean
        appliesTo:
          description: Target of the rule.
          enum:
          - ANY
          - LOG
          - METRIC
          type: string
        conditions:
          description: List of the conditions that have to match.
          items:
            $ref: '#/components/schemas/DimensionalManagementZoneConditionDto'
          type: array
      required:
      - appliesTo
      - conditions
      - enabled
      type: object
    ManagementZone:
      description: The configuration of the management zone. It defines how the management
        zone applies.
      example:
        name: sampleManagementZone
        rules:
        - type: SERVICE
          enabled: true
          propagationTypes:
          - SERVICE_TO_HOST_LIKE
          conditions:
          - key:
              attribute: SERVICE_DATABASE_NAME
            comparisonInfo:
              type: STRING
              operator: BEGINS_WITH
              value: sample
              negate: false
              caseSensitive: false
          - key:
              attribute: SERVICE_WEB_SERVER_NAME
            comparisonInfo:
              type: STRING
              operator: EXISTS
              negate: false
          - key:
              attribute: PROCESS_GROUP_CUSTOM_METADATA
              type: PROCESS_CUSTOM_METADATA_KEY
              dynamicKey:
                source: KUBERNETES
                key: kubernetes.io/limit-ranger
            comparisonInfo:
              type: STRING
              operator: BEGINS_WITH
              value: sample
              negate: false
              caseSensitive: false
        dimensionalRules:
        - enabled: true
          appliesTo: METRIC
          conditions:
          - conditionType: DIMENSION
            ruleMatcher: EQUALS
            key: alwaysRequired
            value: requiredForDimension_forbiddenForMetricKeyAndLogFileName
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the management zone.
          example: "123456"
          type: string
        name:
          description: The name of the management zone.
          maxLength: 100
          minLength: 1
          type: string
        rules:
          description: "A list of rules for management zone usage. \n\nEach rule is\
            \ evaluated independently of all other rules."
          items:
            $ref: '#/components/schemas/ManagementZoneRule'
          maxItems: 150
          minItems: 0
          type: array
        dimensionalRules:
          description: "A list of dimensional data rules for management zone usage.\
            \ \n\nEach rule is evaluated independently of all other rules."
          items:
            $ref: '#/components/schemas/DimensionalManagementZoneRuleDto'
          maxItems: 150
          minItems: 0
          type: array
      required:
      - name
      type: object
    ManagementZoneRule:
      description: "The rule of the management zone usage. It defines how the management\
        \ zone applies. \n\nEach rule is evaluated independently of all other rules."
      properties:
        type:
          description: The type of Dynatrace entities the management zone can be applied
            to.
          enum:
          - APPMON_SERVER
          - APPMON_SYSTEM_PROFILE
          - AWS_ACCOUNT
          - AWS_APPLICATION_LOAD_BALANCER
          - AWS_AUTO_SCALING_GROUP
          - AWS_CLASSIC_LOAD_BALANCER
          - AWS_NETWORK_LOAD_BALANCER
          - AWS_RELATIONAL_DATABASE_SERVICE
          - AZURE
          - BROWSER_MONITOR
          - CLOUD_APPLICATION
          - CLOUD_APPLICATION_NAMESPACE
          - CLOUD_FOUNDRY_FOUNDATION
          - CUSTOM_APPLICATION
          - CUSTOM_DEVICE
          - CUSTOM_DEVICE_GROUP
          - DATA_CENTER_SERVICE
          - ENTERPRISE_APPLICATION
          - ESXI_HOST
          - EXTERNAL_MONITOR
          - HOST
          - HOST_GROUP
          - HTTP_MONITOR
          - KUBERNETES_CLUSTER
          - MOBILE_APPLICATION
          - OPENSTACK_ACCOUNT
          - PROCESS_GROUP
          - SERVICE
          - WEB_APPLICATION
          type: string
        enabled:
          description: The rule is enabled (`true`) or disabled (`false`).
          type: boolean
        propagationTypes:
          description: "How to apply the management zone to underlying entities: \n\
            \n* `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services.\
            \ \n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups\
            \ of matching services. \n* `PROCESS_GROUP_TO_HOST`: Apply to underlying\
            \ hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`: Apply\
            \ to all services provided by matching process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`:\
            \ Apply to processes running on matching hosts. \n* `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`:\
            \ Apply to custom devices in matching custom device groups. \n* `AZURE_TO_PG`:\
            \ Apply to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`:\
            \ Apply to services provided by matching Azure entities."
          items:
            enum:
            - AZURE_TO_PG
            - AZURE_TO_SERVICE
            - CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE
            - HOST_TO_PROCESS_GROUP_INSTANCE
            - PROCESS_GROUP_TO_HOST
            - PROCESS_GROUP_TO_SERVICE
            - SERVICE_TO_HOST_LIKE
            - SERVICE_TO_PROCESS_GROUP_LIKE
            type: string
          type: array
        conditions:
          description: "A list of matching rules for the management zone. \n\nThe\
            \ management zone applies only if **all** conditions are fulfilled."
          items:
            $ref: '#/components/schemas/EntityRuleEngineCondition'
          maxItems: 30
          minItems: 1
          type: array
      required:
      - conditions
      - enabled
      - type
      type: object
    ColumnDefinition:
      description: Definition of numeric column.
      discriminator:
        propertyName: type
      properties:
        name:
          minLength: 1
          type: string
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `CUSTOM` -> CustomColumnDefinition\
            \ \n* `JSON` -> JsonColumnDefinition \n"
          enum:
          - CUSTOM
          - JSON
          type: string
      required:
      - name
      - type
      type: object
    CustomColumnDefinition:
      allOf:
      - $ref: '#/components/schemas/ColumnDefinition'
      - $ref: '#/components/schemas/CustomColumnDefinition_allOf'
      description: Definition of a custom column.
      required:
      - name
      - prefix
      - suffix
      - type
      type: object
    JsonColumnDefinition:
      allOf:
      - $ref: '#/components/schemas/ColumnDefinition'
      description: Definition of a JSON column.
      required:
      - type
      type: object
    LogMetricConfig:
      description: Custom log metric definition.
      example:
        metricKey: calc:log.metric
        active: true
        displayName: Sample metric
        unit: HOUR
        unitDisplayName: ""
        searchString: '"memory fault"'
        metricValueType: OCCURRENCES
        logSourceFilters:
        - pathDefinitions:
          - definition: /var/log/sample.log
            type: FIXED
          sourceEntities:
          - PROCESS_GROUP_INSTANCE-63FC6E7C73DC893F
          hostFilters:
          - HOST-066703AD79C38DB5
          osTypes: []
      properties:
        metricKey:
          description: "The unique key of the metric. \n\nThe key must have the `calc:log.`\
            \ prefix."
          example: calc:log.metric
          minLength: 1
          type: string
        active:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
        displayName:
          description: The name of the metric, displayed in the UI.
          minLength: 1
          type: string
        unit:
          description: The unit of the metric.
          enum:
          - BIT
          - BIT_PER_HOUR
          - BIT_PER_MINUTE
          - BIT_PER_SECOND
          - BYTE
          - BYTE_PER_HOUR
          - BYTE_PER_MINUTE
          - BYTE_PER_SECOND
          - CORES
          - COUNT
          - DAY
          - DECIBEL_MILLI_WATT
          - GIBI_BYTE
          - GIGA
          - GIGA_BYTE
          - HOUR
          - KIBI_BYTE
          - KIBI_BYTE_PER_HOUR
          - KIBI_BYTE_PER_MINUTE
          - KIBI_BYTE_PER_SECOND
          - KILO
          - KILO_BYTE
          - KILO_BYTE_PER_HOUR
          - KILO_BYTE_PER_MINUTE
          - KILO_BYTE_PER_SECOND
          - MEBI_BYTE
          - MEBI_BYTE_PER_HOUR
          - MEBI_BYTE_PER_MINUTE
          - MEBI_BYTE_PER_SECOND
          - MEGA
          - MEGA_BYTE
          - MEGA_BYTE_PER_HOUR
          - MEGA_BYTE_PER_MINUTE
          - MEGA_BYTE_PER_SECOND
          - MICRO_SECOND
          - MILLI_CORES
          - MILLI_SECOND
          - MILLI_SECOND_PER_MINUTE
          - MINUTE
          - MONTH
          - NANO_SECOND
          - NANO_SECOND_PER_MINUTE
          - NOT_APPLICABLE
          - PERCENT
          - PER_HOUR
          - PER_MINUTE
          - PER_SECOND
          - PIXEL
          - PROMILLE
          - RATIO
          - SECOND
          - STATE
          - UNSPECIFIED
          - WEEK
          - YEAR
          type: string
        unitDisplayName:
          description: "The display name of the unit. \n\n Only applicable if the\
            \ **unit** is set to `UNSPECIFIED`."
          type: string
        searchString:
          description: "The pattern to look for in logs. \n\n Use the [Dynatrace search\
            \ query language](https://www.dynatrace.com/support/help/shortlink/log-viewer#search-for-text-patterns-in-log-files)\
            \ to specify it. Quotes must be escaped. \n\n To return all results, leave\
            \ the field blank."
          example: prefix1* OR prefix2*
          type: string
        metricValueType:
          description: The type of the metric data points calculation. For now the
            only allowed value is `OCCURRENCES`.
          enum:
          - FP_COLUMN_AVG
          - FP_COLUMN_COUNT
          - FP_COLUMN_MAX
          - FP_COLUMN_MIN
          - FP_COLUMN_SUM
          - FP_COLUMN_TOP_X_AVG
          - FP_COLUMN_TOP_X_COUNT
          - FP_COLUMN_TOP_X_MAX
          - FP_COLUMN_TOP_X_MIN
          - FP_COLUMN_TOP_X_SUM
          - INT_COLUMN_AVG
          - INT_COLUMN_COUNT
          - INT_COLUMN_MAX
          - INT_COLUMN_MIN
          - INT_COLUMN_SUM
          - INT_COLUMN_TOP_X_AVG
          - INT_COLUMN_TOP_X_COUNT
          - INT_COLUMN_TOP_X_MAX
          - INT_COLUMN_TOP_X_MIN
          - INT_COLUMN_TOP_X_SUM
          - OCCURRENCES
          example: OCCURRENCES
          type: string
        columnDefiningValue:
          $ref: '#/components/schemas/ColumnDefinition'
        logSourceFilters:
          description: "A list of filters to define the logs to look into. \n\n If\
            \ several filters are specified, the OR logic applies."
          items:
            $ref: '#/components/schemas/LogSourceFilter'
          minItems: 1
          type: array
      required:
      - displayName
      - logSourceFilters
      - metricKey
      - metricValueType
      - searchString
      - unit
      type: object
    CalculatedMobileMetric:
      description: Definition of the calculated metric for mobile or custom app.
      example:
        enabled: true
        name: MyMetric
        metricKey: calc:apps.mobile.mymetric
        applicationIdentifier: MOBILE_APPLICATION-1234
        metricType: USER_ACTION_DURATION
        userActionFilter:
          hasHttpError: true
          country: GEOLOCATION-1234
          osVersion: OS-1234
        dimensions:
        - dimension: GEOLOCATION
          topX: 20
      properties:
        applicationIdentifier:
          description: The Dynatrace entity ID of the application to which the metric
            belongs.
          type: string
        name:
          description: The name of the metric, displayed in the UI.
          maxLength: 100
          minLength: 0
          type: string
        metricKey:
          description: "The unique key of the metric. \n\n The key must have the `calc:apps`\
            \ prefix."
          pattern: ^calc:apps\..*
          type: string
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
        metricType:
          description: The type of the metric.
          enum:
          - REPORTED_ERROR_COUNT
          - USER_ACTION_DURATION
          - WEB_REQUEST_COUNT
          - WEB_REQUEST_ERROR_COUNT
          type: string
        dimensions:
          description: A list of metric dimensions.
          items:
            $ref: '#/components/schemas/CalculatedMobileMetricDimension'
          maxItems: 2
          minItems: 0
          type: array
        userActionFilter:
          $ref: '#/components/schemas/CalculatedMobileMetricUserActionFilter'
      required:
      - applicationIdentifier
      - enabled
      - metricKey
      - metricType
      - name
      type: object
    CalculatedMobileMetricDimension:
      description: Dimension of the calculated mobile metric.
      properties:
        topX:
          description: The number of top values to be calculated.
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        dimension:
          description: The dimension of the metric.
          enum:
          - APP_VERSION
          - DEVICE
          - ERROR_CONTEXT
          - GEOLOCATION
          - MANUFACTURER
          - OS
          type: string
      required:
      - dimension
      - topX
      type: object
    CalculatedMobileMetricUserActionFilter:
      description: User actions filter of the calculated metric for mobile or custom
        app.
      properties:
        hasReportedError:
          description: "The error status of the actions to be included in the metric\
            \ calculation: \n\n* `true`: Only actions with reported errors are included.\
            \ \n\n * `false`: All actions are included."
          type: boolean
        hasHttpError:
          description: "The HTTP error status of the actions to be included in the\
            \ metric calculation: \n\n* `true`: Only actions with HTTP errors are\
            \ included. \n\n * `false`: All actions are included."
          type: boolean
        userActionName:
          description: "Only actions with this name are included in the metric calculation.\
            \ \n\n The EQUALS operator applies."
          type: string
        appVersion:
          description: "Only actions coming from this app version are included in\
            \ the metric calculation. \n\n The EQUALS operator applies."
          type: string
        device:
          description: "Only actions coming from this app version are included in\
            \ the metric calculation. \n\n The EQUALS operator applies."
          type: string
        manufacturer:
          description: "Only actions coming from devices of this manufacturer are\
            \ included in the metric calculation. \n\n The EQUALS operator applies."
          type: string
        apdex:
          description: Only actions with the specified Apdex score are included in
            the metric calculation.
          enum:
          - Frustrated
          - Satisfied
          - Tolerating
          - Unknown
          type: string
        osFamily:
          description: "Only actions coming from this OS family are included in the\
            \ metric calculation. \n\n Specify the OS ID here."
          type: string
        osVersion:
          description: "Only actions coming from this OS version are included in the\
            \ metric calculation. \n\n Specify the OS ID here."
          type: string
        city:
          description: "Only actions of users from this city are included in the metric\
            \ calculation. \n\n Specify geolocation ID here."
          type: string
        continent:
          description: "Only actions of users from this continent are included in\
            \ the metric calculation. \n\n Specify geolocation ID here."
          type: string
        country:
          description: "Only actions of users from this country are included in the\
            \ metric calculation. \n\n Specify geolocation ID here."
          type: string
        region:
          description: "Only actions of users from this region are included in the\
            \ metric calculation. \n\n Specify geolocation ID here."
          type: string
        actionDurationFromMilliseconds:
          description: Only actions with a duration more than or equal to this value
            (in milliseconds) are included in the metric calculation.
          format: int32
          type: integer
        actionDurationToMilliseconds:
          description: Only actions with a duration less than or equal to this value
            (in milliseconds) are included in the metric calculation.
          format: int32
          type: integer
        carrier:
          description: Only actions coming from this carrier type are included in
            the metric calculation.
          type: string
        connectionType:
          description: Only actions coming from this connection type are included
            in the metric calculation.
          enum:
          - LAN
          - MOBILE
          - OFFLINE
          - UNKNOWN
          - WIFI
          type: string
        networkTechnology:
          description: Filter by network technology
          type: string
        isp:
          description: "Only actions coming from this internet service provider are\
            \ included in the metric calculation. \n\n  The EQUALS operator applies."
          type: string
        orientation:
          description: Only actions coming from devices with this display orientation
            are included in the metric calculation.
          enum:
          - LANDSCAPE
          - PORTRAIT
          - UNKNOWN
          type: string
        resolution:
          description: Only actions coming from devices with this display resolution
            are included in the metric calculation.
          enum:
          - CGA
          - DCI2K
          - DCI4K
          - DVGA
          - FHD
          - FWVGA
          - FWXGA
          - GHDPlus
          - HD
          - HQVGA
          - HQVGA2
          - HSXGA
          - HUXGA
          - HVGA
          - HXGA
          - NTSC
          - PAL
          - QHD
          - QQVGA
          - QSXGA
          - QUXGA
          - QVGA
          - QWXGA
          - QXGA
          - SVGA
          - SXGA
          - SXGAMinus
          - SXGAPlus
          - UGA
          - UHD16K
          - UHD4K
          - UHD8K
          - UHDPlus
          - UNKNOWN
          - UWQHD
          - UXGA
          - VGA
          - WHSXGA
          - WHUXGA
          - WHXGA
          - WQSXGA
          - WQUXGA
          - WQVGA
          - WQVGA2
          - WQVGA3
          - WQXGA
          - WQXGA2
          - WSVGA
          - WSVGA2
          - WSXGA
          - WSXGAPlus
          - WUXGA
          - WVGA
          - WVGA2
          - WXGA
          - WXGA2
          - WXGA3
          - WXGAPlus
          - XGA
          - XGAPLUS
          - _1280x854
          - nHD
          - qHD
          type: string
      type: object
    CalculatedMobileMetricUpdate:
      description: Update of the calculated mobile or custom metric.
      example:
        enabled: true
      properties:
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
      type: object
    RumDimensionDefinition:
      description: Dimension of the calculated RUM metrics.
      properties:
        topX:
          description: The number of top values to be calculated.
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        dimension:
          description: The dimension of the metric.
          enum:
          - ApdexType
          - Browser
          - ErrorContext
          - ErrorOrigin
          - ErrorType
          - GeoLocation
          - StringProperty
          - UserActionType
          type: string
        propertyKey:
          description: "The key of the user action property. \n\n Only applicable\
            \ for the `StringProperty` dimension."
          type: string
      required:
      - dimension
      - topX
      type: object
    RumMetric:
      description: Descriptor of the calculated RUM metric.
      example:
        enabled: true
        name: MyMetric
        metricKey: calc:apps.web.mymetric
        metricDefinition:
          metric: UserActionDuration
        applicationIdentifier: APPLICATION-1234
        userActionFilter:
          loadAction: true
          country: GEOLOCATION-1234
          browserType: BROWSER-1234
        dimensions:
        - dimension: GeoLocation
          topX: 20
      properties:
        applicationIdentifier:
          description: The Dynatrace entity ID of the application to which the metric
            belongs.
          type: string
        name:
          description: The displayed name of the metric.
          maxLength: 100
          minLength: 0
          type: string
        metricKey:
          description: "The unique key of the metric. \n\n The key must have the `calc:apps`\
            \ prefix."
          type: string
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
        metricDefinition:
          $ref: '#/components/schemas/RumMetricDefinition'
        dimensions:
          description: A list of metric dimensions.
          items:
            $ref: '#/components/schemas/RumDimensionDefinition'
          maxItems: 2
          minItems: 0
          type: array
        userActionFilter:
          $ref: '#/components/schemas/UserActionFilter'
      required:
      - applicationIdentifier
      - enabled
      - metricDefinition
      - metricKey
      - name
      type: object
    RumMetricDefinition:
      description: Definition of the RUM metric.
      properties:
        metric:
          description: The type of the RUM metric.
          enum:
          - Apdex
          - ApplicationCache
          - Callback
          - DNSLookup
          - DOMComplete
          - DOMContentLoaded
          - DOMInteractive
          - DoubleProperty
          - ErrorCount
          - FirstContentfulPaint
          - FirstInputDelay
          - FirstInputStart
          - FirstPaint
          - HTMLDownloaded
          - LargestContentfulPaint
          - LoadEventEnd
          - LoadEventStart
          - LongProperty
          - NavigationStart
          - OnDOMContentLoaded
          - OnLoad
          - Processing
          - RedirectTime
          - Request
          - RequestStart
          - Response
          - SecureConnect
          - SpeedIndex
          - TCPConnect
          - TimeToFirstByte
          - UserActionDuration
          - VisuallyComplete
          type: string
        propertyKey:
          description: "The key of the user action property. \n\n Only applicable\
            \ for `DoubleProperty` and `LongProperty` metrics."
          type: string
      required:
      - metric
      type: object
    UserActionFilter:
      description: Filter of the calculated RUM metric.
      properties:
        actionDurationFromMilliseconds:
          description: Only actions with a duration more than or equal to this value
            (in milliseconds) are included in the metric calculation.
          format: int32
          type: integer
        actionDurationToMilliseconds:
          description: Only actions with a duration less than or equal to this value
            (in milliseconds) are included in the metric calculation.
          format: int32
          type: integer
        loadAction:
          description: "The status of load actions in the metric calculation: \n\n\
            * `true`: Only load actions are included. \n* `false`: All actions are\
            \ included."
          type: boolean
        xhrAction:
          description: "The status of XHR actions in the metric calculation: \n\n\
            * `true`: Only XHR actions are included. \n* `false`: All actions are\
            \ included."
          type: boolean
        customAction:
          description: "The status of custom actions in the metric calculation: \n\
            \n* `true`: Only custom actions are included. \n* `false`: All actions\
            \ are included."
          type: boolean
        apdex:
          description: Only actions with the specified Apdex score are included in
            the metric calculation.
          enum:
          - Frustrated
          - Satisfied
          - Tolerating
          - Unknown
          type: string
        domain:
          description: "Only user actions coming from the specified domain are included\
            \ in the metric calculation. \n\n The EQUALS operator applies."
          type: string
        userActionName:
          description: "Only actions with this name are included in the metric calculation.\
            \ \n\n The EQUALS operator applies."
          type: string
        realUser:
          description: "The status of actions coming from real users in the metric\
            \ calculation: \n\n* `true`: Only actions from real users are included.\
            \ \n* `false`: All actions are included."
          type: boolean
        robot:
          description: "The status of actions coming from robots in the metric calculation:\
            \ \n\n* `true`: Only actions from robots are included. \n* `false`: All\
            \ actions are included."
          type: boolean
        synthetic:
          description: "The status of actions coming from synthetic monitors in the\
            \ metric calculation: \n\n* `true`: Only actions from synthetic monitors\
            \ are included. \n* `false`: All actions are included."
          type: boolean
        browserFamily:
          description: "Only user actions coming from the specified browser family\
            \ are included in the metric calculation.  \n\n The EQUALS operator applies."
          type: string
        browserType:
          description: "Only user actions coming from the specified browser type are\
            \ included in the metric calculation.  \n\n The EQUALS operator applies."
          type: string
        browserVersion:
          description: "Only user actions coming from the specified browser version\
            \ are included in the metric calculation.  \n\n The EQUALS operator applies."
          type: string
        hasCustomErrors:
          description: "The custom error status of the actions to be included in the\
            \ metric calculation: \n\n* `true`: Only actions with custom errors are\
            \ included. \n* `false`: All actions are included."
          type: boolean
        hasAnyError:
          description: "The error status of the actions to be included in the metric\
            \ calculation: \n\n* `true`: Only actions that have any errors are included.\
            \ \n* `false`: All actions are included."
          type: boolean
        hasHttpErrors:
          description: "The HTTP error status of the actions to be included in the\
            \ metric calculation: \n\n* `true`: Only actions with HTTP errors are\
            \ included. \n* `false`: All actions are included."
          type: boolean
        hasJavascriptErrors:
          description: "The JavaScript error status of the actions to be included\
            \ in the metric calculation: \n\n* `true`: Only actions with JavaScript\
            \ errors are included. \n* `false`: All actions are included."
          type: boolean
        city:
          description: "Only actions of users from this city are included in the metric\
            \ calculation. \n\n Specify geolocation ID here."
          type: string
        continent:
          description: "Only actions of users from this continent are included in\
            \ the metric calculation. \n\n Specify geolocation ID here."
          type: string
        country:
          description: "Only actions of users from this country are included in the\
            \ metric calculation. \n\n Specify geolocation ID here."
          type: string
        region:
          description: "Only actions of users from this region are included in the\
            \ metric calculation. \n\n Specify geolocation ID here."
          type: string
        ip:
          description: "Only actions coming from this IP address are included in the\
            \ metric calculation. \n\n  The EQUALS operator applies."
          type: string
        ipV6Traffic:
          description: "The IPv6 status of the actions to be included in the metric\
            \ calculation: \n\n* `true`: Only actions coming from IPv6 are included.\
            \ \n* `false`: All actions are included."
          type: boolean
        osFamily:
          description: "Only actions coming from this OS family are included in the\
            \ metric calculation. \n\n Specify the OS ID here."
          type: string
        osVersion:
          description: "Only actions coming from this OS version are included in the\
            \ metric calculation. \n\n Specify the OS ID here."
          type: string
        httpErrorCode:
          description: The HTTP error status code of the actions to be included in
            the metric calculation.
          format: int32
          type: integer
        httpPath:
          description: The request path that has been determined to be the origin
            of an HTTP error of the actions to be included in the metric calculation.
          type: string
        customErrorType:
          description: The custom error type of the actions to be included in the
            metric calculation.
          type: string
        customErrorName:
          description: The custom error name of the actions to be included in the
            metric calculation.
          type: string
        userActionProperties:
          description: Only actions with the specified properties are included in
            the metric calculation.
          items:
            $ref: '#/components/schemas/UserActionPropertyFilter'
          maxItems: 10
          minItems: 0
          type: array
        targetViewName:
          description: "Only actions on the specified view are included in the metric\
            \ calculation. \n\n The EQUALS operator applies."
          type: string
      type: object
    UserActionPropertyFilter:
      description: User action property filter.
      properties:
        key:
          description: The key of the action property we're checking.
          type: string
        value:
          description: "Only actions that have this value in the specified property\
            \ are included in the metric calculation. \n\n Only applicable to string\
            \ values."
          type: string
        from:
          description: "Only actions that have a value greater than or equal to this\
            \ are included in the metric calculation. \n\n Only applicable to numerical\
            \ values."
          format: double
          type: number
        to:
          description: "Only actions that have a value less than or equal to this\
            \ are included in the metric calculation. \n\n Only applicable to numerical\
            \ values."
          format: double
          type: number
        matchType:
          description: "Specifies the match type of a string filter, e.g. using `Contains`\
            \ or `Equals`. \n\n Only applicable to string values."
          enum:
          - Contains
          - Equals
          type: string
      type: object
    RumMetricUpdate:
      description: The update of the calculated RUM metric.
      example:
        enabled: true
      properties:
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
      type: object
    BooleanComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/BooleanComparisonInfo_allOf'
      description: Comparison for `BOOLEAN` attributes.
      required:
      - comparison
      - negate
      type: object
    CalculatedMetricDefinition:
      description: The definition of a calculated service metric.
      properties:
        metric:
          description: The metric to be captured.
          enum:
          - CPU_TIME
          - DATABASE_CHILD_CALL_COUNT
          - DATABASE_CHILD_CALL_TIME
          - DISK_IO_TIME
          - EXCEPTION_COUNT
          - FAILED_REQUEST_COUNT
          - FAILED_REQUEST_COUNT_CLIENT
          - FAILURE_RATE
          - FAILURE_RATE_CLIENT
          - HTTP_4XX_ERROR_COUNT
          - HTTP_4XX_ERROR_COUNT_CLIENT
          - HTTP_5XX_ERROR_COUNT
          - HTTP_5XX_ERROR_COUNT_CLIENT
          - IO_TIME
          - LOCK_TIME
          - NETWORK_IO_TIME
          - NON_DATABASE_CHILD_CALL_COUNT
          - NON_DATABASE_CHILD_CALL_TIME
          - PROCESSING_TIME
          - REQUEST_ATTRIBUTE
          - REQUEST_COUNT
          - RESPONSE_TIME
          - RESPONSE_TIME_CLIENT
          - SUCCESSFUL_REQUEST_COUNT
          - SUCCESSFUL_REQUEST_COUNT_CLIENT
          - WAIT_TIME
          type: string
        requestAttribute:
          description: "The request attribute to be captured. \n\n Only applicable\
            \ when the **metric** parameter is set to `REQUEST_ATTRIBUTE`."
          type: string
      required:
      - metric
      type: object
    CalculatedServiceMetric:
      description: Descriptor of a calculated service metric.
      example:
        tsmMetricKey: calc:service.mymetric
        name: My Metric
        enabled: true
        metricDefinition:
          metric: CPU_TIME
        managementZones:
        - zone1
        unit: MICRO_SECOND
        conditions:
        - attribute: WEBREQUEST_URL_PATH
          comparisonInfo:
            type: STRING
            comparison: BEGINS_WITH
            value: /url_path
            negate: false
            caseSensitive: false
        dimensionDefinition:
          name: my dimension
          dimension: '{myPlaceholder}'
          placeholders:
          - name: myPlaceholder
            attribute: WEBREQUEST_URL_PATH
            kind: BEFORE_DELIMITER
            delimiterOrRegex: /booking
            normalization: ORIGINAL
            useFromChildCalls: "false"
          topX: 10
          topXDirection: DESCENDING
          topXAggregation: AVERAGE
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        tsmMetricKey:
          description: The key of the calculated service metric.
          maxLength: 200
          minLength: 0
          type: string
        name:
          description: The displayed name of the metric.
          maxLength: 200
          minLength: 0
          type: string
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
        metricDefinition:
          $ref: '#/components/schemas/CalculatedMetricDefinition'
        unit:
          description: The unit of the metric.
          enum:
          - BIT
          - BIT_PER_HOUR
          - BIT_PER_MINUTE
          - BIT_PER_SECOND
          - BYTE
          - BYTE_PER_HOUR
          - BYTE_PER_MINUTE
          - BYTE_PER_SECOND
          - CORES
          - COUNT
          - DAY
          - DECIBEL_MILLI_WATT
          - GIBI_BYTE
          - GIGA
          - GIGA_BYTE
          - HOUR
          - KIBI_BYTE
          - KIBI_BYTE_PER_HOUR
          - KIBI_BYTE_PER_MINUTE
          - KIBI_BYTE_PER_SECOND
          - KILO
          - KILO_BYTE
          - KILO_BYTE_PER_HOUR
          - KILO_BYTE_PER_MINUTE
          - KILO_BYTE_PER_SECOND
          - MEBI_BYTE
          - MEBI_BYTE_PER_HOUR
          - MEBI_BYTE_PER_MINUTE
          - MEBI_BYTE_PER_SECOND
          - MEGA
          - MEGA_BYTE
          - MEGA_BYTE_PER_HOUR
          - MEGA_BYTE_PER_MINUTE
          - MEGA_BYTE_PER_SECOND
          - MICRO_SECOND
          - MILLI_CORES
          - MILLI_SECOND
          - MILLI_SECOND_PER_MINUTE
          - MINUTE
          - MONTH
          - NANO_SECOND
          - NANO_SECOND_PER_MINUTE
          - NOT_APPLICABLE
          - PERCENT
          - PER_HOUR
          - PER_MINUTE
          - PER_SECOND
          - PIXEL
          - PROMILLE
          - RATIO
          - SECOND
          - STATE
          - UNSPECIFIED
          - WEEK
          - YEAR
          type: string
        unitDisplayName:
          description: "The display name of the metric's unit. \n\n Only applicable\
            \ when the **unit** parameter is set to `UNSPECIFIED`."
          type: string
        entityId:
          description: "Restricts the metric usage to the specified service. \n\n\
            \ This field is mutually exclusive with the **managementZones** field."
          type: string
        managementZones:
          description: "Restricts the metric usage to specified management zones.\
            \ \n\n This field is mutually exclusive with the **entityId** field."
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        conditions:
          description: "The set of conditions for the metric usage. \n\n **All** the\
            \ specified conditions must be fulfilled to use the metric."
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        dimensionDefinition:
          $ref: '#/components/schemas/DimensionDefinition'
      required:
      - enabled
      - metricDefinition
      - name
      - tsmMetricKey
      - unit
      type: object
    ComparisonInfo:
      description: Type-specific comparison for attributes. The actual set of fields
        depends on the `type` of the comparison.
      discriminator:
        propertyName: type
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          type: object
        value:
          description: The value to compare to.
          type: object
        negate:
          description: Reverse the comparison **operator**. For example, it turns
            **equals** into **does not equal**.
          type: boolean
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `STRING` -> StringComparisonInfo\
            \ \n* `NUMBER` -> NumberComparisonInfo \n* `BOOLEAN` -> BooleanComparisonInfo\
            \ \n* `HTTP_METHOD` -> HttpMethodComparisonInfo \n* `STRING_REQUEST_ATTRIBUTE`\
            \ -> StringRequestAttributeComparisonInfo \n* `NUMBER_REQUEST_ATTRIBUTE`\
            \ -> NumberRequestAttributeComparisonInfo \n* `ZOS_CALL_TYPE` -> ZosComparisonInfo\
            \ \n* `IIB_INPUT_NODE_TYPE` -> IIBInputNodeTypeComparisonInfo \n* `ESB_INPUT_NODE_TYPE`\
            \ -> ESBInputNodeTypeComparisonInfo \n* `FAILED_STATE` -> FailedStateComparisonInfo\
            \ \n* `FLAW_STATE` -> FlawStateComparisonInfo \n* `FAILURE_REASON` ->\
            \ FailureReasonComparisonInfo \n* `HTTP_STATUS_CLASS` -> HttpStatusClassComparisonInfo\
            \ \n* `TAG` -> TagComparisonInfo \n* `FAST_STRING` -> FastStringComparisonInfo\
            \ \n* `SERVICE_TYPE` -> ServiceTypeComparisonInfo \n"
          enum:
          - BOOLEAN
          - ESB_INPUT_NODE_TYPE
          - FAILED_STATE
          - FAILURE_REASON
          - FAST_STRING
          - FLAW_STATE
          - HTTP_METHOD
          - HTTP_STATUS_CLASS
          - IIB_INPUT_NODE_TYPE
          - NUMBER
          - NUMBER_REQUEST_ATTRIBUTE
          - SERVICE_TYPE
          - STRING
          - STRING_REQUEST_ATTRIBUTE
          - TAG
          - ZOS_CALL_TYPE
          type: string
      required:
      - comparison
      - negate
      - type
      type: object
    Condition:
      description: A condition of a rule usage.
      properties:
        attribute:
          description: The attribute to be matched.
          enum:
          - ACTOR_SYSTEM
          - AKKA_ACTOR_CLASS_NAME
          - AKKA_ACTOR_MESSAGE_TYPE
          - AKKA_ACTOR_PATH
          - AZURE_FUNCTIONS_FUNCTION_NAME
          - AZURE_FUNCTIONS_SITE_NAME
          - CICS_PROGRAM_NAME
          - CICS_SYSTEM_ID
          - CICS_TASK_ID
          - CICS_TRANSACTION_ID
          - CICS_USER_ID
          - CPU_TIME
          - CTG_GATEWAY_URL
          - CTG_PROGRAM
          - CTG_SERVER_NAME
          - CTG_TRANSACTION_ID
          - CUSTOMSERVICE_CLASS
          - CUSTOMSERVICE_METHOD
          - DATABASE_CHILD_CALL_COUNT
          - DATABASE_CHILD_CALL_TIME
          - DATABASE_HOST
          - DATABASE_NAME
          - DATABASE_TYPE
          - DATABASE_URL
          - DISK_IO_TIME
          - ERROR_COUNT
          - ESB_APPLICATION_NAME
          - ESB_INPUT_TYPE
          - ESB_LIBRARY_NAME
          - ESB_MESSAGE_FLOW_NAME
          - EXCEPTION_CLASS
          - EXCEPTION_MESSAGE
          - FAILED_STATE
          - FAILURE_REASON
          - FLAW_STATE
          - HTTP_REQUEST_METHOD
          - HTTP_STATUS
          - HTTP_STATUS_CLASS
          - IMS_PROGRAM_NAME
          - IMS_TRANSACTION_ID
          - IMS_USER_ID
          - IO_TIME
          - LAMBDA_COLDSTART
          - LOCK_TIME
          - MESSAGING_DESTINATION_TYPE
          - MESSAGING_IS_TEMPORARY_QUEUE
          - MESSAGING_QUEUE_NAME
          - MESSAGING_QUEUE_VENDOR
          - NETWORK_IO_TIME
          - NON_DATABASE_CHILD_CALL_COUNT
          - NON_DATABASE_CHILD_CALL_TIME
          - PROCESS_GROUP_NAME
          - PROCESS_GROUP_TAG
          - REMOTE_ENDPOINT
          - REMOTE_METHOD
          - REMOTE_SERVICE_NAME
          - REQUEST_NAME
          - REQUEST_TYPE
          - RESPONSE_TIME
          - RESPONSE_TIME_CLIENT
          - RMI_CLASS
          - RMI_METHOD
          - SERVICE_DISPLAY_NAME
          - SERVICE_NAME
          - SERVICE_PORT
          - SERVICE_PUBLIC_DOMAIN_NAME
          - SERVICE_REQUEST_ATTRIBUTE
          - SERVICE_TAG
          - SERVICE_TYPE
          - SERVICE_WEB_APPLICATION_ID
          - SERVICE_WEB_CONTEXT_ROOT
          - SERVICE_WEB_SERVER_NAME
          - SERVICE_WEB_SERVICE_NAME
          - SERVICE_WEB_SERVICE_NAMESPACE
          - SUSPENSION_TIME
          - TOTAL_PROCESSING_TIME
          - WAIT_TIME
          - WEBREQUEST_QUERY
          - WEBREQUEST_RELATIVE_URL
          - WEBREQUEST_URL
          - WEBREQUEST_URL_HOST
          - WEBREQUEST_URL_PATH
          - WEBREQUEST_URL_PORT
          - WEBSERVICE_ENDPOINT
          - WEBSERVICE_METHOD
          - ZOS_CALL_TYPE
          type: string
        comparisonInfo:
          $ref: '#/components/schemas/ComparisonInfo'
      required:
      - attribute
      - comparisonInfo
      type: object
    DimensionDefinition:
      description: Parameters of a definition of a calculated service metric.
      properties:
        name:
          description: The name of the dimension.
          maxLength: 200
          minLength: 0
          type: string
        dimension:
          description: "The dimension value pattern. \n\n You can define custom placeholders\
            \ in the **placeholders** field and use them here."
          maxLength: 400
          minLength: 0
          type: string
        placeholders:
          description: The list of custom placeholders to be used in a dimension value
            pattern.
          items:
            $ref: '#/components/schemas/Placeholder'
          type: array
        topX:
          description: The number of top values to be calculated.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        topXDirection:
          description: How to calculate the **topX** values.
          enum:
          - ASCENDING
          - DESCENDING
          type: string
        topXAggregation:
          description: The aggregation of the dimension.
          enum:
          - AVERAGE
          - COUNT
          - MAX
          - MIN
          - OF_INTEREST_RATIO
          - OTHER_RATIO
          - SINGLE_VALUE
          - SUM
          type: string
      required:
      - dimension
      - name
      - topX
      - topXAggregation
      - topXDirection
      type: object
    ESBInputNodeTypeComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/ESBInputNodeTypeComparisonInfo_allOf'
      description: Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'.This
        model also inherits fields from the parent model ComparisonInfo.
      required:
      - comparison
      - negate
      type: object
    FailedStateComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/FailedStateComparisonInfo_allOf'
      description: Comparison for `FAILED_STATE` attributes.
      required:
      - comparison
      - negate
      type: object
    FailureReasonComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/FailureReasonComparisonInfo_allOf'
      description: Comparison for `FAILURE_REASON` attributes.
      required:
      - comparison
      - negate
      type: object
    FastStringComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/FastStringComparisonInfo_allOf'
      description: Comparison for `FAST_STRING` attributes.
      required:
      - comparison
      - negate
      type: object
    FlawStateComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/FlawStateComparisonInfo_allOf'
      description: Comparison for `FLAW_STATE` attributes.
      required:
      - comparison
      - negate
      type: object
    HttpMethodComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/HttpMethodComparisonInfo_allOf'
      description: Comparison for `HTTP_METHOD` attributes.
      required:
      - comparison
      - negate
      type: object
    HttpStatusClassComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/HttpStatusClassComparisonInfo_allOf'
      description: Comparison for `HTTP_STATUS_CLASS` attributes.
      required:
      - comparison
      - negate
      type: object
    IIBInputNodeTypeComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/ESBInputNodeTypeComparisonInfo_allOf'
      description: Comparison for `IIB_INPUT_NODE_TYPE` attributes.
      required:
      - comparison
      - negate
      type: object
    NumberComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/NumberComparisonInfo_allOf'
      description: Comparison for `NUMBER` attributes.
      required:
      - comparison
      - negate
      type: object
    NumberRequestAttributeComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/NumberRequestAttributeComparisonInfo_allOf'
      description: Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes, specifically
        of the generic **Number** type.
      required:
      - comparison
      - negate
      - requestAttribute
      type: object
    Placeholder:
      description: "The custom placeholder to be used as a naming value pattern. \n\
        \n It enables you to extract a request attribute value or other request attribute\
        \ and use it in the naming pattern."
      properties:
        name:
          description: The name of the placeholder. Use it in the naming pattern as
            `{name}`.
          type: string
        attribute:
          description: The attribute to extract from. You can only use attributes
            of the **string** type.
          enum:
          - ACTOR_SYSTEM
          - AKKA_ACTOR_CLASS_NAME
          - AKKA_ACTOR_MESSAGE_TYPE
          - AKKA_ACTOR_PATH
          - AZURE_FUNCTIONS_FUNCTION_NAME
          - AZURE_FUNCTIONS_SITE_NAME
          - CICS_PROGRAM_NAME
          - CICS_SYSTEM_ID
          - CICS_TASK_ID
          - CICS_TRANSACTION_ID
          - CICS_USER_ID
          - CPU_TIME
          - CTG_GATEWAY_URL
          - CTG_PROGRAM
          - CTG_SERVER_NAME
          - CTG_TRANSACTION_ID
          - CUSTOMSERVICE_CLASS
          - CUSTOMSERVICE_METHOD
          - DATABASE_CHILD_CALL_COUNT
          - DATABASE_CHILD_CALL_TIME
          - DATABASE_HOST
          - DATABASE_NAME
          - DATABASE_TYPE
          - DATABASE_URL
          - DISK_IO_TIME
          - ERROR_COUNT
          - ESB_APPLICATION_NAME
          - ESB_INPUT_TYPE
          - ESB_LIBRARY_NAME
          - ESB_MESSAGE_FLOW_NAME
          - EXCEPTION_CLASS
          - EXCEPTION_MESSAGE
          - FAILED_STATE
          - FAILURE_REASON
          - FLAW_STATE
          - HTTP_REQUEST_METHOD
          - HTTP_STATUS
          - HTTP_STATUS_CLASS
          - IMS_PROGRAM_NAME
          - IMS_TRANSACTION_ID
          - IMS_USER_ID
          - IO_TIME
          - LAMBDA_COLDSTART
          - LOCK_TIME
          - MESSAGING_DESTINATION_TYPE
          - MESSAGING_IS_TEMPORARY_QUEUE
          - MESSAGING_QUEUE_NAME
          - MESSAGING_QUEUE_VENDOR
          - NETWORK_IO_TIME
          - NON_DATABASE_CHILD_CALL_COUNT
          - NON_DATABASE_CHILD_CALL_TIME
          - PROCESS_GROUP_NAME
          - PROCESS_GROUP_TAG
          - REMOTE_ENDPOINT
          - REMOTE_METHOD
          - REMOTE_SERVICE_NAME
          - REQUEST_NAME
          - REQUEST_TYPE
          - RESPONSE_TIME
          - RESPONSE_TIME_CLIENT
          - RMI_CLASS
          - RMI_METHOD
          - SERVICE_DISPLAY_NAME
          - SERVICE_NAME
          - SERVICE_PORT
          - SERVICE_PUBLIC_DOMAIN_NAME
          - SERVICE_REQUEST_ATTRIBUTE
          - SERVICE_TAG
          - SERVICE_TYPE
          - SERVICE_WEB_APPLICATION_ID
          - SERVICE_WEB_CONTEXT_ROOT
          - SERVICE_WEB_SERVER_NAME
          - SERVICE_WEB_SERVICE_NAME
          - SERVICE_WEB_SERVICE_NAMESPACE
          - SUSPENSION_TIME
          - TOTAL_PROCESSING_TIME
          - WAIT_TIME
          - WEBREQUEST_QUERY
          - WEBREQUEST_RELATIVE_URL
          - WEBREQUEST_URL
          - WEBREQUEST_URL_HOST
          - WEBREQUEST_URL_PATH
          - WEBREQUEST_URL_PORT
          - WEBSERVICE_ENDPOINT
          - WEBSERVICE_METHOD
          - ZOS_CALL_TYPE
          type: string
        kind:
          description: "The type of extraction. \n\n Defines either usage of regular\
            \ expression (`regex`) or the position of request attribute value to be\
            \ extracted. \n\nWhen the **attribute** is `SERVICE_REQUEST_ATTRIBUTE`\
            \ attribute and **aggregation** is `COUNT`, needs to be set to `ORIGINAL_TEXT`"
          enum:
          - AFTER_DELIMITER
          - BEFORE_DELIMITER
          - BETWEEN_DELIMITER
          - ORIGINAL_TEXT
          - REGEX_EXTRACTION
          type: string
        delimiterOrRegex:
          description: "Depending on the **type** value: \n\n * `REGEX_EXTRACTION`:\
            \ The regular expression. \n * `BETWEEN_DELIMITER`: The opening delimiter\
            \ string to look for. \n * All other values: The delimiter string to look\
            \ for."
          type: string
        endDelimiter:
          description: "The closing delimiter string to look for. \n\n Required if\
            \ the **kind** value is `BETWEEN_DELIMITER`. Not applicable otherwise."
          type: string
        requestAttribute:
          description: "The request attribute to extract from. \n\n Required if the\
            \ **kind** value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise."
          type: string
        normalization:
          description: The format of the extracted string.
          enum:
          - ORIGINAL
          - TO_LOWER_CASE
          - TO_UPPER_CASE
          type: string
        useFromChildCalls:
          description: "If `true` request attribute will be taken from a child service\
            \ call. \n\n Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute.\
            \ Defaults to `false`."
          type: boolean
        aggregation:
          description: "Which value of the request attribute must be used when it\
            \ occurs across multiple child requests. \n\nOnly applicable for the `SERVICE_REQUEST_ATTRIBUTE`\
            \ attribute, when **useFromChildCalls** is `true`. \n\nFor the `COUNT`\
            \ aggregation, the **kind** field is not applicable."
          enum:
          - COUNT
          - FIRST
          - LAST
          type: string
        source:
          $ref: '#/components/schemas/PropagationSource'
      required:
      - attribute
      - kind
      - name
      type: object
    PropagationSource:
      description: Defines valid sources of request attributes for conditions or placeholders.
      properties:
        managementZone:
          description: Use only request attributes from services that belong to this
            management zone.. Use either this or `serviceTag`
          type: string
        serviceTag:
          $ref: '#/components/schemas/UniversalTag'
      type: object
    ServiceTypeComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/ServiceTypeComparisonInfo_allOf'
      description: Comparison for `SERVICE_TYPE` attributes.
      required:
      - comparison
      - negate
      type: object
    StringComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/StringComparisonInfo_allOf'
      description: Comparison for `STRING` attributes.
      required:
      - comparison
      - negate
      type: object
    StringRequestAttributeComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/StringRequestAttributeComparisonInfo_allOf'
      description: Comparison for `STRING_REQUEST_ATTRIBUTE` attributes, specifically
        of the **String** type.
      required:
      - comparison
      - negate
      - requestAttribute
      type: object
    TagComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/TagComparisonInfo_allOf'
      description: Comparison for `TAG` attributes.
      required:
      - comparison
      - negate
      type: object
    UniversalTag:
      description: Use only request attributes from services that have this tag. Use
        either this or `managementZone`
      properties:
        tagKey:
          $ref: '#/components/schemas/UniversalTagKey'
        value:
          description: "The value of the tag. Not applicable to custom tags. \n\n\
            If a tag does have a separate key and value (in the textual representation\
            \ they are split by the colon ‘:’), this field is set with the actual\
            \ value. Key-value pairs can occur for automatically imported tags and\
            \ tags set by rules if extractors are used."
          type: string
        key:
          description: |-
            The key of the tag. For custom tags, put the tag value here.

            The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags.
          type: string
        context:
          description: "The origin of the tag, such as AWS or Cloud Foundry. For custom\
            \ tags use the `CONTEXTLESS` value. \n\nThe context is set for tags that\
            \ are automatically imported by OneAgent (for example, from the AWS console\
            \ or environment variables). It’s useful for determining the origin of\
            \ tags when not manually defined, and it also helps to prevent clashes\
            \ with other existing tags. If the tag is not automatically imported,\
            \ `CONTEXTLESS` set."
          enum:
          - AWS
          - AWS_GENERIC
          - AZURE
          - CLOUD_FOUNDRY
          - CONTEXTLESS
          - ENVIRONMENT
          - GOOGLE_COMPUTE_ENGINE
          - KUBERNETES
          type: string
      required:
      - key
      type: object
    UniversalTagKey:
      properties:
        context:
          enum:
          - AWS
          - AWS_GENERIC
          - AZURE
          - CLOUD_FOUNDRY
          - CONTEXTLESS
          - ENVIRONMENT
          - GOOGLE_COMPUTE_ENGINE
          - KUBERNETES
          type: string
        key:
          type: string
      type: object
    ZosComparisonInfo:
      allOf:
      - $ref: '#/components/schemas/ComparisonInfo'
      - $ref: '#/components/schemas/ZosComparisonInfo_allOf'
      description: Comparison for `ZOS_CALL_TYPE` attributes.
      required:
      - comparison
      - negate
      type: object
    SyntheticMetricUpdate:
      description: The update of the calculated synthetic metric.
      example:
        enabled: true
      properties:
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
      type: object
    CalculatedSyntheticMetric:
      description: Definition of the calculated synthetic metric.
      example:
        enabled: true
        name: MyMetric
        metricKey: calc:synthetic.browser.mymetric
        metric: UserActionDuration
        monitorIdentifier: SYNTHETIC_TEST-1234
        filter:
          event: SYNTHETIC_TEST_STEP-1234
          hasError: true
        dimensions:
        - dimension: Location
      properties:
        monitorIdentifier:
          description: The Dynatrace entity ID of the synthetic monitor to which the
            metric belongs.
          type: string
        name:
          description: The name of the metric, displayed in the UI.
          maxLength: 100
          minLength: 0
          type: string
        metricKey:
          description: "The unique key of the metric. \n\n The key must have the `calc:synthetic`\
            \ prefix."
          type: string
        enabled:
          description: The metric is enabled (`true`) or disabled (`false`).
          type: boolean
        metric:
          description: The type of the synthetic metric.
          enum:
          - ApplicationCache
          - Callback
          - DNSLookup
          - DOMComplete
          - DOMContentLoaded
          - DOMInteractive
          - FailedRequestsResources
          - FirstContentfulPaint
          - FirstInputDelay
          - FirstInputStart
          - FirstPaint
          - HTMLDownloaded
          - HttpErrors
          - JavaScriptErrors
          - LargestContentfulPaint
          - LoadEventEnd
          - LoadEventStart
          - NavigationStart
          - OnDOMContentLoaded
          - OnLoad
          - Processing
          - RedirectTime
          - Request
          - RequestStart
          - ResourceCount
          - Response
          - SecureConnect
          - SpeedIndex
          - TCPConnect
          - TimeToFirstByte
          - TotalDuration
          - TransferSize
          - UserActionDuration
          - VisuallyComplete
          type: string
        dimensions:
          description: A list of metric dimensions.
          items:
            $ref: '#/components/schemas/SyntheticMetricDimension'
          maxItems: 2
          minItems: 0
          type: array
        filter:
          $ref: '#/components/schemas/SyntheticMetricFilter'
      required:
      - enabled
      - metric
      - metricKey
      - monitorIdentifier
      - name
      type: object
    SyntheticMetricDimension:
      description: Dimension of the calculated synthetic metric.
      properties:
        topX:
          description: The number of top values to be calculated.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        dimension:
          description: The dimension of the metric.
          enum:
          - Event
          - Location
          - ResourceOrigin
          type: string
      required:
      - dimension
      type: object
    SyntheticMetricFilter:
      description: Filter of the calculated synthetic metric.
      properties:
        actionType:
          description: Only user actions of the specified type are included in the
            metric calculation.
          enum:
          - Custom
          - Load
          - Xhr
          type: string
        hasError:
          description: "The execution status of the monitors to be included in the\
            \ metric calculation: \n\n* `true`: Only failed executions are included.\
            \ \n\n * `false`: All executions are included."
          type: boolean
        errorCode:
          description: Only executions finished with the specified error code are
            included in the metric calculation.
          format: int32
          type: integer
        event:
          description: "Only the specified browser clickpath event is included in\
            \ the metric calculation. \n\n Specify the Dynatrace entity ID of the\
            \ event here. You can fetch the list of clickpath events of the monitor\
            \ with the [GET a synthetic monitor](https://www.dynatrace.com/support/help/shortlink/api-synthetic-monitors-get-monitor)\
            \ request from the Environment API"
          type: string
        location:
          description: "Only executions from the specified location are included in\
            \ the metric calculation. \n\n Specify the Dynatrace entity ID of the\
            \ location here. You can fetch the list of locations the monitor is running\
            \ from with the [GET a synthetic monitor](https://www.dynatrace.com/support/help/shortlink/api-synthetic-monitors-get-monitor)\
            \ request from the Environment API."
          type: string
      type: object
    NotificationConfigStub:
      description: The short representation of a notification.
      example:
        name: name
        description: description
        id: id
        type: ANSIBLETOWER
      properties:
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
        type:
          description: The type of the notification.
          enum:
          - ANSIBLETOWER
          - EMAIL
          - HIPCHAT
          - JIRA
          - OPS_GENIE
          - PAGER_DUTY
          - SERVICE_NOW
          - SLACK
          - TRELLO
          - VICTOROPS
          - WEBHOOK
          - XMATTERS
          type: string
      required:
      - id
      type: object
    NotificationConfigStubListDto:
      example:
        values:
        - name: name
          description: description
          id: id
          type: ANSIBLETOWER
        - name: name
          description: description
          id: id
          type: ANSIBLETOWER
      properties:
        values:
          items:
            $ref: '#/components/schemas/NotificationConfigStub'
          type: array
      type: object
    AnsibleTowerNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/AnsibleTowerNotificationConfig_allOf'
      description: Configuration of the Ansible Tower notification.
      required:
      - acceptAnyCertificate
      - active
      - alertingProfile
      - customMessage
      - jobTemplateID
      - jobTemplateURL
      - username
      type: object
    EmailNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/EmailNotificationConfig_allOf'
      description: Configuration of the email notification.
      required:
      - active
      - alertingProfile
      - body
      - receivers
      - subject
      type: object
    HipChatNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/HipChatNotificationConfig_allOf'
      description: Configuration of the HipChat notification.
      required:
      - active
      - alertingProfile
      - message
      type: object
    HttpHeader:
      description: The HTTP header.
      properties:
        name:
          description: The name of the HTTP header.
          minLength: 1
          type: string
        value:
          description: "The value of the HTTP header. May contain an empty value.\
            \ \n\n Required when creating a new notification. \n\nFor the **Authorization**\
            \ header, GET requests return the `null` value. \n\nIf you want update\
            \ a notification configuration with an **Authorization** header which\
            \ you want to remain intact, set the **Authorization** header with the\
            \ `null` value."
          type: string
      required:
      - name
      type: object
    JiraNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/JiraNotificationConfig_allOf'
      description: Configuration of the Jira notification.
      required:
      - active
      - alertingProfile
      - description
      - issueType
      - projectKey
      - summary
      - url
      - username
      type: object
    NotificationConfig:
      description: |-
        Configuration of a notification. The actual set of fields depends on the `type` of the notification.
        See the [Notifications API - JSON models](https://www.dynatrace.com/support/help/shortlink/api-config-notifications-models) help topic for example models of every notification type.
      discriminator:
        propertyName: type
      example:
        type: JIRA
        id: acbed0c4-4ef1-4303-991f-102510a69322
        name: REST example
        alertingProfile: 4f5e00f4-39b3-455a-820b-3514843615f3
        active: true
        username: john.smith
        password: ""
        url: https://my-jira.atlassian.net/rest/api/2/
        projectKey: DEV
        issueType: Task
        summary: 'Problem {ProblemID}: {ProblemTitle}'
        description: '{ProblemDetailsText}'
      properties:
        id:
          description: The ID of the notification configuration.
          format: uuid
          type: string
        name:
          description: The name of the notification configuration.
          maxLength: 100
          minLength: 1
          type: string
        alertingProfile:
          description: The ID of the associated alerting profile.
          format: uuid
          type: string
        active:
          description: The configuration is enabled (`true`) or disabled (`false`).
          type: boolean
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `EMAIL` -> EmailNotificationConfig\
            \ \n* `PAGER_DUTY` -> PagerDutyNotificationConfig \n* `WEBHOOK` -> WebHookNotificationConfig\
            \ \n* `SLACK` -> SlackNotificationConfig \n* `HIPCHAT` -> HipChatNotificationConfig\
            \ \n* `VICTOROPS` -> VictorOpsNotificationConfig \n* `SERVICE_NOW` ->\
            \ ServiceNowNotificationConfig \n* `XMATTERS` -> XMattersNotificationConfig\
            \ \n* `ANSIBLETOWER` -> AnsibleTowerNotificationConfig \n* `OPS_GENIE`\
            \ -> OpsGenieNotificationConfig \n* `JIRA` -> JiraNotificationConfig \n\
            * `TRELLO` -> TrelloNotificationConfig \n"
          enum:
          - ANSIBLETOWER
          - EMAIL
          - HIPCHAT
          - JIRA
          - OPS_GENIE
          - PAGER_DUTY
          - SERVICE_NOW
          - SLACK
          - TRELLO
          - VICTOROPS
          - WEBHOOK
          - XMATTERS
          type: string
        jobTemplateURL:
          description: The URL of the target Ansible Tower job template.
          maxLength: 1000
          minLength: 1
          type: string
        acceptAnyCertificate:
          description: Accept any, including self-signed and invalid, SSL certificate
            (`true`) or only trusted (`false`) certificates.
          type: boolean
        username:
          description: The username required for authentication.
          maxLength: 1000
          minLength: 1
          type: string
        password:
          description: The password required for authentication.
          maxLength: 1000
          minLength: 1
          type: string
        jobTemplateID:
          description: The ID of the target Ansible Tower job template.
          format: int32
          type: integer
        customMessage:
          description: "The custom message of the notification. \n\n This message\
            \ will be displayed in the extra variables **Message** field of your job\
            \ template.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`:\
            \ Details about the entities impacted by the problem in form of a JSON\
            \ array. \n* `{ImpactedEntity}`: The entity impacted by the problem or\
            \ *X* impacted entities. \n* `{PID}`: The ID of the reported problem.\
            \ \n* `{ProblemDetailsText}`: All problem event details, including root\
            \ cause, as a text-formatted string. \n* `{ProblemID}`: The display number\
            \ of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 1000
          minLength: 0
          type: string
        subject:
          description: The subject of the email notifications.
          maxLength: 1000
          minLength: 1
          type: string
        body:
          description: "The template of the email notification.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntities}`: Details about the\
            \ entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`:\
            \ The entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem\
            \ event details, including root cause, as an HTML-formatted string. \n\
            * `{ProblemDetailsJSON}`: All problem event details, including root cause,\
            \ as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemDetailsText}`: All problem event details, including\
            \ root cause, as a text-formatted string. \n* `{ProblemID}`: The display\
            \ number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        receivers:
          description: The list of the email recipients.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        ccReceivers:
          description: The list of the email CC-recipients.
          items:
            type: string
          type: array
          uniqueItems: true
        bccReceivers:
          description: The list of the email BCC-recipients.
          items:
            type: string
          type: array
          uniqueItems: true
        projectKey:
          description: The project key of the Jira issue to be created by this notification.
          maxLength: 1000
          minLength: 1
          type: string
        issueType:
          description: The type of the Jira issue to be created by this notification.
          maxLength: 1000
          minLength: 1
          type: string
        summary:
          description: "The summary of the Jira issue to be created by this notification.\n\
            \n You can use the following placeholders: \n* `{ImpactedEntity}`: The\
            \ entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem\
            \ event details, including root cause, as a text-formatted string. \n\
            * `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`:\
            \ The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 1000
          minLength: 1
          type: string
        description:
          description: The description of the notification.
          minLength: 1
          type: string
        apiKey:
          description: The API key of the target account.
          maxLength: 1000
          minLength: 1
          type: string
        domain:
          description: The region domain of the OpsGenie.
          maxLength: 1000
          minLength: 1
          type: string
        account:
          description: The name of the PagerDuty account.
          maxLength: 1000
          minLength: 1
          type: string
        serviceApiKey:
          description: The API key to access PagerDuty.
          maxLength: 1000
          minLength: 1
          type: string
        serviceName:
          description: The name of the service.
          maxLength: 1000
          minLength: 1
          type: string
        instanceName:
          description: "The ServiceNow instance identifier. It refers to the first\
            \ part of your own ServiceNow URL. \n\n This field is mutually exclusive\
            \ with the **url** field. You can only use one of them."
          maxLength: 1000
          minLength: 1
          type: string
        url:
          description: The URL of the notification endpoint
          maxLength: 1000
          minLength: 1
          type: string
        message:
          description: The content of the message
          maxLength: 160
          minLength: 1
          type: string
        sendIncidents:
          description: Send incidents into ServiceNow ITSM (`true`).
          type: boolean
        sendEvents:
          description: Send events into ServiceNow ITOM (`true`).
          type: boolean
        channel:
          description: The channel (for example, `#general`) or the user (for example,
            `@john.smith`) to send the message to.
          maxLength: 1000
          minLength: 1
          type: string
        title:
          description: "The content of the message.\n\n You can use the following\
            \ placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem\
            \ or *X* impacted entities. \n* `{PID}`: The ID of the reported problem.\
            \ \n* `{ProblemDetailsText}`: All problem event details, including root\
            \ cause, as a text-formatted string. \n* `{ProblemID}`: The display number\
            \ of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        applicationKey:
          description: The application key for the Trello account.
          maxLength: 1000
          minLength: 1
          type: string
        authorizationToken:
          description: The application token for the Trello account.
          maxLength: 1000
          minLength: 1
          type: string
        boardId:
          description: The Trello board to which the card should be assigned.
          minLength: 1
          type: string
        listId:
          description: The Trello list to which the card should be assigned.
          minLength: 1
          type: string
        resolvedListId:
          description: The Trello list to which the card of the resolved problem should
            be assigned.
          minLength: 1
          type: string
        text:
          description: "The text of the generated Trello card.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntity}`: The entity impacted\
            \ by the problem or *X* impacted entities. \n* `{PID}`: The ID of the\
            \ reported problem. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemID}`: The display number of the reported problem.\
            \ \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        routingKey:
          description: The routing key, defining the group to be notified.
          maxLength: 1000
          minLength: 1
          type: string
        payload:
          description: "The content of the notification message.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntities}`: Details about the\
            \ entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`:\
            \ The entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem\
            \ event details, including root cause, as an HTML-formatted string. \n\
            * `{ProblemDetailsJSON}`: All problem event details, including root cause,\
            \ as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemDetailsText}`: All problem event details, including\
            \ root cause, as a text-formatted string. \n* `{ProblemID}`: The display\
            \ number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        headers:
          description: A list of the additional HTTP headers.
          items:
            $ref: '#/components/schemas/HttpHeader'
          type: array
        notifyEventMergesEnabled:
          description: Call webhook if new events merge into existing problems.
          type: boolean
      required:
      - active
      - alertingProfile
      - bccReceivers
      - ccReceivers
      - name
      - receivers
      - type
      type: object
    OpsGenieNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/OpsGenieNotificationConfig_allOf'
      description: Configuration of the OpsGenie notification.
      required:
      - active
      - alertingProfile
      - domain
      - message
      type: object
    PagerDutyNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/PagerDutyNotificationConfig_allOf'
      description: Configuration of the PagerDuty notification.
      required:
      - account
      - active
      - alertingProfile
      - serviceName
      type: object
    ServiceNowNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/ServiceNowNotificationConfig_allOf'
      description: Configuration of the ServiceNow notification.
      required:
      - active
      - alertingProfile
      - message
      - sendEvents
      - sendIncidents
      - username
      type: object
    SlackNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/SlackNotificationConfig_allOf'
      description: Configuration of the Slack notification.
      required:
      - active
      - alertingProfile
      - channel
      - title
      type: object
    TrelloNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/TrelloNotificationConfig_allOf'
      description: Configuration of the Trello notification.
      required:
      - active
      - alertingProfile
      - applicationKey
      - boardId
      - description
      - listId
      - resolvedListId
      - text
      type: object
    VictorOpsNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/VictorOpsNotificationConfig_allOf'
      description: Configuration of the VictorOps notification.
      required:
      - active
      - alertingProfile
      - message
      - routingKey
      type: object
    WebHookNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/WebHookNotificationConfig_allOf'
      description: Configuration of the custom WebHook notification.
      required:
      - acceptAnyCertificate
      - active
      - alertingProfile
      - payload
      - url
      type: object
    XMattersNotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - $ref: '#/components/schemas/XMattersNotificationConfig_allOf'
      description: Configuration of the xMatters notification.
      required:
      - acceptAnyCertificate
      - active
      - alertingProfile
      - payload
      - url
      type: object
    Plugin:
      description: General configuration of a plugin.
      example:
        id: custom.remote.python.demo
        name: ActiveGate demo plugin
        version: "1.01"
        type: ActiveGate
        metricGroup: custom.demo_metrics
        properties:
        - key: serverIp
          type: STRING
          defaultValue: 127.0.0.1
        - key: password
          type: PASSWORD
          defaultValue: ""
        - key: username
          type: STRING
          defaultValue: dynatrace
        - key: dropdownProperty
          type: DROPDOWN
          defaultValue: one
          dropdownValues:
          - one
          - two
          - three
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the plugin, for example `custom.remote.python.demo`.
          type: string
        name:
          description: The name of the plugin, displayed in Dynatrace.
          type: string
        version:
          description: The version of the plugin, displayed in Dynatrace.
          type: string
        type:
          description: The type of the plugin. It indicates the runtime environment
            of the plugin (for example, ActiveGate).
          enum:
          - ActiveGate
          - JMX
          - OneAgent
          - PMI
          type: string
        metricGroup:
          description: The metric group of the plugin. All the metrics, captured by
            the plugin are children of this group.
          type: string
        properties:
          description: A list of plugin properties.
          items:
            $ref: '#/components/schemas/PluginProperty'
          type: array
      type: object
    PluginProperty:
      description: A property of a plugin.
      properties:
        key:
          description: The key of the property.
          type: string
        type:
          description: The type of the property.
          type: string
        defaultValue:
          description: The default value of the property.
          type: string
        dropdownValues:
          description: "The list of possible values of the property. \n\n If such\
            \ a list is defined, only values from this list can be assigned to the\
            \ property."
          items:
            type: string
          type: array
      type: object
    PluginState:
      description: The state of the plugin.
      properties:
        pluginId:
          description: The ID of the plugin.
          type: string
        version:
          description: The version of the plugin (for example `1.0.0`).
          type: string
        endpointId:
          description: The ID of the endpoint where the state is detected - Active
            Gate only.
          type: string
        state:
          description: The state of the plugin.
          enum:
          - DISABLED
          - ERROR_AUTH
          - ERROR_COMMUNICATION_FAILURE
          - ERROR_CONFIG
          - ERROR_TIMEOUT
          - ERROR_UNKNOWN
          - INCOMPATIBLE
          - LIMIT_REACHED
          - NOTHING_TO_REPORT
          - OK
          - STATE_TYPE_UNKNOWN
          - UNINITIALIZED
          - UNSUPPORTED
          - WAITING_FOR_STATE
          type: string
        stateDescription:
          description: A short description of the state.
          type: string
        timestamp:
          description: The timestamp when the state was detected, in UTC milliseconds.
          format: int64
          type: integer
        hostId:
          description: The ID of the host on which the plugin runs.
          type: string
        processId:
          description: The ID of the entity on which the plugin is active.
          type: string
      type: object
    PluginStateList:
      description: A list of plugin states.
      example:
        pluginId: custom.remote.python.demo
        version: 1.0.0
        endpointId: -8213819843595439277
        state: ERROR_AUTH
        stateDescription: Could not authorize
        timestamp: 1556199097994
      properties:
        states:
          description: A list of plugin states.
          items:
            $ref: '#/components/schemas/PluginState'
          type: array
      type: object
    RemotePluginEndpoint:
      description: Configuration of a plugin endpoint.
      example:
        id: -2183662974968812535
        pluginId: custom.remote.python.demo
        name: Demo endpoint
        enabled: true
        properties:
          serverIp: 127.0.0.1
          password: ""
          username: dynatrace
          dropdownProperty: two
        activeGatePluginModule:
          id: -8844900174269363000
      properties:
        id:
          description: The ID of the endpoint.
          type: string
        pluginId:
          description: The ID of the plugin to which the endpoint belongs.
          type: string
        name:
          description: The name of the endpoint, displayed in Dynatrace.
          type: string
        enabled:
          description: The endpoint is enabled (`true`) or disabled (`false`).
          type: boolean
        properties:
          additionalProperties:
            description: "The list of endpoint parameters. \n\n Each parameter is\
              \ a property-value pair."
            type: string
          description: "The list of endpoint parameters. \n\n Each parameter is a\
            \ property-value pair."
          type: object
        activeGatePluginModule:
          $ref: '#/components/schemas/EntityShortRepresentation'
      required:
      - activeGatePluginModule
      type: object
    RemoteEnvironmentConfigStub:
      description: The short representation of a remote environment.
      example:
        networkScope: CLUSTER
        name: name
        id: id
        uri: uri
      properties:
        name:
          type: string
        id:
          type: string
        uri:
          description: The display name of the remote environment.
          maxLength: 1000
          minLength: 1
          type: string
        networkScope:
          description: "The network scope of the remote environment:\n* `EXTERNAL`:\
            \ The remote environment is located in an another network. \n* `INTERNAL`:\
            \ The remote environment is located in the same network. \n* `CLUSTER`:\
            \ The remote environment is located in the same cluster. \n\nDynatrace\
            \ SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used."
          enum:
          - CLUSTER
          - EXTERNAL
          - INTERNAL
          type: string
      required:
      - id
      type: object
    RemoteEnvironmentConfigDto:
      example:
        networkScope: EXTERNAL
        displayName: displayName
        id: id
        uri: uri
        token: token
      properties:
        id:
          description: The ID of the configuration.
          type: string
        displayName:
          description: The display name of the remote environment.
          type: string
        uri:
          description: The URI of the remote environment.
          maxLength: 1000
          minLength: 1
          type: string
        token:
          description: "The API token granting access to the remote environment. \n\
            \nThe token must have the **Fetch data from a remote environment** (`RestRequestForwarding`)\
            \ scope. \n\nFor security reasons, GET requests return this field as `null`."
          type: string
        networkScope:
          description: "The network scope of the remote environment:\n* `EXTERNAL`:\
            \ The remote environment is located in an another network. \n* `INTERNAL`:\
            \ The remote environment is located in the same network. \n* `CLUSTER`:\
            \ The remote environment is located in the same cluster. \n\nDynatrace\
            \ SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used."
          enum:
          - CLUSTER
          - EXTERNAL
          - INTERNAL
          example: EXTERNAL
          type: string
      required:
      - displayName
      - uri
      type: object
    RemoteEnvironmentConfigListDto:
      example:
        values:
        - networkScope: CLUSTER
          name: name
          id: id
          uri: uri
        - networkScope: CLUSTER
          name: name
          id: id
          uri: uri
      properties:
        values:
          items:
            $ref: '#/components/schemas/RemoteEnvironmentConfigStub'
          type: array
      type: object
    DashboardReportStub:
      description: A short representations of the report.
      properties:
        id:
          description: The ID of the report.
          type: string
        type:
          description: The type of the report.
          enum:
          - DASHBOARD
          type: string
        dashboardId:
          description: The ID of the associated dashboard.
          type: string
      required:
      - dashboardId
      - id
      - type
      type: object
    ReportStubList:
      description: A list of short representations of reports.
      example:
        values:
        - id: 337d883e-98c3-4dac-b8f2-1a9cdbd05969
          type: DASHBOARD
          dashboardId: 9eee7ed6-a125-4d9d-bfa7-afdb3404cb36
        - id: b059e372-0b35-4d44-869b-95c326748848
          type: DASHBOARD
          dashboardId: 26ccd360-828c-4d83-a65e-040ddc31e8f6
      properties:
        values:
          description: A list of reports.
          items:
            $ref: '#/components/schemas/DashboardReportStub'
          type: array
      required:
      - values
      type: object
    DashboardReport:
      description: "Configuration of a dashboard report. \n\nThe dashboard report\
        \ provides a public link to the associated dashboard with a custom reporting\
        \ period: last week for weekly subscribers or last month for monthly subscribers."
      example:
        id: 337d883e-98c3-4dac-b8f2-1a9cdbd05969
        type: DASHBOARD
        dashboardId: 8dd67562-8bf5-4a09-830d-4e0ca992abd6
        enabled: "true"
        subscriptions:
          WEEK:
          - demo@email.com
          MONTH:
          - demo@email.com
          - demo2@email.com
      properties:
        id:
          description: The ID of the report.
          type: string
        type:
          enum:
          - DASHBOARD
          type: string
        dashboardId:
          description: The ID of the associated dashboard.
          type: string
        enabled:
          description: The email notifications for the dashboard report are enabled
            (`true`) or disabled (`false`).
          type: boolean
        subscriptions:
          $ref: '#/components/schemas/DashboardReportSubscription'
      required:
      - dashboardId
      - subscriptions
      - type
      type: object
    DashboardReportSubscription:
      description: A list of the report subscribers.
      properties:
        WEEK:
          description: "A list of weekly subscribers. \n\nWeekly subscribers receive\
            \ the report every Monday at midnight. \n\n You can specify email addresses\
            \ or Dynatrace user IDs here."
          items:
            type: string
          type: array
          uniqueItems: true
        MONTH:
          description: "A list of monthly subscribers. \n\nMonthly subscribers receive\
            \ the report on the first Monday of the month at midnight. \n\nYou can\
            \ specify email addresses or Dynatrace user IDs here."
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ReportSubscriptions:
      description: Configuration of a report subscription.
      example:
        schedule: WEEK
        recipients:
        - demo@email.com
        - demo2@email.com
      properties:
        schedule:
          description: "The schedule of the subscription. \n\n * Weekly subscribers\
            \ receive the report every Monday at midnight. \n * Monthly subscribers\
            \ receive the report on the first Monday of the month at midnight."
          enum:
          - MONTH
          - WEEK
          type: string
        recipients:
          description: "A list of the recipients. \n\nYou can specify email addresses\
            \ or Dynatrace user IDs here."
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - recipients
      - schedule
      type: object
    CapturedMethod:
      properties:
        method:
          $ref: '#/components/schemas/MethodReference'
        capture:
          description: What to capture from the method.
          enum:
          - ARGUMENT
          - CLASS_NAME
          - METHOD_NAME
          - OCCURRENCES
          - SIMPLE_CLASS_NAME
          - THIS
          type: string
        argumentIndex:
          description: "The index of the argument to capture. Set `0` to capture the\
            \ return value, `1` or higher to capture a mehtod argument. \n\n Required\
            \ if the **capture** is set to `ARGUMENT`.\n\n Not applicable in other\
            \ cases."
          format: int32
          minimum: 0
          type: integer
        deepObjectAccess:
          description: "The getter chain to apply to the captured object. It is required\
            \ in one of the following cases:\n\n The **capture** is set to `THIS`.\
            \ \n  The **capture** is set to `ARGUMENT`, and the argument is not a\
            \ primitive, a primitive wrapper class, a string, or an array. \n\n Not\
            \ applicable in other cases."
          type: string
      required:
      - capture
      - method
      type: object
    DataSource:
      properties:
        enabled:
          description: The data source is enabled (`true`) or disabled (`false`).
          type: boolean
        source:
          description: The source of the attribute to capture. Works in conjunction
            with **parameterName** or **methods** and **technology**.
          enum:
          - CICS_SDK
          - CLIENT_IP
          - CUSTOM_ATTRIBUTE
          - IIB_LABEL
          - IIB_NODE
          - METHOD_PARAM
          - POST_PARAMETER
          - QUERY_PARAMETER
          - REQUEST_HEADER
          - RESPONSE_HEADER
          - SESSION_ATTRIBUTE
          - SPAN_ATTRIBUTE
          - URI
          - URI_PATH
          type: string
        valueProcessing:
          $ref: '#/components/schemas/ValueProcessing'
        technology:
          description: The technology of the method to capture if the **source** value
            is `METHOD_PARAM`. \n\n Not applicable in other cases.
          enum:
          - DOTNET
          - JAVA
          - PHP
          type: string
        sessionAttributeTechnology:
          description: The technology of the session attribute to capture if the **source**
            value is `SESSION_ATTRIBUTE`. \n\n Not applicable in other cases.
          enum:
          - ASP_NET
          - ASP_NET_CORE
          - JAVA
          type: string
        methods:
          description: "The method specification if the **source** value is `METHOD_PARAM`.\
            \ \n\n Not applicable in other cases."
          items:
            $ref: '#/components/schemas/CapturedMethod'
          type: array
        parameterName:
          description: |-
            The name of the web request parameter to capture.

             Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.

             Not applicable in other cases.
          type: string
        scope:
          $ref: '#/components/schemas/ScopeConditions'
        capturingAndStorageLocation:
          description: "Specifies the location where the values are captured and stored.\n\
            \n Required if the **source** is one of the following: `GET_PARAMETER`,\
            \ `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`. \n\n Not applicable in other\
            \ cases. \n\n If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`,\
            \ the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed."
          enum:
          - CAPTURE_AND_STORE_ON_BOTH
          - CAPTURE_AND_STORE_ON_CLIENT
          - CAPTURE_AND_STORE_ON_SERVER
          - CAPTURE_ON_CLIENT_STORE_ON_SERVER
          type: string
        iibNodeType:
          description: |-
            The IBM integration bus node type for which the value is captured.

             This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.

             Not applicable in other cases.
          enum:
          - AGGREGATE_CONTROL_NODE
          - AGGREGATE_REPLY_NODE
          - AGGREGATE_REQUEST_NODE
          - CALLABLE_FLOW_REPLY_NODE
          - COLLECTOR_NODE
          - COMPUTE_NODE
          - DATABASE_NODE
          - DECISION_SERVICE_NODE
          - DOT_NET_COMPUTE_NODE
          - FILE_READ_NODE
          - FILTER_NODE
          - FLOW_ORDER_NODE
          - GROUP_COMPLETE_NODE
          - GROUP_GATHER_NODE
          - GROUP_SCATTER_NODE
          - HTTP_HEADER
          - JAVA_COMPUTE_NODE
          - JMS_CLIENT_RECEIVE
          - JMS_CLIENT_REPLY_NODE
          - JMS_HEADER
          - MQ_GET_NODE
          - MQ_OUTPUT_NODE
          - PASSTHRU_NODE
          - RESET_CONTENT_DESCRIPTOR_NODE
          - RE_SEQUENCE_NODE
          - ROUTE_NODE
          - SAP_REPLY_NODE
          - SCA_REPLY_NODE
          - SECURITY_PEP
          - SEQUENCE_NODE
          - SOAP_EXTRACT_NODE
          - SOAP_REPLY_NODE
          - SOAP_WRAPPER_NODE
          - SR_RETRIEVE_ENTITY_NODE
          - SR_RETRIEVE_IT_SERVICE_NODE
          - THROW_NODE
          - TRACE_NODE
          - TRY_CATCH_NODE
          - VALIDATE_NODE
          - WS_REPLY_NODE
          - XSL_MQSI_NODE
          type: string
        iibMethodNodeCondition:
          $ref: '#/components/schemas/ValueCondition'
        cicsSDKMethodNodeCondition:
          $ref: '#/components/schemas/ValueCondition'
        iibLabelMethodNodeCondition:
          $ref: '#/components/schemas/ValueCondition'
        spanAttributeKey:
          description: |-
            The key of the span attribute to capture.

             Required if the **source** is: `SPAN_ATTRIBUTE`.

             Not applicable in other cases.
          type: string
      required:
      - enabled
      - source
      type: object
    ExtractSubstring:
      description: Preprocess by extracting a substring from the original value.
      properties:
        position:
          description: The position of the extracted string relative to delimiters.
          enum:
          - AFTER
          - BEFORE
          - BETWEEN
          type: string
        delimiter:
          description: The delimiter string.
          type: string
        endDelimiter:
          description: "The end-delimiter string. \n\n Required if the **position**\
            \ value is `BETWEEN`. Otherwise not allowed."
          type: string
      required:
      - delimiter
      - position
      type: object
    MethodReference:
      description: Configuration of a method to be captured.
      properties:
        visibility:
          description: The visibility of the method to capture.
          enum:
          - INTERNAL
          - PACKAGE_PROTECTED
          - PRIVATE
          - PROTECTED
          - PUBLIC
          type: string
        modifiers:
          description: The modifiers of the method to capture.
          items:
            enum:
            - ABSTRACT
            - EXTERN
            - FINAL
            - NATIVE
            - STATIC
            type: string
          type: array
          uniqueItems: true
        className:
          description: "The class name where the method to capture resides. \n\n Either\
            \ this or the **fileName** must be set."
          type: string
        fileName:
          description: "The file name where the method to capture resides. \n\n Either\
            \ this or **className** must be set."
          type: string
        fileNameMatcher:
          description: "The operator of the comparison. \n\n If not set, `EQUALS`\
            \ is used."
          enum:
          - ENDS_WITH
          - EQUALS
          - STARTS_WITH
          type: string
        methodName:
          description: The name of the method to capture.
          type: string
        argumentTypes:
          description: The list of argument types.
          items:
            type: string
          type: array
        returnType:
          description: The return type.
          type: string
      required:
      - argumentTypes
      - methodName
      - modifiers
      - returnType
      - visibility
      type: object
    RequestAttribute:
      example:
        name: Query Term
        enabled: true
        dataType: STRING
        dataSources:
        - enabled: true
          source: QUERY_PARAMETER
          parameterName: query
          scope:
            tagOfProcessGroup: SearchFrontend
          capturingAndStorageLocation: CAPTURE_AND_STORE_ON_SERVER
        normalization: TO_LOWER_CASE
        aggregation: ALL_DISTINCT_VALUES
        confidential: false
        skipPersonalDataMasking: false
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the request attribute.
          format: uuid
          type: string
        name:
          description: The name of the request attribute.
          minLength: 1
          type: string
        enabled:
          description: The request attribute is enabled (`true`) or disabled (`false`).
          type: boolean
        dataType:
          description: The data type of the request attribute.
          enum:
          - DOUBLE
          - INTEGER
          - STRING
          type: string
        dataSources:
          description: The list of data sources.
          items:
            $ref: '#/components/schemas/DataSource'
          maxItems: 2000
          minItems: 1
          type: array
        normalization:
          description: "String values transformation. \n\n If the **dataType** is\
            \ not `string`, set the `Original` here."
          enum:
          - ORIGINAL
          - TO_LOWER_CASE
          - TO_UPPER_CASE
          type: string
        aggregation:
          description: Aggregation type for the request values.
          enum:
          - ALL_DISTINCT_VALUES
          - AVERAGE
          - COUNT_DISTINCT_VALUES
          - COUNT_VALUES
          - FIRST
          - LAST
          - MAXIMUM
          - MINIMUM
          - SUM
          type: string
        confidential:
          description: Confidential data flag. Set `true` to treat the captured data
            as confidential.
          type: boolean
        skipPersonalDataMasking:
          description: "Personal data masking flag. Set `true` to skip masking. \n\
            \n Warning: This will potentially access personalized data."
          type: boolean
      required:
      - aggregation
      - confidential
      - dataSources
      - dataType
      - enabled
      - name
      - normalization
      - skipPersonalDataMasking
      type: object
    ScopeConditions:
      description: Conditions for data capturing.
      properties:
        serviceTechnology:
          description: Only applies to this service technology.
          enum:
          - ACTIVE_MQ
          - ACTIVE_MQ_ARTEMIS
          - ADO_NET
          - AIX
          - AKKA
          - AMAZON_REDSHIFT
          - AMQP
          - APACHE_CAMEL
          - APACHE_CASSANDRA
          - APACHE_COUCH_DB
          - APACHE_DERBY
          - APACHE_HTTP_CLIENT_ASYNC
          - APACHE_HTTP_CLIENT_SYNC
          - APACHE_HTTP_SERVER
          - APACHE_KAFKA
          - APACHE_SOLR
          - APACHE_STORM
          - APACHE_SYNAPSE
          - APACHE_TOMCAT
          - APPARMOR
          - APPLICATION_INSIGHTS_SDK
          - ASP_DOTNET
          - ASP_DOTNET_CORE
          - ASP_DOTNET_CORE_SIGNALR
          - ASP_DOTNET_SIGNALR
          - ASYNC_HTTP_CLIENT
          - AWS_LAMBDA
          - AWS_RDS
          - AWS_SERVICE
          - AXIS
          - AZURE_FUNCTIONS
          - AZURE_SERVICE_BUS
          - AZURE_SERVICE_FABRIC
          - AZURE_STORAGE
          - BOSHBPM
          - CITRIX
          - CITRIX_COMMON
          - CITRIX_DESKTOP_DELIVERY_CONTROLLERS
          - CITRIX_DIRECTOR
          - CITRIX_LICENSE_SERVER
          - CITRIX_PROVISIONING_SERVICES
          - CITRIX_STOREFRONT
          - CITRIX_VIRTUAL_DELIVERY_AGENT
          - CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT
          - CLOUDFOUNDRY
          - CLOUDFOUNDRY_AUCTIONEER
          - CLOUDFOUNDRY_BOSH
          - CLOUDFOUNDRY_GOROUTER
          - COLDFUSION
          - CONTAINERD
          - CORE_DNS
          - COUCHBASE
          - CRIO
          - CXF
          - DATASTAX
          - DB2
          - DIEGO_CELL
          - DOCKER
          - DOTNET
          - DOTNET_REMOTING
          - ELASTIC_SEARCH
          - ENVOY
          - ERLANG
          - ETCD
          - F5_LTM
          - FSHARP
          - GARDEN
          - GLASSFISH
          - GO
          - GRAAL_TRUFFLE
          - GRPC
          - GRSECURITY
          - HADOOP
          - HADOOP_HDFS
          - HADOOP_YARN
          - HAPROXY
          - HEAT
          - HESSIAN
          - HORNET_Q
          - IBM_CICS_REGION
          - IBM_CICS_TRANSACTION_GATEWAY
          - IBM_IMS_CONNECT_REGION
          - IBM_IMS_CONTROL_REGION
          - IBM_IMS_MESSAGE_PROCESSING_REGION
          - IBM_IMS_SOAP_GATEWAY
          - IBM_INTEGRATION_BUS
          - IBM_MQ
          - IBM_MQ_CLIENT
          - IBM_WEBSHPRERE_APPLICATION_SERVER
          - IBM_WEBSHPRERE_LIBERTY
          - IIS
          - IIS_APP_POOL
          - ISTIO
          - JAVA
          - JAX_WS
          - JBOSS
          - JBOSS_EAP
          - JDK_HTTP_SERVER
          - JERSEY
          - JETTY
          - JRUBY
          - JYTHON
          - KUBERNETES
          - LIBVIRT
          - LINKERD
          - MARIADB
          - MEMCACHED
          - MICROSOFT_SQL_SERVER
          - MONGODB
          - MSSQL_CLIENT
          - MULE_ESB
          - MYSQL
          - MYSQL_CONNECTOR
          - NETFLIX_SERVO
          - NETTY
          - NGINX
          - NODE_JS
          - OK_HTTP_CLIENT
          - ONEAGENT_SDK
          - OPENCENSUS
          - OPENSHIFT
          - OPENSTACK_COMPUTE
          - OPENSTACK_CONTROLLER
          - OPENTELEMETRY
          - OPENTRACING
          - OPEN_LIBERTY
          - ORACLE_DATABASE
          - ORACLE_WEBLOGIC
          - OWIN
          - PERL
          - PHP
          - PHP_FPM
          - PLAY
          - POSTGRE_SQL
          - POSTGRE_SQL_DOTNET_DATA_PROVIDER
          - POWER_DNS
          - PROGRESS
          - PYTHON
          - RABBIT_MQ
          - REACTOR_CORE
          - REDIS
          - RESTEASY
          - RESTLET
          - RIAK
          - RUBY
          - SAG_WEBMETHODS_IS
          - SAP
          - SAP_HANADB
          - SAP_HYBRIS
          - SAP_MAXDB
          - SAP_SYBASE
          - SCALA
          - SELINUX
          - SHAREPOINT
          - SPARK
          - SPRING
          - SQLITE
          - THRIFT
          - TIBCO
          - TIBCO_BUSINESS_WORKS
          - TIBCO_EMS
          - UNDERTOW_IO
          - VARNISH_CACHE
          - VIM2
          - VIRTUAL_MACHINE_KVM
          - VIRTUAL_MACHINE_QEMU
          - WILDFLY
          - WINDOWS_CONTAINERS
          - WINK
          - ZERO_MQ
          type: string
        processGroup:
          description: Only applies to this process group. Note that this can't be
            transferred between different clusters or environments.
          type: string
        hostGroup:
          description: Only applies to this host group.
          type: string
        tagOfProcessGroup:
          description: Only apply to process groups matching this tag.
          type: string
      type: object
    ValueCondition:
      description: IBM integration bus label node name condition for which the value
        is captured.
      properties:
        operator:
          description: Operator comparing the extracted value to the comparison value.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          type: string
        negate:
          description: Negate the comparison.
          type: boolean
        value:
          description: The value to compare to.
          type: string
      required:
      - negate
      - operator
      - value
      type: object
    ValueProcessing:
      description: Process values as specified.
      properties:
        valueCondition:
          $ref: '#/components/schemas/ValueCondition'
        valueExtractorRegex:
          description: Extract value from captured data per regex.
          type: string
        splitAt:
          description: Split (preprocessed) string values at this separator.
          type: string
        trim:
          description: Prune Whitespaces. Defaults to false.
          type: boolean
        extractSubstring:
          $ref: '#/components/schemas/ExtractSubstring'
      required:
      - trim
      type: object
    RequestNaming:
      description: The request naming rule.
      example:
        enabled: true
        namingPattern: renamed request
        conditions:
        - attribute: WEBREQUEST_URL_PATH
          comparisonInfo:
            type: STRING
            comparison: BEGINS_WITH
            value: /url
            negate: false
            caseSensitive: false
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the request naming rule.
          format: uuid
          type: string
        order:
          description: |-
            The order string. Sorting request namings alphabetically by their order string determines their relative ordering.

            Typically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise.
          maxLength: 2147483647
          minLength: 1
          type: string
        enabled:
          description: The rule is enabled (`true`) or disabled (`false`).
          type: boolean
        namingPattern:
          description: The name to be assigned to matching requests.
          maxLength: 1000
          minLength: 3
          type: string
        managementZones:
          description: Specifies the management zones for which this rule should be
            applied.
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        conditions:
          description: "The set of conditions for the request naming rule usage. \n\
            \n You can specify several conditions. The request has to match **all**\
            \ the specified conditions for the rule to trigger."
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        placeholders:
          description: "The list of custom placeholders to be used in the naming pattern.\
            \ \n\n It enables you to extract a request attribute value or other request\
            \ attribute and use it in the request naming pattern."
          items:
            $ref: '#/components/schemas/Placeholder'
          type: array
      required:
      - conditions
      - enabled
      - namingPattern
      type: object
    ResourceNaming:
      description: The resource naming rule.
      example:
        image:
        - .jpg
        - .png
        - .gif
        - .jpeg
        - .bmp
        - .svg
        - .ico
        - .woff
        - .ttf
        - .otf
        binary:
        - .exe
        - .zip
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        image:
          description: The list of image extensions that will be renamed to `Image`.
          items:
            type: string
          type: array
        binary:
          description: The list of binary extensions that will be renamed to `Binary`.
          items:
            type: string
          type: array
      required:
      - binary
      - image
      type: object
    AfterTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/AfterTransformation_allOf'
      description: The transformation of the `AFTER` type.The transformation removes
        everything before the specified delimiter and keeps the value after it.
      required:
      - delimiter
      type: object
    ApplicationId:
      description: "The contribution to the service ID calculation from the detected\
        \ application ID. \n\n You have two mutually exclusive options: \n* Override\
        \ the detected value with a specified static value. Specify the new value\
        \ in the **valueOverride** field. \n* Dynamically transform the detected value.\
        \ Specify the transformation parameters in the **transformations** field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    BeforeTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/BeforeTransformation_allOf'
      description: "The transformation of the `BEFORE` type. \n\nThe transformation\
        \ keeps the value before the specified delimiter and removes everything after\
        \ it."
      required:
      - delimiter
      type: object
    BetweenTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/BetweenTransformation_allOf'
      description: The transformation of the `BETWEEN` type.The transformation keeps
        value between the specified delimiters and removes everything outside them.
      required:
      - after
      - before
      type: object
    CompareOperation:
      description: "The condition of the rule. \n\nThe actual set of fields depends\
        \ on the `type` of the condition."
      discriminator:
        propertyName: type
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `EQUALS` -> EqualsCompareOperation\
            \ \n* `STRING_CONTAINS` -> StringContainsCompareOperation \n* `STARTS_WITH`\
            \ -> StartsWithCompareOperation \n* `ENDS_WITH` -> EndsWithCompareOperation\
            \ \n* `EXISTS` -> ExistsCompareOperation \n* `IP_IN_RANGE` -> IpInRangeCompareOperation\
            \ \n* `LESS_THAN` -> LessThanCompareOperation \n* `GREATER_THAN` -> GreaterThanCompareOperation\
            \ \n* `INT_EQUALS` -> IntEqualsCompareOperation \n* `STRING_EQUALS` ->\
            \ StringEqualsCompareOperation \n* `TAG` -> TagCompareOperation \n"
          enum:
          - ENDS_WITH
          - EQUALS
          - EXISTS
          - GREATER_THAN
          - INT_EQUALS
          - IP_IN_RANGE
          - LESS_THAN
          - STARTS_WITH
          - STRING_CONTAINS
          - STRING_EQUALS
          - TAG
          type: string
      required:
      - type
      type: object
    ConditionsFullWebRequestAttributeTypeDto:
      description: A condition of the service detection rule.
      properties:
        attributeType:
          description: The type of the attribute to be checked.
          enum:
          - APPLICATION_ID
          - CONTEXT_ROOT
          - PG_TAG
          - SERVER_NAME
          - URL_HOST_NAME
          - URL_PATH
          type: string
        compareOperations:
          description: "A list of conditions for the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/CompareOperation'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - attributeType
      type: object
    ContextRoot:
      description: "The contribution to the service ID calculation from the detected\
        \ context root. \n\n The context root is the first segment of the request\
        \ URL after server name. For example, in the `www.dynatrace.com/support/help/extend-dynatrace/dynatrace-api/`\
        \ URL the context root is `support`. \n\nYou have two options: \n* Keep a\
        \ part of the detected URL. Specify the number of segments to be kept in the\
        \ **segmentsToCopyFromUrlPath** field. \n* Dynamically transform the detected\
        \ URL. Specify the transformation parameters in the **transformations** field.\
        \ \n\nYou can use one or both options. If you use both, the transformation\
        \ applies to the modified URL."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/ContextRootTransformation'
          maxItems: 10
          minItems: 0
          type: array
        segmentsToCopyFromUrlPath:
          description: "The number of segments of the URL to be kept. \n\nThe URL\
            \ is divided by slashes (`/`), the indexing starts with `1` at context\
            \ root. \n\nFor example, if you specify `2` for the `www.dynatrace.com/support/help/dynatrace-api/`\
            \ URL, the value of `support/help` is used."
          format: int32
          type: integer
      type: object
    ContextRootTransformation:
      description: "Configuration of transformation of the detected value. \n\nIf\
        \ several transformations are specified, they are handled sequentially from\
        \ top to bottom. Each transformation is applied to the result of the preceding\
        \ transformation. For example, the second transformation is applied to the\
        \ result of the first transformation. \n\nThe actual set of fields depends\
        \ on the `type` of the transformation."
      discriminator:
        propertyName: type
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `BEFORE` -> BeforeTransformation\
            \ \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS`\
            \ -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation\
            \ \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` ->\
            \ RemoveIPsTransformation \n"
          enum:
          - BEFORE
          - REMOVE_CREDIT_CARDS
          - REMOVE_IBANS
          - REMOVE_IPS
          - REMOVE_NUMBERS
          - REPLACE_BETWEEN
          type: string
      required:
      - type
      type: object
    EndsWithCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/EndsWithCompareOperation_allOf'
      description: "The condition of the `ENDS_WITH` type. \n\nThe condition checks\
        \ whether the string value ends with the specified text."
      type: object
    EqualsCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/EqualsCompareOperation_allOf'
      description: "The condition of the `EQUALS` type. \n\nThe condition checks whether\
        \ the detected value equals the specified one."
      type: object
    ExistsCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/ExistsCompareOperation_allOf'
      description: "The condition of the `EXISTS` type. \n\nThe condition checks whether\
        \ the specified attribute exists."
      type: object
    FullWebRequestRule:
      description: The service detection rule of the `FULL_WEB_REQUEST` type.
      example:
        type: FULL_WEB_REQUEST
        name: My sample rule
        description: REST API example
        enabled: true
        managementZones:
        - zone 1
        conditions:
        - attributeType: APPLICATION_ID
          compareOperations:
          - type: STRING_CONTAINS
            invert: "false"
            ignoreCase: "false"
            values:
            - value1
            - value2
        applicationId:
          valueOverride: abc
        contextRoot:
          segmentsToCopyFromUrlPath: 2
          transformations:
          - type: BEFORE
            delimiter: /
        serverName:
          transformations:
          - type: BEFORE
            delimiter: '-'
      properties:
        type:
          description: The type of the service detection rule.
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        managementZones:
          description: Specifies the management zones of the process group for which
            this service detection rule should be created.
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        id:
          description: The ID of the service detection rule.
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\n The rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        name:
          description: The name of the rule.
          minLength: 1
          type: string
        description:
          description: A short description of the rule.
          type: string
        enabled:
          description: The rule is enabled(`true`) or disabled (`false`).
          type: boolean
        conditions:
          description: "A list of conditions of the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/ConditionsFullWebRequestAttributeTypeDto'
          maxItems: 10
          minItems: 0
          type: array
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        contextRoot:
          $ref: '#/components/schemas/ContextRoot'
        serverName:
          $ref: '#/components/schemas/ServerName'
      required:
      - enabled
      - name
      - type
      type: object
    GreaterThanCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/GreaterThanCompareOperation_allOf'
      description: "The condition of the `GREATER_THAN` type. \n\nThe condition checks\
        \ whether the integer value is greater than the specified value."
      required:
      - value
      type: object
    IntEqualsCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/IntEqualsCompareOperation_allOf'
      description: "The condition of the `INT_EQUALS` type. \n\nThe condition checks\
        \ whether the integer value equals the specified value."
      type: object
    IpInRangeCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/IpInRangeCompareOperation_allOf'
      description: "The condition of the `IP_IN_RANGE` type. \n\nThe condition checks\
        \ whether the IP address belongs to a specified range."
      required:
      - lower
      - upper
      type: object
    LessThanCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/GreaterThanCompareOperation_allOf'
      description: "The condition of the `LESS_THAN` type. \n\nThe condition checks\
        \ whether the integer value is less than the specified value."
      required:
      - value
      type: object
    RemoveCreditCardNumbersTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      description: "The transformation of the `REMOVE_CREDIT_CARDS` type. \n\nThe\
        \ transformation automatically detects and removes credit card numbers. No\
        \ additional parameters needed."
      type: object
    RemoveIBANsTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      description: "The transformation of the `REMOVE_IBANS` type. \n\nThe transformation\
        \ automatically detects and removes International Bank Account Numbers (IBAN).\
        \ No additional parameters needed."
      type: object
    RemoveIPsTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      description: "The transformation of the `REMOVE_IPS` type. \n\nThe transformation\
        \ automatically detects and removes IP addresses. No additional parameters\
        \ needed."
      type: object
    RemoveNumbersTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/RemoveNumbersTransformation_allOf'
      description: "The transformation of the `REMOVE_NUMBERS` type. \n\nThe transformation\
        \ removes any numbers from the detected value."
      required:
      - minDigitCount
      type: object
    ReplaceBetweenTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/ReplaceBetweenTransformation_allOf'
      description: "The transformation of the `REPLACE_BETWEEN` type. \n\nThe transformation\
        \ replaces the content in between specified delimiters with specified static\
        \ value and removes everything outside them."
      required:
      - after
      - before
      - replacement
      type: object
    ServerName:
      description: "The contribution to the service ID calculation from the detected\
        \ server name. \n\n You have two mutually exclusive options: \n* Override\
        \ the detected value with a specified static value. Specify the new value\
        \ in the **valueOverride** field. \n* Dynamically transform the detected value.\
        \ Specify the transformation parameters in the **transformations** field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    SplitSelectTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/SplitSelectTransformation_allOf'
      description: "The transformation of the `SPLIT_SELECT` type. \n\nThe transformation\
        \ splits the detected value into an array and keeps the specified element\
        \ of the array."
      required:
      - delimiter
      - itemIndex
      type: object
    StartsWithCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/StartsWithCompareOperation_allOf'
      description: "The condition of the `STARTS_WITH` type. \n\nThe condition checks\
        \ whether the string value starts with the specified text."
      type: object
    StringContainsCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/StringContainsCompareOperation_allOf'
      description: "The condition of the `STRING_CONTAINS` type. \n\nThe condition\
        \ checks whether the string value contains the specified text."
      type: object
    StringEqualsCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/StringEqualsCompareOperation_allOf'
      description: "The condition of the `STRING_EQUALS` type. \n\nThe condition checks\
        \ whether the string value equals the specified text."
      type: object
    TagCompareOperation:
      allOf:
      - $ref: '#/components/schemas/CompareOperation'
      - $ref: '#/components/schemas/TagCompareOperation_allOf'
      description: "The condition of the `TAG` type. \n\nThe condition checks if the\
        \ process group of the potential service is tagged with a specific tag."
      type: object
    TakeSegmentsTransformation:
      allOf:
      - $ref: '#/components/schemas/TransformationBase'
      - $ref: '#/components/schemas/TakeSegmentsTransformation_allOf'
      description: "The transformation of the `TAKE_SEGMENTS` type. \n\nThe transformation\
        \ splits the detected value into an array and keeps the specified number of\
        \ first or last elements."
      required:
      - delimiter
      - segmentCount
      type: object
    TransformationBase:
      description: "Configuration of transformation of the detected value. \n\nIf\
        \ several transformations are specified, they are handled sequentially from\
        \ top to bottom. Each transformation is applied to the result of the preceding\
        \ transformation. For example, the second transformation is applied to the\
        \ result of the first transformation. \n\nThe actual set of fields depends\
        \ on the `type` of the transformation."
      discriminator:
        propertyName: type
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `BEFORE` -> BeforeTransformation\
            \ \n* `AFTER` -> AfterTransformation \n* `BETWEEN` -> BetweenTransformation\
            \ \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS`\
            \ -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation\
            \ \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` ->\
            \ RemoveIPsTransformation \n* `SPLIT_SELECT` -> SplitSelectTransformation\
            \ \n* `TAKE_SEGMENTS` -> TakeSegmentsTransformation \n"
          enum:
          - AFTER
          - BEFORE
          - BETWEEN
          - REMOVE_CREDIT_CARDS
          - REMOVE_IBANS
          - REMOVE_IPS
          - REMOVE_NUMBERS
          - REPLACE_BETWEEN
          - SPLIT_SELECT
          - TAKE_SEGMENTS
          type: string
      required:
      - type
      type: object
    ConditionsFullWebServiceAttributeTypeDto:
      description: A condition of the service detection rule.
      properties:
        attributeType:
          description: The type of the attribute to be checked.
          enum:
          - APPLICATION_ID
          - CONTEXT_ROOT
          - FRAMEWORK
          - IS_SOAP_SERVICE
          - PG_TAG
          - SERVER_NAME
          - URL_HOST_NAME
          - URL_PATH
          - WEBSERVICE_METHOD
          - WEBSERVICE_NAME
          - WEBSERVICE_NAMESPACE
          type: string
        compareOperations:
          description: "A list of conditions for the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/CompareOperation'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - attributeType
      type: object
    FullWebServiceRule:
      description: "The service detection rule of the `FULL_WEB_SERVICE` type. \n\n\
        If you have a condition with the **attributeType** set to `FRAMEWORK`, the\
        \ **values** field from **compareOperations** is limited to the following\
        \ possible values: * `AXIS` \n * `CXF` \n * `HESSIAN` \n * `JAX_WS_RI` \n\
        \ * `JBOSS` \n * `JERSEY` \n * `PROGRESS` \n * `RESTEASY` \n * `RESTLET` \n\
        \ * `SPRING` \n * `TIBCO` \n * `WEBLOGIC` \n * `WEBMETHODS` \n * `WEBSPHERE`\
        \ \n * `WINK`"
      example:
        type: FULL_WEB_SERVICE
        name: My sample rule
        description: REST API example
        enabled: true
        detectAsWebRequestService: false
        managementZones:
        - zone 1
        conditions:
        - attributeType: APPLICATION_ID
          compareOperations:
          - type: STRING_CONTAINS
            invert: "false"
            ignoreCase: "false"
            values:
            - value1
            - value2
        webServiceName:
          valueOverride: abc
        webServiceNameSpace:
          valueOverride: abc
        applicationId:
          valueOverride: abc
        contextRoot:
          segmentsToCopyFromUrlPath: 2
          transformations:
          - type: BEFORE
            delimiter: /
        serverName:
          transformations:
          - type: BEFORE
            delimiter: '-'
      properties:
        type:
          description: The type of the service detection rule.
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        managementZones:
          description: Specifies the management zones of the process group for which
            this service detection rule should be created.
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        id:
          description: The ID of the service detection rule.
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\n The rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        name:
          description: The name of the rule.
          minLength: 1
          type: string
        description:
          description: A short description of the rule.
          type: string
        enabled:
          description: The rule is enabled(`true`) or disabled (`false`).
          type: boolean
        conditions:
          description: "A list of conditions of the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/ConditionsFullWebServiceAttributeTypeDto'
          maxItems: 10
          minItems: 0
          type: array
        detectAsWebRequestService:
          description: "Detect the matching requests as full web services (`false`)\
            \ or web request services (`true`). \n\nSetting this field to `true` prevents\
            \ detecting of matching requests as full web services. A web request service\
            \ is created instead. If you need to further modify the resulting web\
            \ request service, you need to create a separate rule of the `FULL_WEB_REQUEST`\
            \ type. \n\nDefault is `false`, detecting matching requests as full web\
            \ services."
          type: boolean
        webServiceName:
          $ref: '#/components/schemas/WebServiceName'
        webServiceNameSpace:
          $ref: '#/components/schemas/WebServiceNameSpace'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        contextRoot:
          $ref: '#/components/schemas/ContextRoot'
        serverName:
          $ref: '#/components/schemas/ServerName'
      required:
      - enabled
      - name
      - type
      type: object
    WebServiceName:
      description: "The contribution to the service ID calculation from the detected\
        \ web service name. \n\n You have two mutually exclusive options: \n* Override\
        \ the detected value with a specified static value. Specify the new value\
        \ in the **valueOverride** field. \n* Dynamically transform the detected value.\
        \ Specify the transformation parameters in the **transformations** field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    WebServiceNameSpace:
      description: "The contribution to the service ID calculation from the detected\
        \ web service name space. \n\n You have two mutually exclusive options: \n\
        * Override the detected value with a specified static value. Specify the new\
        \ value in the **valueOverride** field. \n* Dynamically transform the detected\
        \ value. Specify the transformation parameters in the **transformations**\
        \ field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    ConditionsOpaqueAndExternalWebRequestAttributeTypeDto:
      description: A condition of the service detection rule.
      properties:
        attributeType:
          description: The type of the attribute to be checked.
          enum:
          - IP
          - PG_TAG
          - TOP_LEVEL_DOMAIN
          - URL
          - URL_HOST_NAME
          - URL_PATH
          - URL_PORT
          type: string
        compareOperations:
          description: "A list of conditions for the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/CompareOperation'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - attributeType
      type: object
    OpaqueAndExternalWebRequestRule:
      description: The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST`
        type.
      example:
        type: OPAQUE_AND_EXTERNAL_WEB_REQUEST
        name: My sample rule
        description: REST API example
        enabled: true
        managementZones:
        - zone1
        conditions:
        - attributeType: URL_HOST_NAME
          compareOperations:
          - type: STRING_CONTAINS
            ignoreCase: "false"
            values:
            - value1
            - value2
        applicationId:
          valueOverride: abc
        contextRoot:
          segmentsToCopyFromUrlPath: 2
          transformations:
          - type: BEFORE
            delimiter: /
        port:
          doNotUseForServiceId: "true"
        publicDomainName:
          copyFromHostName: "true"
          transformations:
          - type: BEFORE
            delimiter: /
      properties:
        type:
          description: The type of the service detection rule.
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        managementZones:
          description: Specifies the management zones of the process group for which
            this service detection rule should be created.
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        id:
          description: The ID of the service detection rule.
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\n The rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        name:
          description: The name of the rule.
          minLength: 1
          type: string
        description:
          description: A short description of the rule.
          type: string
        enabled:
          description: The rule is enabled(`true`) or disabled (`false`).
          type: boolean
        conditions:
          description: "A list of conditions of the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/ConditionsOpaqueAndExternalWebRequestAttributeTypeDto'
          maxItems: 10
          minItems: 0
          type: array
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        contextRoot:
          $ref: '#/components/schemas/ContextRoot'
        port:
          $ref: '#/components/schemas/Port'
        publicDomainName:
          $ref: '#/components/schemas/PublicDomainName'
      required:
      - enabled
      - name
      - type
      type: object
    Port:
      description: The contribution to the service ID calculation from the port, where
        the web request has been detected.
      properties:
        doNotUseForServiceId:
          description: The port is used (`false`) or isn't used (`true`) in the service
            ID calculation.
          type: boolean
      type: object
    PublicDomainName:
      description: "The contribution to the service ID calculation from the domain\
        \ name where the web request has been detected. \n\n You have two mutually\
        \ exclusive options: \n* Override the detected value with a specified static\
        \ value. Specify the new value in the **valueOverride** field. \n* Dynamically\
        \ transform the detected value. Specify the transformation parameters in the\
        \ **transformations** field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
        copyFromHostName:
          description: "Use (`true`) or don't use (`false`) the detected host name\
            \ as base for transformation. \n\n Not applicable if the override is specified."
          type: boolean
      type: object
    ConditionsOpaqueAndExternalWebServiceAttributeTypeDto:
      description: A condition of the service detection rule.
      properties:
        attributeType:
          description: The type of the attribute to be checked.
          enum:
          - ENDPOINT
          - IP
          - OPERATION_NAME
          - PG_TAG
          - URL_PATH
          - URL_PORT
          type: string
        compareOperations:
          description: "A list of conditions for the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/CompareOperation'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - attributeType
      type: object
    OpaqueAndExternalWebServiceRule:
      description: The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_SERVICE`
        type
      example:
        type: OPAQUE_AND_EXTERNAL_WEB_SERVICE
        name: My sample rule
        description: REST API example
        enabled: true
        detectAsWebRequestService: false
        managementZones:
        - zone 1
        conditions:
        - attributeType: URL_PATH
          compareOperations:
          - type: STRING_CONTAINS
            invert: "false"
            ignoreCase: "false"
            values:
            - value1
            - value2
        urlPath:
          valueOverride: abc
        port:
          doNotUseForServiceId: "true"
      properties:
        type:
          description: The type of the service detection rule.
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        managementZones:
          description: Specifies the management zones of the process group for which
            this service detection rule should be created.
          items:
            type: string
          maxItems: 1
          minItems: 0
          type: array
        id:
          description: The ID of the service detection rule.
          format: uuid
          type: string
        order:
          description: "The order of the rule in the rules list. \n\n The rules are\
            \ evaluated from top to bottom. The first matching rule applies."
          maxLength: 2147483647
          minLength: 1
          type: string
        name:
          description: The name of the rule.
          minLength: 1
          type: string
        description:
          description: A short description of the rule.
          type: string
        enabled:
          description: The rule is enabled(`true`) or disabled (`false`).
          type: boolean
        conditions:
          description: "A list of conditions of the rule. \n\nIf several conditions\
            \ are specified, the AND logic applies."
          items:
            $ref: '#/components/schemas/ConditionsOpaqueAndExternalWebServiceAttributeTypeDto'
          maxItems: 10
          minItems: 0
          type: array
        detectAsWebRequestService:
          description: "Detect the matching requests as web services (`false`) or\
            \ web request services (`true`). \n\nSetting this field to `true` prevents\
            \ detecting of matching requests as opaque web services. An opaque web\
            \ request service is created instead. If you need to further modify the\
            \ resulting web request service, you need to create a separate rule of\
            \ the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type. \n\nDefault is `false`,\
            \ detecting matching requests as opaque web services."
          type: boolean
        urlPath:
          $ref: '#/components/schemas/UrlPath'
        port:
          $ref: '#/components/schemas/Port'
      required:
      - enabled
      - name
      - type
      type: object
    UrlPath:
      description: "The contribution from the URL, where the web request has been\
        \ detected, into service ID calculation. \n\n You have two mutually exclusive\
        \ options: \n* Override the detected value with a specified static value.\
        \ Specify the new value in the **valueOverride** field. \n* Dynamically transform\
        \ the detected value. Specify the transformation parameters in the **transformations**\
        \ field."
      properties:
        transformations:
          description: Transformations to be applied to the detected value.
          items:
            $ref: '#/components/schemas/TransformationBase'
          maxItems: 10
          minItems: 0
          type: array
        valueOverride:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    SymbolFileStorageInfo:
      example:
        storageQuota: 1
        availableStorage: 6
        fileCount: 5
        usedStorage: 0
      properties:
        usedStorage:
          description: The size of the used storage by symbolication files in KB
          format: int64
          type: integer
        availableStorage:
          description: The storage space still empty which can be used for symbolication
            files in KB
          format: int64
          type: integer
        storageQuota:
          description: The total storage quota available on this tenant for symbolication
            files in KB
          format: int64
          type: integer
        fileCount:
          format: int64
          type: integer
      type: object
    AppIdentifier:
      description: The appId, the app version and the bundle id which uniquely identify
        the app
      example:
        os: ANDROID
        id: id
        packageName: packageName
        versionName: versionName
        versionCode: versionCode
      properties:
        id:
          description: The id where the file belongs to
          type: string
        versionCode:
          description: The version code (Android) / bundle version (iOS) the file
            belongs to
          type: string
        versionName:
          description: The version name (Android) / bundle versions string (iOS) the
            file belongs to
          type: string
        packageName:
          description: The bundleId (iOS) or package name (Android) the file belongs
            to
          type: string
        os:
          description: The operating system where the file belongs to
          enum:
          - ANDROID
          - IOS
          - TVOS
          type: string
      required:
      - versionCode
      - versionName
      type: object
    SymbolFile:
      example:
        pinned: true
        size: 0
        uploadTimestamp: 6
        appId:
          os: ANDROID
          id: id
          packageName: packageName
          versionName: versionName
          versionCode: versionCode
        applicationName: applicationName
      properties:
        applicationName:
          description: The name of the application this file belongs to
          type: string
        size:
          description: The size of the file in KB
          format: int32
          type: integer
        appId:
          $ref: '#/components/schemas/AppIdentifier'
        uploadTimestamp:
          description: The timestamp of the upload time of the file, in UTC milliseconds
          format: int64
          type: integer
        pinned:
          description: Is the file pinned and therefore cannot be deleted.
          type: boolean
      type: object
    SymbolFileList:
      example:
        symbolFiles:
        - pinned: true
          size: 0
          uploadTimestamp: 6
          appId:
            os: ANDROID
            id: id
            packageName: packageName
            versionName: versionName
            versionCode: versionCode
          applicationName: applicationName
        - pinned: true
          size: 0
          uploadTimestamp: 6
          appId:
            os: ANDROID
            id: id
            packageName: packageName
            versionName: versionName
            versionCode: versionCode
          applicationName: applicationName
      properties:
        symbolFiles:
          description: A list of symbolication files.
          items:
            $ref: '#/components/schemas/SymbolFile'
          type: array
      type: object
    SupportedVersion:
      example:
        version: version
      properties:
        version:
          description: The supported iOS file format version.
          type: string
      type: object
    SymbolFilePinning:
      example:
        pinned: true
      properties:
        pinned:
          description: New setting for file pinning. True to pin the file, false to
            unpin the file
          type: boolean
      required:
      - pinned
      type: object
    SymbolFileClientLinkDto:
      example:
        dssClientUrl: dssClientUrl
      properties:
        dssClientUrl:
          description: A download link for the latest compatible version of the DTXDSSClient.
          type: string
      required:
      - dssClientUrl
      type: object
    AwsIamToken:
      description: The external ID token for setting IAM Role in AWS.
      example:
        token: token
      properties:
        token:
          description: The external ID token for setting IAM Role in AWS.
          type: string
      required:
      - token
      type: object
    AwsAuthenticationData:
      description: A credentials for the AWS authentication.
      example:
        keyBasedAuthentication:
          secretKey: secretKey
          accessKey: accessKey
        roleBasedAuthentication:
          iamRole: iamRole
          accountId: accountId
          externalId: externalId
        type: KEYS
      properties:
        type:
          description: 'The type of the authentication: role-based or key-based.'
          enum:
          - KEYS
          - ROLE
          type: string
        keyBasedAuthentication:
          $ref: '#/components/schemas/KeyBasedAuthentication'
        roleBasedAuthentication:
          $ref: '#/components/schemas/RoleBasedAuthentication'
      required:
      - type
      type: object
    AwsConfigTag:
      description: An AWS tag of the resource to be monitored.
      example:
        name: name
        value: value
      properties:
        name:
          description: The key of the AWS tag.
          type: string
        value:
          description: The value of the AWS tag.
          type: string
      required:
      - name
      - value
      type: object
    AwsCredentialsConfig:
      description: Configuration of an AWS credentials.
      example:
        authenticationData:
          keyBasedAuthentication:
            secretKey: secretKey
            accessKey: accessKey
          roleBasedAuthentication:
            iamRole: iamRole
            accountId: accountId
            externalId: externalId
          type: KEYS
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        supportingServicesToMonitor:
        - monitoredMetrics:
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          name: name
        - monitoredMetrics:
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          - statistic: AVERAGE
            name: name
            dimensions:
            - dimensions
            - dimensions
            - dimensions
            - dimensions
            - dimensions
          name: name
        tagsToMonitor:
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        connectionStatus: CONNECTED
        taggedOnly: true
        id: id
        label: label
        partitionType: AWS_CN
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The unique ID of the credentials.
          readOnly: true
          type: string
        connectionStatus:
          description: "The status of the connection to the AWS environment. \n\n\
            \ * `CONNECTED`: There was a connection within last 10 minutes. \n* `DISCONNECTED`:\
            \ A problem occurred with establishing connection using these credentials.\
            \ Check whether the data is correct. \n* `UNINITIALIZED`: The successful\
            \ connection has never been established for these credentials."
          enum:
          - CONNECTED
          - DISCONNECTED
          - UNINITIALIZED
          readOnly: true
          type: string
        label:
          description: The name of the credentials.
          minLength: 1
          type: string
        partitionType:
          description: The type of the AWS partition.
          enum:
          - AWS_CN
          - AWS_DEFAULT
          - AWS_US_GOV
          type: string
        authenticationData:
          $ref: '#/components/schemas/AwsAuthenticationData'
        taggedOnly:
          description: Monitor only resources which have specified AWS tags (`true`)
            or all resources (`false`).
          type: boolean
        tagsToMonitor:
          description: "A list of AWS tags to be monitored. \n\nYou can specify up\
            \ to 10 tags. \n\nOnly applicable when the **taggedOnly** parameter is\
            \ set to `true`."
          items:
            $ref: '#/components/schemas/AwsConfigTag'
          maxItems: 10
          minItems: 0
          type: array
        supportingServicesToMonitor:
          description: A list of supporting services to be monitored.
          items:
            $ref: '#/components/schemas/AwsSupportingServiceConfig'
          type: array
      required:
      - authenticationData
      - label
      - partitionType
      - taggedOnly
      - tagsToMonitor
      type: object
    AwsSupportingServiceConfig:
      description: A supporting service to be monitored.
      example:
        monitoredMetrics:
        - statistic: AVERAGE
          name: name
          dimensions:
          - dimensions
          - dimensions
          - dimensions
          - dimensions
          - dimensions
        - statistic: AVERAGE
          name: name
          dimensions:
          - dimensions
          - dimensions
          - dimensions
          - dimensions
          - dimensions
        - statistic: AVERAGE
          name: name
          dimensions:
          - dimensions
          - dimensions
          - dimensions
          - dimensions
          - dimensions
        - statistic: AVERAGE
          name: name
          dimensions:
          - dimensions
          - dimensions
          - dimensions
          - dimensions
          - dimensions
        - statistic: AVERAGE
          name: name
          dimensions:
          - dimensions
          - dimensions
          - dimensions
          - dimensions
          - dimensions
        name: name
      properties:
        name:
          description: The name of the supporting service.
          type: string
        monitoredMetrics:
          description: A list of metrics to be monitored for this service.
          items:
            $ref: '#/components/schemas/AwsSupportingServiceMetric'
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - monitoredMetrics
      - name
      type: object
    AwsSupportingServiceMetric:
      description: A metric of supporting service to be monitored.
      example:
        statistic: AVERAGE
        name: name
        dimensions:
        - dimensions
        - dimensions
        - dimensions
        - dimensions
        - dimensions
      properties:
        name:
          description: The name of the metric of the supporting service.
          type: string
        statistic:
          description: 'The statistic (aggregation) to be used for the metric. AVG_MIN_MAX
            value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM'
          enum:
          - AVERAGE
          - AVG_MIN_MAX
          - MAXIMUM
          - MINIMUM
          - SAMPLE_COUNT
          - SUM
          type: string
        dimensions:
          description: A list of metric's dimensions names.
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - dimensions
      - name
      - statistic
      type: object
    KeyBasedAuthentication:
      description: The credentials for the key-based authentication.
      example:
        secretKey: secretKey
        accessKey: accessKey
      properties:
        accessKey:
          description: The ID of the access key.
          minLength: 1
          type: string
        secretKey:
          description: The secret access key.
          minLength: 1
          type: string
      required:
      - accessKey
      - secretKey
      type: object
    RoleBasedAuthentication:
      description: The credentials for the role-based authentication.
      example:
        iamRole: iamRole
        accountId: accountId
        externalId: externalId
      properties:
        iamRole:
          description: The IAM role to be used by Dynatrace to get monitoring data.
          minLength: 1
          type: string
        accountId:
          description: The ID of the Amazon account.
          minLength: 1
          type: string
        externalId:
          description: "The external ID token for setting an IAM role. \n\n You can\
            \ obtain it with the `GET /aws/iamExternalId` request."
          readOnly: true
          type: string
      required:
      - accountId
      - iamRole
      type: object
    WhitelistedAwsAccount:
      example:
        id: id
      properties:
        id:
          description: The AWS account id to whitelist
          maxLength: 12
          minLength: 12
          pattern: '[0-9]*'
          type: string
      required:
      - id
      type: object
    WhitelistedAwsAccountList:
      example:
        values:
        - id: id
        - id: id
      properties:
        values:
          items:
            $ref: '#/components/schemas/WhitelistedAwsAccount'
          type: array
      type: object
    AwsPrivateLinkConfig:
      example:
        vpcEndpointServiceName: vpcEndpointServiceName
        enabled: true
      properties:
        enabled:
          description: Is AWS PrivateLink enabled
          type: boolean
        vpcEndpointServiceName:
          description: The VirtualPrivateCluster-service name
          readOnly: true
          type: string
      required:
      - enabled
      type: object
    AzureCredentials:
      description: Configuration of Azure app-level credentials.
      example:
        supportingServices:
        - monitoredMetrics:
          - name: name
            dimensions:
            - dimensions
            - dimensions
          - name: name
            dimensions:
            - dimensions
            - dimensions
          name: name
        - monitoredMetrics:
          - name: name
            dimensions:
            - dimensions
            - dimensions
          - name: name
            dimensions:
            - dimensions
            - dimensions
          name: name
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        appId: appId
        active: true
        directoryId: directoryId
        monitorOnlyTagPairs:
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        id: id
        label: label
        autoTagging: true
        monitorOnlyTaggedEntities: true
        key: key
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The Dynatrace entity ID of the Azure credentials configuration.
          readOnly: true
          type: string
        label:
          description: "The unique name of the Azure credentials configuration. \n\
            \nAllowed characters are letters, numbers, and spaces. Also the special\
            \ characters `.+-_` are allowed."
          minLength: 1
          pattern: ^([a-zA-Z0-9_ +-.]*)$
          type: string
        appId:
          description: |-
            The Application ID (also referred to as Client ID)

             The combination of Application ID and Directory ID must be unique.
          minLength: 1
          readOnly: true
          type: string
        directoryId:
          description: |-
            The Directory ID (also referred to as Tenant ID)

             The combination of Application ID and Directory ID must be unique.
          minLength: 1
          readOnly: true
          type: string
        key:
          description: "The secret key associated with the Application ID. \n\nFor\
            \ security reasons, GET requests return this field as `null`. \n\n Submit\
            \ your key on creation or update of the configuration. If the field is\
            \ omitted during an update, the old value remains unaffected."
          type: string
        active:
          description: "The monitoring is enabled (`true`) or disabled (`false`).\
            \ \n\nIf not set on creation, the `true` value is used. \n\nIf the field\
            \ is omitted during an update, the old value remains unaffected."
          type: boolean
        autoTagging:
          description: The automatic capture of Azure tags is on (`true`) or off (`false`).
          type: boolean
        monitorOnlyTaggedEntities:
          description: Monitor only resources that have specified Azure tags (`true`)
            or all resources (`false`).
          type: boolean
        monitorOnlyTagPairs:
          description: "A list of Azure tags to be monitored. \n\nYou can specify\
            \ up to 10 tags. A resource tagged with *any* of the specified tags is\
            \ monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities**\
            \ parameter is set to `true`."
          items:
            $ref: '#/components/schemas/CloudTag'
          maxItems: 10
          minItems: 0
          type: array
          uniqueItems: true
        supportingServices:
          description: A list of Azure supporting services to be monitored. For each
            service there's a sublist of its metrics and the metrics' dimensions that
            should be monitored. All of these elements (services, metrics, dimensions)
            must have corresponding static definitions on the server.
          items:
            $ref: '#/components/schemas/AzureSupportingService'
          type: array
      required:
      - appId
      - autoTagging
      - directoryId
      - label
      - monitorOnlyTagPairs
      - monitorOnlyTaggedEntities
      type: object
    AzureMonitoredMetric:
      description: A metric of supporting service to be monitored.
      example:
        name: name
        dimensions:
        - dimensions
        - dimensions
      properties:
        name:
          description: The name of the metric of the supporting service.
          type: string
        dimensions:
          description: A list of metric's dimensions names. It must include all the
            recommended dimensions.
          items:
            type: string
          type: array
      type: object
    AzureSupportingService:
      description: A supporting service to be monitored.
      example:
        monitoredMetrics:
        - name: name
          dimensions:
          - dimensions
          - dimensions
        - name: name
          dimensions:
          - dimensions
          - dimensions
        name: name
      properties:
        name:
          description: The name of the supporting service.
          type: string
        monitoredMetrics:
          description: A list of metrics to be monitored for this service. It must
            include all the recommended metrics.
          items:
            $ref: '#/components/schemas/AzureMonitoredMetric'
          type: array
      type: object
    CloudTag:
      description: A cloud tag.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the tag.
          type: string
        value:
          description: "The value of the tag. \n\n If set to `null`, then resources\
            \ with any value of the tag are monitored."
          type: string
      type: object
    CloudFoundryCredentials:
      description: Configuration for specific Cloud Foundry credentials.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        password: password
        apiUrl: apiUrl
        loginUrl: loginUrl
        endpointStatus: ASSIGNED
        name: name
        active: true
        id: id
        endpointStatusInfo: endpointStatusInfo
        username: username
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the given credentials configuration.
          readOnly: true
          type: string
        active:
          description: "The monitoring is enabled (`true`) or disabled (`false`) for\
            \ given credentials configuration. \n\nIf not set on creation, the `true`\
            \ value is used. \n\nIf the field is omitted during an update, the old\
            \ value remains unaffected."
          type: boolean
        endpointStatus:
          description: |
            The status of the configured endpoint.

            ASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.
            UNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.
            DISABLED: The credentials have been disabled by the user.
            FASTCHECK_AUTH_ERROR: The credentials are invalid.
            FASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.
            FASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.
            FASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.
            FASTCHECK_AUTH_LOCKED: The credentials seem to be locked.
            UNKNOWN: An unknown error occured.
          enum:
          - ASSIGNED
          - DISABLED
          - FASTCHECK_AUTH_ERROR
          - FASTCHECK_AUTH_LOCKED
          - FASTCHECK_INVALID_ENDPOINT
          - FASTCHECK_LOW_MEMORY_ERROR
          - FASTCHECK_NO_RESPONSE
          - FASTCHECK_TLS_ERROR
          - UNASSIGNED
          - UNKNOWN
          readOnly: true
          type: string
        endpointStatusInfo:
          description: The detailed status info of the configured endpoint.
          readOnly: true
          type: string
        name:
          description: "The name of the Cloud Foundry foundation credentials. \n\n\
            Allowed characters are letters, numbers, whitespaces, and the following\
            \ characters: `.+-_`. Leading or trailing whitespace is not allowed."
          minLength: 1
          pattern: ^([a-zA-Z0-9_ +-.]*)$
          type: string
        apiUrl:
          description: "The URL of the Cloud Foundry foundation credentials. \n\n\
            The URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces\
            \ are not allowed."
          type: string
        loginUrl:
          description: "The login URL of the Cloud Foundry foundation credentials.\
            \ \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing\
            \ whitespaces are not allowed."
          type: string
        username:
          description: "The username of the Cloud Foundry foundation credentials.\
            \ \n\nLeading and trailing whitespaces are not allowed."
          minLength: 1
          type: string
        password:
          description: The password of the Cloud Foundry foundation credentials.
          type: string
      required:
      - apiUrl
      - loginUrl
      - name
      - username
      type: object
    KubernetesCredentials:
      description: Configuration for specific Kubernetes credentials.
      example:
        id: KUBERNETES_CLUSTER-CC06304728FC9396
        label: K8s credentials - REST example
        endpointUrl: https://k8s-api.sample.org
        eventsFieldSelectors:
        - label: Node events
          fieldSelector: involvedObject.kind=Node
          active: true
        workloadIntegrationEnabled: true
        eventsIntegrationEnabled: true
        authToken: abcd9876
        active: true
        certificateCheckEnabled: true
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the given credentials configuration.
          readOnly: true
          type: string
        active:
          description: "The monitoring is enabled (`true`) or disabled (`false`) for\
            \ given credentials configuration. \n\nIf not set on creation, the `true`\
            \ value is used. \n\nIf the field is omitted during an update, the old\
            \ value remains unaffected."
          type: boolean
        endpointStatus:
          description: |
            The status of the configured endpoint.

            ASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.
            UNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.
            DISABLED: The credentials have been disabled by the user.
            FASTCHECK_AUTH_ERROR: The credentials are invalid.
            FASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.
            FASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.
            FASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.
            FASTCHECK_AUTH_LOCKED: The credentials seem to be locked.
            UNKNOWN: An unknown error occured.
          enum:
          - ASSIGNED
          - DISABLED
          - FASTCHECK_AUTH_ERROR
          - FASTCHECK_AUTH_LOCKED
          - FASTCHECK_INVALID_ENDPOINT
          - FASTCHECK_LOW_MEMORY_ERROR
          - FASTCHECK_NO_RESPONSE
          - FASTCHECK_TLS_ERROR
          - UNASSIGNED
          - UNKNOWN
          readOnly: true
          type: string
        endpointStatusInfo:
          description: The detailed status info of the configured endpoint.
          readOnly: true
          type: string
        label:
          description: "The name of the Kubernetes credentials configuration. \n\n\
            Allowed characters are letters, numbers, whitespaces, and the following\
            \ characters: `.+-_`. Leading or trailing whitespace is not allowed."
          minLength: 1
          pattern: ^([a-zA-Z0-9_ +-.]*)$
          type: string
        endpointUrl:
          description: "The URL of the Kubernetes API server. \n\nIt must be unique\
            \ within a Dynatrace environment. \n\nThe URL must valid according to\
            \ RFC 2396. Leading or trailing whitespaces are not allowed."
          type: string
        authToken:
          description: "The service account bearer token for the Kubernetes API server.\
            \ \n\nSubmit your token on creation or update of the configuration. For\
            \ security reasons, GET requests return this field as `null`. \n\nIf the\
            \ field is omitted during an update, the old value remains unaffected."
          type: string
        eventsIntegrationEnabled:
          description: "The monitoring of events is enabled (`true`) or disabled (`false`)\
            \ for the Kubernetes cluster. Event monitoring depends on the active state\
            \ of this configuration to be true. \n\nIf not set on creation, the `false`\
            \ value is used. \n\nIf the field is omitted during an update, the old\
            \ value remains unaffected."
          type: boolean
        workloadIntegrationEnabled:
          description: Workload and cloud application processing is enabled (`true`)
            or disabled (`false`) for the Kubernetes cluster. If the field is omitted
            during an update, the old value remains unaffected.
          type: boolean
        eventsFieldSelectors:
          description: Kubernetes event filters based on field-selectors. If set to
            `null` on creation, no events field selectors are subscribed. If set to
            `null` on update, no change of stored events field selectors is applied.
            Set an empty list to clear all events field selectors.
          items:
            $ref: '#/components/schemas/KubernetesEventPattern'
          maxItems: 10
          minItems: 0
          type: array
        certificateCheckEnabled:
          description: "The check of SSL certificates is enabled (`true`) or disabled\
            \ (`false`) for the Kubernetes cluster. \n\nIf not set on creation, the\
            \ `true` value is used. \n\nIf the field is omitted during an update,\
            \ the old value remains unaffected."
          type: boolean
      required:
      - endpointUrl
      - label
      type: object
    KubernetesEventPattern:
      description: Represents a single Kubernetes events field selector (=event filter
        based on the K8s field selector).
      properties:
        label:
          description: A label of the events field selector.
          minLength: 1
          pattern: ^([a-zA-Z0-9_ +-.]*)$
          type: string
        fieldSelector:
          description: The field selector string (url decoding is applied) when storing
            it.
          pattern: '[\w\.]+((=){1,2}|(!=))[\w]([\.\-\w]*[\w])?(,[\w\.]+((=){1,2}|(!=))[\w]([\.\-\w]*[\w])?){0,9}'
          type: string
        active:
          description: Whether subscription to this events field selector is enabled
            (value set to `true`). If disabled (value set to `false`), Dynatrace will
            stop fetching events from the Kubernetes API for this events field selector
          type: boolean
      required:
      - active
      - fieldSelector
      - label
      type: object
    MaintenanceWindow:
      description: Configuration of a maintenance window.
      example:
        metadata:
          configurationVersions:
          - 4
          - 2
          clusterVersion: Mock version
        name: Example Window
        description: An example Maintenance window
        type: UNPLANNED
        suppression: DETECT_PROBLEMS_AND_ALERT
        scope:
          entities:
          - HOST-0000000000123456
          matches:
          - type: HOST
            mzId: "123456789"
            tags:
            - key: testkey
              value: testvalue
              context: AWS
            tagCombination: AND
        schedule:
          recurrenceType: MONTHLY
          recurrence:
            dayOfMonth: "23"
            startTime: 16:28
            durationMinutes: "60"
          start: 2018-08-02 00:00
          end: 2019-02-27 00:00
          zoneId: Europe/Vienna
      properties:
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
        id:
          description: The ID of the maintenance window.
          format: uuid
          type: string
        name:
          description: The name of the maintenance window, displayed in the UI.
          minLength: 1
          type: string
        description:
          description: A short description of the maintenance purpose.
          type: string
        type:
          description: 'The type of the maintenance: planned or unplanned.'
          enum:
          - PLANNED
          - UNPLANNED
          type: string
        suppression:
          description: The type of suppression of alerting and problem detection during
            the maintenance.
          enum:
          - DETECT_PROBLEMS_AND_ALERT
          - DETECT_PROBLEMS_DONT_ALERT
          - DONT_DETECT_PROBLEMS
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        schedule:
          $ref: '#/components/schemas/Schedule'
      required:
      - description
      - name
      - schedule
      - suppression
      - type
      type: object
    MonitoredEntityFilter:
      description: A matching rule for Dynatrace entities.
      properties:
        type:
          description: The type of the Dynatrace entities (for example, hosts or services)
            you want to pick up by matching.
          enum:
          - APM_SECURITY_GATEWAY
          - APPLICATION
          - APPLICATION_METHOD
          - APPLICATION_METHOD_GROUP
          - APPMON_SERVER
          - APPMON_SYSTEM_PROFILE
          - AUTO_SCALING_GROUP
          - AUXILIARY_SYNTHETIC_TEST
          - AWS_APPLICATION_LOAD_BALANCER
          - AWS_AVAILABILITY_ZONE
          - AWS_CREDENTIALS
          - AWS_LAMBDA_FUNCTION
          - AWS_NETWORK_LOAD_BALANCER
          - AZURE_API_MANAGEMENT_SERVICE
          - AZURE_APPLICATION_GATEWAY
          - AZURE_COSMOS_DB
          - AZURE_CREDENTIALS
          - AZURE_EVENT_HUB
          - AZURE_EVENT_HUB_NAMESPACE
          - AZURE_FUNCTION_APP
          - AZURE_IOT_HUB
          - AZURE_LOAD_BALANCER
          - AZURE_MGMT_GROUP
          - AZURE_REDIS_CACHE
          - AZURE_REGION
          - AZURE_SERVICE_BUS_NAMESPACE
          - AZURE_SERVICE_BUS_QUEUE
          - AZURE_SERVICE_BUS_TOPIC
          - AZURE_SQL_DATABASE
          - AZURE_SQL_ELASTIC_POOL
          - AZURE_SQL_SERVER
          - AZURE_STORAGE_ACCOUNT
          - AZURE_SUBSCRIPTION
          - AZURE_TENANT
          - AZURE_VM
          - AZURE_VM_SCALE_SET
          - AZURE_WEB_APP
          - CF_APPLICATION
          - CF_FOUNDATION
          - CINDER_VOLUME
          - CLOUD_APPLICATION
          - CLOUD_APPLICATION_INSTANCE
          - CLOUD_APPLICATION_NAMESPACE
          - CONTAINER_GROUP
          - CONTAINER_GROUP_INSTANCE
          - CUSTOM_APPLICATION
          - CUSTOM_DEVICE
          - CUSTOM_DEVICE_GROUP
          - DCRUM_APPLICATION
          - DCRUM_SERVICE
          - DCRUM_SERVICE_INSTANCE
          - DEVICE_APPLICATION_METHOD
          - DISK
          - DOCKER_CONTAINER_GROUP
          - DOCKER_CONTAINER_GROUP_INSTANCE
          - DYNAMO_DB_TABLE
          - EBS_VOLUME
          - EC2_INSTANCE
          - ELASTIC_LOAD_BALANCER
          - ENVIRONMENT
          - EXTERNAL_SYNTHETIC_TEST_STEP
          - GCP_ZONE
          - GEOLOCATION
          - GEOLOC_SITE
          - GOOGLE_COMPUTE_ENGINE
          - HOST
          - HOST_GROUP
          - HTTP_CHECK
          - HTTP_CHECK_STEP
          - HYPERVISOR
          - KUBERNETES_CLUSTER
          - KUBERNETES_NODE
          - MOBILE_APPLICATION
          - NETWORK_INTERFACE
          - NEUTRON_SUBNET
          - OPENSTACK_PROJECT
          - OPENSTACK_REGION
          - OPENSTACK_VM
          - OS
          - PROCESS_GROUP
          - PROCESS_GROUP_INSTANCE
          - RELATIONAL_DATABASE_SERVICE
          - SERVICE
          - SERVICE_INSTANCE
          - SERVICE_METHOD
          - SERVICE_METHOD_GROUP
          - SWIFT_CONTAINER
          - SYNTHETIC_LOCATION
          - SYNTHETIC_TEST
          - SYNTHETIC_TEST_STEP
          - VIRTUALMACHINE
          - VMWARE_DATACENTER
          type: string
        mzId:
          description: The ID of a management zone to which the matched entities must
            belong.
          type: string
        tags:
          description: "The tag you want to use for matching. \n\nYou can use custom\
            \ tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes,\
            \ and tags based on environment variables."
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
        tagCombination:
          description: "The logic that applies when several tags are specified: AND/OR.\
            \ \n\nIf not set, the OR logic is used."
          enum:
          - AND
          - OR
          type: string
      required:
      - tags
      type: object
    Recurrence:
      description: The recurrence of the maintenance window.
      properties:
        dayOfWeek:
          description: "The day of the week for weekly maintenance. \n\nThe format\
            \ is the full name of the day in upper case, for example `THURSDAY`."
          enum:
          - FRIDAY
          - MONDAY
          - SATURDAY
          - SUNDAY
          - THURSDAY
          - TUESDAY
          - WEDNESDAY
          type: string
        dayOfMonth:
          description: "The day of the month for monthly maintenance. \n\nThe value\
            \ of `31` is treated as the last day of the month for months that don't\
            \ have a 31st day.\nThe value of `30` is also treated as the last day\
            \ of the month for February."
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        startTime:
          description: The start time of the maintenance window in HH:mm format.
          type: string
        durationMinutes:
          description: The duration of the maintenance window in minutes.
          format: int32
          maximum: 1440
          minimum: 1
          type: integer
      required:
      - durationMinutes
      - startTime
      type: object
    Schedule:
      description: The schedule of the maintenance window.
      properties:
        recurrenceType:
          description: The type of the schedule recurrence.
          enum:
          - DAILY
          - MONTHLY
          - ONCE
          - WEEKLY
          type: string
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        start:
          description: The start date and time of the maintenance window validity
            period in yyyy-mm-dd HH:mm format.
          type: string
        end:
          description: The end date and time of the maintenance window validity period
            in yyyy-mm-dd HH:mm format.
          type: string
        zoneId:
          description: "The time zone of the start and end time. Default time zone\
            \ is UTC. \n\nYou can use either UTC offset `UTC+01:00` format or the\
            \ IANA Time Zone Database format (for example, `Europe/Vienna`)."
          type: string
      required:
      - end
      - recurrenceType
      - start
      - zoneId
      type: object
    Scope:
      description: "The scope of the maintenance window. \n\n The scope restricts\
        \ the alert/problem detection suppression to certain Dynatrace entities. It\
        \ can contain a list of entities and/or matching rules for dynamic formation\
        \ of the scope. \n\n If no scope is specified, the alert/problem detection\
        \ suppression applies to the entire environment."
      properties:
        entities:
          description: "A list of Dynatrace entities (for example, hosts or services)\
            \ to be included in the scope. \n\nAllowed values are Dynatrace entity\
            \ IDs."
          items:
            type: string
          type: array
        matches:
          description: "A list of matching rules for dynamic scope formation. \n\n\
            If several rules are set, the OR logic applies."
          items:
            $ref: '#/components/schemas/MonitoredEntityFilter'
          type: array
      required:
      - entities
      - matches
      type: object
    inline_object:
      properties:
        file:
          description: "Extension ZIP file to be uploaded. \n\n File name must match\
            \ the **name** field in the `plugin.json` file. \n\nFor example, for the\
            \ extension whose **name** is `custom.remote.python.demo`, the name of\
            \ the extension file must be `custom.remote.python.demo.zip`."
          format: binary
          type: string
      required:
      - file
      type: object
    inline_object_1:
      properties:
        file:
          description: "The ZIP extension file to be uploaded. \n\n The file name\
            \ must match the ID of the extension. Example: `custom.remote.python.demo.zip`"
          format: binary
          type: string
      required:
      - file
      type: object
    inline_object_2:
      properties:
        file:
          description: "The ZIP plugin file to be uploaded. \n\n The file name must\
            \ match the ID of the plugin. Example: `custom.remote.python.demo.zip`"
          format: binary
          type: string
      required:
      - file
      type: object
    inline_object_3:
      properties:
        file:
          description: "Plugin ZIP file to be uploaded. \n\n File name must match\
            \ the **name** field in the `plugin.json` file. \n\nFor example, for the\
            \ plugin whose **name** is `custom.remote.python.demo`, the name of the\
            \ plugin file must be `custom.remote.python.demo.zip`."
          format: binary
          type: string
      required:
      - file
      type: object
    CustomDeviceGroupNameAlertingScope_allOf:
      properties:
        nameFilter:
          $ref: '#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto'
      type: object
    EntityIdAlertingScope_allOf:
      properties:
        entityId:
          description: The monitored entities id to match on.
          type: string
      type: object
    ManagementZoneAlertingScope_allOf:
      properties:
        mzId:
          description: The management zone id to match on.
          type: string
      type: object
    MetricEventAutoAdaptiveBaselineMonitoringStrategy_allOf:
      properties:
        samples:
          description: The number of one-minute samples that form the sliding evaluation
            window.
          format: int32
          maximum: 60
          minimum: 3
          type: integer
        violatingSamples:
          description: The number of one-minute samples within the evaluation window
            that must violate the threshold to trigger an event.
          format: int32
          minimum: 1
          type: integer
        dealertingSamples:
          description: The number of one-minute samples within the evaluation window
            that must go back to normal to close the event.
          format: int32
          minimum: 3
          type: integer
        alertCondition:
          description: 'The condition for the **threshold** value check: above or
            below.'
          enum:
          - ABOVE
          - BELOW
          type: string
        numberOfSignalFluctuations:
          description: Defines the factor of how many signal fluctuations are valid.
            Values above the baseline plus the signal fluctuation times the number
            of tolerated signal fluctuations are alerted.
          format: double
          maximum: 10
          minimum: 0
          type: number
      type: object
    MetricEventEntityDimensions_allOf:
      properties:
        nameFilter:
          $ref: '#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto'
      type: object
    MetricEventStaticThresholdMonitoringStrategy_allOf:
      properties:
        samples:
          description: The number of one-minute samples that form the sliding evaluation
            window.
          format: int32
          maximum: 60
          minimum: 3
          type: integer
        violatingSamples:
          description: The number of one-minute samples within the evaluation window
            that must violate the threshold to trigger an event.
          format: int32
          minimum: 1
          type: integer
        dealertingSamples:
          description: The number of one-minute samples within the evaluation window
            that must go back to normal to close the event.
          format: int32
          minimum: 3
          type: integer
        alertCondition:
          description: 'The condition for the **threshold** value check: above or
            below.'
          enum:
          - ABOVE
          - BELOW
          type: string
        threshold:
          description: The value of the static threshold based on the specified unit.
          format: double
          type: number
        unit:
          description: The unit of the threshold, matching the metric definition.
          enum:
          - BIT
          - BIT_PER_HOUR
          - BIT_PER_MINUTE
          - BIT_PER_SECOND
          - BYTE
          - BYTE_PER_HOUR
          - BYTE_PER_MINUTE
          - BYTE_PER_SECOND
          - CORES
          - COUNT
          - DAY
          - DECIBEL_MILLI_WATT
          - GIBI_BYTE
          - GIGA
          - GIGA_BYTE
          - HOUR
          - KIBI_BYTE
          - KIBI_BYTE_PER_HOUR
          - KIBI_BYTE_PER_MINUTE
          - KIBI_BYTE_PER_SECOND
          - KILO
          - KILO_BYTE
          - KILO_BYTE_PER_HOUR
          - KILO_BYTE_PER_MINUTE
          - KILO_BYTE_PER_SECOND
          - MEBI_BYTE
          - MEBI_BYTE_PER_HOUR
          - MEBI_BYTE_PER_MINUTE
          - MEBI_BYTE_PER_SECOND
          - MEGA
          - MEGA_BYTE
          - MEGA_BYTE_PER_HOUR
          - MEGA_BYTE_PER_MINUTE
          - MEGA_BYTE_PER_SECOND
          - MICRO_SECOND
          - MILLI_CORES
          - MILLI_SECOND
          - MILLI_SECOND_PER_MINUTE
          - MINUTE
          - MONTH
          - NANO_SECOND
          - NANO_SECOND_PER_MINUTE
          - NOT_APPLICABLE
          - PERCENT
          - PER_HOUR
          - PER_MINUTE
          - PER_SECOND
          - PIXEL
          - PROMILLE
          - RATIO
          - SECOND
          - STATE
          - UNSPECIFIED
          - WEEK
          - YEAR
          type: string
      type: object
    MetricEventStringDimensions_allOf:
      properties:
        textFilter:
          $ref: '#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto'
      type: object
    ProcessGroupIdAlertingScope_allOf:
      properties:
        processGroupId:
          description: The process groups id to match on.
          type: string
      type: object
    TagFilterAlertingScope_allOf:
      properties:
        tagFilter:
          $ref: '#/components/schemas/TagFilter'
      type: object
    ApplicationTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AGENTLESS_MONITORING
          - AMP
          - AUTO_INJECTED
          - DEFAULT
          - SAAS_VENDOR
          type: string
      type: object
    AzureComputeModeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - DEDICATED
          - SHARED
          type: string
      type: object
    AzureSkuComparision_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - BASIC
          - DYNAMIC
          - FREE
          - PREMIUM
          - SHARED
          - STANDARD
          type: string
      type: object
    BitnessComparision_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - "32"
          - "64"
          type: string
      type: object
    CloudTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AZURE
          - EC2
          - GOOGLE_CLOUD_PLATFORM
          - OPENSTACK
          - ORACLE
          - UNRECOGNIZED
          type: string
      type: object
    CustomApplicationTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AMAZON_ECHO
          - DESKTOP
          - EMBEDDED
          - IOT
          - MICROSOFT_HOLOLENS
          - UFO
          type: string
      type: object
    CustomHostMetadataConditionKey_allOf:
      properties:
        dynamicKey:
          $ref: '#/components/schemas/CustomHostMetadataKey'
      type: object
    CustomProcessMetadataConditionKey_allOf:
      properties:
        dynamicKey:
          $ref: '#/components/schemas/CustomProcessMetadataKey'
      type: object
    DatabaseTopologyComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - CLUSTER
          - EMBEDDED
          - FAILOVER
          - IPC
          - LOAD_BALANCING
          - SINGLE_SERVER
          - UNSPECIFIED
          type: string
      type: object
    DcrumDecoderComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - ALL_OTHER
          - CITRIX_APPFLOW
          - CITRIX_ICA
          - CITRIX_ICA_OVER_SSL
          - DB2_DRDA
          - HTTP
          - HTTPS
          - HTTP_EXPRESS
          - INFORMIX
          - MYSQL
          - ORACLE
          - SAP_GUI
          - SAP_GUI_OVER_HTTP
          - SAP_GUI_OVER_HTTPS
          - SAP_HANA_DB
          - SAP_RFC
          - SSL
          - TDS
          type: string
      type: object
    EntityIdComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          type: string
        value:
          description: The value to compare to.
          type: string
      type: object
    HypervisorTypeComparision_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AHV
          - HYPER_V
          - KVM
          - LPAR
          - QEMU
          - VIRTUAL_BOX
          - VMWARE
          - WPAR
          - XEN
          type: string
      type: object
    IndexedNameComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - CONTAINS
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    IndexedStringComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    IndexedTagComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          $ref: '#/components/schemas/TagInfo'
      type: object
    IntegerComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LOWER_THAN
          - LOWER_THAN_OR_EQUAL
          type: string
        value:
          description: The value to compare to.
          format: int32
          type: integer
      type: object
    IpAddressComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - EXISTS
          - IS_IP_IN_RANGE
          - REGEX_MATCHES
          type: string
        value:
          description: The value to compare to.
          maxLength: 80
          minLength: 0
          type: string
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or insensitive (`false`).
          type: boolean
      type: object
    MobilePlatformComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - ANDROID
          - IOS
          - LINUX
          - MAC_OS
          - OTHER
          - TVOS
          - WINDOWS
          type: string
      type: object
    OsArchitectureComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - ARM
          - IA64
          - PARISC
          - PPC
          - PPCLE
          - S390
          - SPARC
          - X86
          - ZOS
          type: string
      type: object
    OsTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AIX
          - DARWIN
          - HPUX
          - LINUX
          - SOLARIS
          - WINDOWS
          - ZOS
          type: string
      type: object
    PaasTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - AWS_ECS_EC2
          - AWS_ECS_FARGATE
          - AWS_LAMBDA
          - AZURE_FUNCTIONS
          - AZURE_WEBSITES
          - CLOUD_FOUNDRY
          - GOOGLE_APP_ENGINE
          - HEROKU
          - KUBERNETES
          - OPENSHIFT
          type: string
      type: object
    ProcessMetadataConditionKey_allOf:
      properties:
        dynamicKey:
          description: "The key of the attribute, which need dynamic keys. \n\nNot\
            \ applicable otherwise, as the attibute itself acts as a key."
          enum:
          - AMAZON_ECR_IMAGE_ACCOUNT_ID
          - AMAZON_ECR_IMAGE_REGION
          - AMAZON_LAMBDA_FUNCTION_NAME
          - AMAZON_REGION
          - APACHE_CONFIG_PATH
          - APACHE_SPARK_MASTER_IP_ADDRESS
          - ASP_DOT_NET_CORE_APPLICATION_PATH
          - AWS_ECS_CLUSTER
          - AWS_ECS_CONTAINERNAME
          - AWS_ECS_FAMILY
          - AWS_ECS_REVISION
          - CASSANDRA_CLUSTER_NAME
          - CATALINA_BASE
          - CATALINA_HOME
          - CLOUD_FOUNDRY_APP_ID
          - CLOUD_FOUNDRY_APP_NAME
          - CLOUD_FOUNDRY_INSTANCE_INDEX
          - CLOUD_FOUNDRY_SPACE_ID
          - CLOUD_FOUNDRY_SPACE_NAME
          - COLDFUSION_JVM_CONFIG_FILE
          - COLDFUSION_SERVICE_NAME
          - COMMAND_LINE_ARGS
          - DOTNET_COMMAND
          - DOTNET_COMMAND_PATH
          - DYNATRACE_CLUSTER_ID
          - DYNATRACE_NODE_ID
          - ELASTICSEARCH_CLUSTER_NAME
          - ELASTICSEARCH_NODE_NAME
          - EQUINOX_CONFIG_PATH
          - EXE_NAME
          - EXE_PATH
          - GLASS_FISH_DOMAIN_NAME
          - GLASS_FISH_INSTANCE_NAME
          - GOOGLE_APP_ENGINE_INSTANCE
          - GOOGLE_APP_ENGINE_SERVICE
          - GOOGLE_CLOUD_PROJECT
          - HYBRIS_BIN_DIRECTORY
          - HYBRIS_CONFIG_DIRECTORY
          - HYBRIS_DATA_DIRECTORY
          - IBM_CICS_REGION
          - IBM_CTG_NAME
          - IBM_IMS_CONNECT_REGION
          - IBM_IMS_CONTROL_REGION
          - IBM_IMS_MESSAGE_PROCESSING_REGION
          - IBM_IMS_SOAP_GW_NAME
          - IBM_INTEGRATION_NODE_NAME
          - IBM_INTEGRATION_SERVER_NAME
          - IIS_APP_POOL
          - IIS_ROLE_NAME
          - JAVA_JAR_FILE
          - JAVA_JAR_PATH
          - JAVA_MAIN_CLASS
          - JAVA_MAIN_MODULE
          - JBOSS_HOME
          - JBOSS_MODE
          - JBOSS_SERVER_NAME
          - KUBERNETES_BASE_POD_NAME
          - KUBERNETES_CONTAINER_NAME
          - KUBERNETES_FULL_POD_NAME
          - KUBERNETES_NAMESPACE
          - KUBERNETES_POD_UID
          - MSSQL_INSTANCE_NAME
          - NODE_JS_APP_BASE_DIRECTORY
          - NODE_JS_APP_NAME
          - NODE_JS_SCRIPT_NAME
          - ORACLE_SID
          - PG_ID_CALC_INPUT_KEY_LINKAGE
          - PHP_SCRIPT_PATH
          - PHP_WORKING_DIRECTORY
          - RUBY_APP_ROOT_PATH
          - RUBY_SCRIPT_PATH
          - RULE_RESULT
          - SOFTWAREAG_INSTALL_ROOT
          - SOFTWAREAG_PRODUCTPROPNAME
          - SPRINGBOOT_APP_NAME
          - SPRINGBOOT_PROFILE_NAME
          - SPRINGBOOT_STARTUP_CLASS
          - TIBCO_BUSINESSWORKS_CE_APP_NAME
          - TIBCO_BUSINESSWORKS_CE_VERSION
          - TIBCO_BUSINESS_WORKS_APP_NODE_NAME
          - TIBCO_BUSINESS_WORKS_APP_SPACE_NAME
          - TIBCO_BUSINESS_WORKS_DOMAIN_NAME
          - TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE
          - TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH
          - TIBCO_BUSINESS_WORKS_HOME
          - VARNISH_INSTANCE_NAME
          - WEB_LOGIC_CLUSTER_NAME
          - WEB_LOGIC_DOMAIN_NAME
          - WEB_LOGIC_HOME
          - WEB_LOGIC_NAME
          - WEB_SPHERE_CELL_NAME
          - WEB_SPHERE_CLUSTER_NAME
          - WEB_SPHERE_NODE_NAME
          - WEB_SPHERE_SERVER_NAME
          type: string
      type: object
    ServiceTopologyComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - EXTERNAL_SERVICE
          - FULLY_MONITORED
          - OPAQUE_SERVICE
          type: string
      type: object
    ServiceTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - BACKGROUND_ACTIVITY
          - CICS_SERVICE
          - CUSTOM_SERVICE
          - DATABASE_SERVICE
          - ENTERPRISE_SERVICE_BUS_SERVICE
          - EXTERNAL
          - IBM_INTEGRATION_BUS_SERVICE
          - IMS_SERVICE
          - MESSAGING_SERVICE
          - QUEUE_LISTENER_SERVICE
          - RMI_SERVICE
          - RPC_SERVICE
          - WEB_REQUEST_SERVICE
          - WEB_SERVICE
          type: string
      type: object
    SimpleHostTechComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          $ref: '#/components/schemas/SimpleHostTech'
      type: object
    SimpleTechComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          $ref: '#/components/schemas/SimpleTech'
      type: object
    StringComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - EXISTS
          - REGEX_MATCHES
          type: string
        value:
          description: The value to compare to.
          maxLength: 80
          minLength: 0
          type: string
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or insensitive (`false`).
          type: boolean
      type: object
    StringConditionKey_allOf:
      properties:
        dynamicKey:
          description: "The key of the attribute, which need dynamic keys. \n\nNot\
            \ applicable otherwise, as the attibute itself acts as a key."
          type: string
      type: object
    SyntheticEngineTypeComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - CLASSIC
          - CUSTOM
          type: string
      type: object
    TagComparison_allOf:
      properties:
        operator:
          description: "Operator of the comparison. You can reverse it by setting\
            \ **negate** to `true`. \n\nPossible values depend on the **type** of\
            \ the comparison. Find the list of actual models in the description of\
            \ the **type** field and check the description of the model you need."
          enum:
          - EQUALS
          - TAG_KEY_EQUALS
          type: string
        value:
          $ref: '#/components/schemas/TagInfo'
      type: object
    CertificateCredentials_allOf:
      properties:
        certificate:
          description: The certificate in the string format.
          type: string
        password:
          description: The password of the credential.
          type: string
        certificateFormat:
          description: The certificate format.
          enum:
          - PEM
          - PKCS12
          - UNKNOWN
          type: string
      type: object
    TokenCredentials_allOf:
      properties:
        token:
          description: Token in the string format.
          type: string
      type: object
    UserPasswordCredentials_allOf:
      properties:
        user:
          description: The username of the credentials set.
          type: string
        password:
          description: The password of the credential.
          type: string
      type: object
    AssignedEntitiesTile_allOf:
      properties:
        assignedEntities:
          description: The list of Dynatrace entities, assigned to the tile.
          items:
            type: string
          type: array
      type: object
    AssignedEntitiesWithMetricTile_allOf:
      properties:
        assignedEntities:
          description: The list of Dynatrace entities, assigned to the tile.
          items:
            type: string
          type: array
        metric:
          description: The metric assigned to the tile.
          type: string
      type: object
    CustomChartingTile_allOf:
      properties:
        filterConfig:
          $ref: '#/components/schemas/CustomFilterConfig'
      type: object
    FilterableEntityTile_allOf:
      properties:
        filterConfig:
          $ref: '#/components/schemas/CustomFilterConfig'
        chartVisible:
          type: boolean
      type: object
    MarkdownTile_allOf:
      properties:
        markdown:
          description: The markdown-formatted content of the tile.
          type: string
      type: object
    SyntheticSingleWebcheckTile_allOf:
      properties:
        assignedEntities:
          description: The list of Dynatrace entities, assigned to the tile.
          items:
            type: string
          type: array
        excludeMaintenanceWindows:
          description: Include (`false') or exclude (`true`) maintenance windows from
            availability calculations.
          type: boolean
      type: object
    UserSessionQueryTile_allOf:
      properties:
        customName:
          description: The name of the tile, set by user.
          type: string
        query:
          description: A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info)
            executed by the tile.
          type: string
        type:
          description: The visualization of the tile.
          enum:
          - COLUMN_CHART
          - FUNNEL
          - LINE_CHART
          - PIE_CHART
          - SINGLE_VALUE
          - TABLE
          type: string
        timeFrameShift:
          description: "The comparison timeframe of the query. \n\n If specified,\
            \ you additionally get the results of the same query with the specified\
            \ time shift."
          type: string
        visualizationConfig:
          $ref: '#/components/schemas/UserSessionQueryTileConfiguration'
        limit:
          description: The limit of the results, if not set will use the default value
            of the system
          format: int32
          type: integer
      type: object
    CustomColumnDefinition_allOf:
      properties:
        prefix:
          minLength: 1
          type: string
        suffix:
          type: string
      type: object
    BooleanComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          type: boolean
      type: object
    ESBInputNodeTypeComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - CALLABLE_FLOW_ASYNC_RESPONSE_NODE
          - CALLABLE_FLOW_INPUT_NODE
          - DATABASE_INPUT_NODE
          - DOTNET_INPUT_NODE
          - EMAIL_INPUT_NODE
          - EVENT_INPUT
          - EVENT_INPUT_NODE
          - FILE_INPUT_NODE
          - FTE_INPUT_NODE
          - HTTP_ASYNC_RESPONSE
          - JD_EDWARDS_INPUT_NODE
          - JMS_CLIENT_INPUT_NODE
          - LABEL_NODE
          - MQ_INPUT_NODE
          - PEOPLE_SOFT_INPUT_NODE
          - REST_ASYNC_RESPONSE
          - REST_REQUEST
          - SAP_INPUT_NODE
          - SCA_ASYNC_RESPONSE_NODE
          - SCA_INPUT_NODE
          - SIEBEL_INPUT_NODE
          - SOAP_INPUT_NODE
          - TCPIP_CLIENT_INPUT_NODE
          - TCPIP_CLIENT_REQUEST_NODE
          - TCPIP_SERVER_INPUT_NODE
          - TCPIP_SERVER_REQUEST_NODE
          - TIMEOUT_NOTIFICATION_NODE
          - WS_INPUT_NODE
          type: string
      type: object
    FailedStateComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - FAILED
          - SUCCESSFUL
          type: string
      type: object
    FailureReasonComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - EXCEPTION_AT_ENTRY_NODE
          - EXCEPTION_ON_ANY_NODE
          - HTTP_CODE
          - REQUEST_ATTRIBUTE
          type: string
      type: object
    FastStringComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - CONTAINS
          - EQUALS
          type: string
        value:
          description: The value to compare to.
          type: string
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or not case-sensitive
            (`false`).
          type: boolean
      type: object
    FlawStateComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - FLAWED
          - NOT_FLAWED
          type: string
      type: object
    HttpMethodComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
          type: string
      type: object
    HttpStatusClassComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - C_1XX
          - C_2XX
          - C_3XX
          - C_4XX
          - C_5XX
          - NO_RESPONSE
          type: string
      type: object
    NumberComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LOWER_THAN
          - LOWER_THAN_OR_EQUAL
          type: string
        value:
          description: The value to compare to.
          type: number
      type: object
    NumberRequestAttributeComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LOWER_THAN
          - LOWER_THAN_OR_EQUAL
          type: string
        value:
          description: The value to compare to.
          type: number
        requestAttribute:
          type: string
        matchOnChildCalls:
          description: "If `true`, the request attribute is matched on child service\
            \ calls. \n\n  Default is `false`."
          type: boolean
        source:
          $ref: '#/components/schemas/PropagationSource'
      type: object
    ServiceTypeComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - BACKGROUND_ACTIVITY
          - CICS_SERVICE
          - CUSTOM_SERVICE
          - DATABASE_SERVICE
          - ENTERPRISE_SERVICE_BUS_SERVICE
          - EXTERNAL
          - IBM_INTEGRATION_BUS_SERVICE
          - IMS_SERVICE
          - MESSAGING_SERVICE
          - QUEUE_LISTENER_SERVICE
          - RMI_SERVICE
          - RPC_SERVICE
          - WEB_REQUEST_SERVICE
          - WEB_SERVICE
          type: string
      type: object
    StringComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - EXISTS
          - REGEX_MATCHES
          type: string
        value:
          description: The value to compare to.
          type: string
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or not case-sensitive
            (`false`).
          type: boolean
      type: object
    StringRequestAttributeComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - BEGINS_WITH
          - CONTAINS
          - ENDS_WITH
          - EQUALS
          - EXISTS
          - REGEX_MATCHES
          type: string
        value:
          description: The value to compare to.
          type: string
        requestAttribute:
          type: string
        caseSensitive:
          description: The comparison is case-sensitive (`true`) or not case-sensitive
            (`false`).
          type: boolean
        matchOnChildCalls:
          description: "If `true`, the request attribute is matched on child service\
            \ calls. \n\n Default is `false`."
          type: boolean
        source:
          $ref: '#/components/schemas/PropagationSource'
      type: object
    TagComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - TAG_KEY_EQUALS
          type: string
        value:
          $ref: '#/components/schemas/TagInfo'
      type: object
    ZosComparisonInfo_allOf:
      properties:
        comparison:
          description: Operator of the comparision. You can reverse it by setting
            **negate** to `true`.
          enum:
          - EQUALS
          - EXISTS
          type: string
        value:
          description: The value to compare to.
          enum:
          - CTG
          - DPL
          - EXPLICIT_ADK
          - IMS_CONNECT
          - IMS_CONNECT_API
          - IMS_ITRA
          - IMS_MSC
          - IMS_PGM_SWITCH
          - IMS_SHARED_QUEUES
          - IMS_TRANS_EXEC
          - MQ
          - SOAP
          - START
          - TX
          - UNKNOWN
          type: string
      type: object
    AnsibleTowerNotificationConfig_allOf:
      properties:
        jobTemplateURL:
          description: The URL of the target Ansible Tower job template.
          maxLength: 1000
          minLength: 1
          type: string
        acceptAnyCertificate:
          description: Accept any, including self-signed and invalid, SSL certificate
            (`true`) or only trusted (`false`) certificates.
          type: boolean
        username:
          description: The username of the Ansible Tower account.
          maxLength: 1000
          minLength: 1
          type: string
        password:
          description: The password for the Ansible Tower account.
          maxLength: 1000
          minLength: 1
          type: string
        jobTemplateID:
          description: The ID of the target Ansible Tower job template.
          format: int32
          type: integer
        customMessage:
          description: "The custom message of the notification. \n\n This message\
            \ will be displayed in the extra variables **Message** field of your job\
            \ template.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`:\
            \ Details about the entities impacted by the problem in form of a JSON\
            \ array. \n* `{ImpactedEntity}`: The entity impacted by the problem or\
            \ *X* impacted entities. \n* `{PID}`: The ID of the reported problem.\
            \ \n* `{ProblemDetailsText}`: All problem event details, including root\
            \ cause, as a text-formatted string. \n* `{ProblemID}`: The display number\
            \ of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 1000
          minLength: 0
          type: string
      type: object
    EmailNotificationConfig_allOf:
      properties:
        subject:
          description: The subject of the email notifications.
          maxLength: 1000
          minLength: 1
          type: string
        body:
          description: "The template of the email notification.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntities}`: Details about the\
            \ entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`:\
            \ The entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem\
            \ event details, including root cause, as an HTML-formatted string. \n\
            * `{ProblemDetailsJSON}`: All problem event details, including root cause,\
            \ as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemDetailsText}`: All problem event details, including\
            \ root cause, as a text-formatted string. \n* `{ProblemID}`: The display\
            \ number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        receivers:
          description: The list of the email recipients.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        ccReceivers:
          description: The list of the email CC-recipients.
          items:
            type: string
          type: array
          uniqueItems: true
        bccReceivers:
          description: The list of the email BCC-recipients.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    HipChatNotificationConfig_allOf:
      properties:
        url:
          description: |-
            The URL of the HipChat WebHook.

             This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests.
          maxLength: 1000
          minLength: 1
          type: string
        message:
          description: "The content of the notification message.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntity}`: The entity impacted\
            \ by the problem or *X* impacted entities. \n* `{PID}`: The ID of the\
            \ reported problem. \n* `{ProblemDetailsText}`: All problem event details,\
            \ including root cause, as a text-formatted string. \n* `{ProblemID}`:\
            \ The display number of the reported problem. \n* `{ProblemImpact}`: The\
            \ [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
      type: object
    JiraNotificationConfig_allOf:
      properties:
        username:
          description: The username of the Jira profile.
          maxLength: 1000
          minLength: 1
          type: string
        password:
          description: The password for the Jira profile.
          maxLength: 1000
          minLength: 1
          type: string
        url:
          description: The URL of the Jira API endpoint.
          minLength: 1
          type: string
        projectKey:
          description: The project key of the Jira issue to be created by this notification.
          maxLength: 1000
          minLength: 1
          type: string
        issueType:
          description: The type of the Jira issue to be created by this notification.
          maxLength: 1000
          minLength: 1
          type: string
        summary:
          description: "The summary of the Jira issue to be created by this notification.\n\
            \n You can use the following placeholders: \n* `{ImpactedEntity}`: The\
            \ entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem\
            \ event details, including root cause, as a text-formatted string. \n\
            * `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`:\
            \ The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 1000
          minLength: 1
          type: string
        description:
          description: "The description of the Jira issue to be created by this notification.\
            \ \n\n You can use same placeholders as in issue summary."
          minLength: 1
          type: string
      type: object
    OpsGenieNotificationConfig_allOf:
      properties:
        apiKey:
          description: The API key to access OpsGenie.
          maxLength: 1000
          minLength: 1
          type: string
        domain:
          description: The region domain of the OpsGenie.
          maxLength: 1000
          minLength: 1
          type: string
        message:
          description: "The content of the message.\n\n You can use the following\
            \ placeholders: \n* `{ProblemID}`: The display number of the reported\
            \ problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n"
          maxLength: 80
          minLength: 1
          type: string
      type: object
    PagerDutyNotificationConfig_allOf:
      properties:
        account:
          description: The name of the PagerDuty account.
          maxLength: 1000
          minLength: 1
          type: string
        serviceApiKey:
          description: The API key to access PagerDuty.
          maxLength: 1000
          minLength: 1
          type: string
        serviceName:
          description: The name of the service.
          maxLength: 1000
          minLength: 1
          type: string
      type: object
    ServiceNowNotificationConfig_allOf:
      properties:
        instanceName:
          description: "The ServiceNow instance identifier. It refers to the first\
            \ part of your own ServiceNow URL. \n\n This field is mutually exclusive\
            \ with the **url** field. You can only use one of them."
          maxLength: 1000
          minLength: 1
          type: string
        url:
          description: "The URL of the on-premise ServiceNow installation. \n\n This\
            \ field is mutually exclusive with the **instanceName** field. You can\
            \ only use one of them."
          maxLength: 1000
          minLength: 1
          type: string
        username:
          description: "The username of the ServiceNow account. \n\n Make sure that\
            \ your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration`\
            \ roles."
          maxLength: 1000
          minLength: 1
          type: string
        password:
          description: The username to the ServiceNow account
          maxLength: 1000
          minLength: 1
          type: string
        message:
          description: "The content of the ServiceNow description.\n\n\n\n You can\
            \ use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted\
            \ by the problem or *X* impacted entities. \n* `{PID}`: The ID of the\
            \ reported problem. \n* `{ProblemDetailsHTML}`: All problem event details,\
            \ including root cause, as an HTML-formatted string. \n* `{ProblemID}`:\
            \ The display number of the reported problem. \n* `{ProblemImpact}`: The\
            \ [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 160
          minLength: 1
          type: string
        sendIncidents:
          description: Send incidents into ServiceNow ITSM (`true`).
          type: boolean
        sendEvents:
          description: Send events into ServiceNow ITOM (`true`).
          type: boolean
      type: object
    SlackNotificationConfig_allOf:
      properties:
        url:
          description: |-
            The URL of the Slack WebHook.

             This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests.
          maxLength: 1000
          minLength: 1
          type: string
        channel:
          description: The channel (for example, `#general`) or the user (for example,
            `@john.smith`) to send the message to.
          maxLength: 1000
          minLength: 1
          type: string
        title:
          description: "The content of the message.\n\n You can use the following\
            \ placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem\
            \ or *X* impacted entities. \n* `{PID}`: The ID of the reported problem.\
            \ \n* `{ProblemDetailsText}`: All problem event details, including root\
            \ cause, as a text-formatted string. \n* `{ProblemID}`: The display number\
            \ of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
      type: object
    TrelloNotificationConfig_allOf:
      properties:
        applicationKey:
          description: The application key for the Trello account.
          maxLength: 1000
          minLength: 1
          type: string
        authorizationToken:
          description: The application token for the Trello account.
          maxLength: 1000
          minLength: 1
          type: string
        boardId:
          description: The Trello board to which the card should be assigned.
          minLength: 1
          type: string
        listId:
          description: The Trello list to which the card should be assigned.
          minLength: 1
          type: string
        resolvedListId:
          description: The Trello list to which the card of the resolved problem should
            be assigned.
          minLength: 1
          type: string
        text:
          description: "The text of the generated Trello card.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntity}`: The entity impacted\
            \ by the problem or *X* impacted entities. \n* `{PID}`: The ID of the\
            \ reported problem. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemID}`: The display number of the reported problem.\
            \ \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        description:
          description: "The description of the Trello card. \n\n You can use same\
            \ placeholders as in card text."
          minLength: 1
          type: string
      type: object
    VictorOpsNotificationConfig_allOf:
      properties:
        apiKey:
          description: The API key for the target VictorOps account.
          maxLength: 1000
          minLength: 1
          type: string
        routingKey:
          description: The routing key, defining the group to be notified.
          maxLength: 1000
          minLength: 1
          type: string
        message:
          description: "The content of the message.\n\n You can use the following\
            \ placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem\
            \ or *X* impacted entities. \n* `{ProblemDetailsText}`: All problem event\
            \ details, including root cause, as a text-formatted string. \n* `{ProblemID}`:\
            \ The display number of the reported problem. \n* `{ProblemImpact}`: The\
            \ [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n"
          minLength: 1
          type: string
      type: object
    WebHookNotificationConfig_allOf:
      properties:
        url:
          description: The URL of the WebHook endpoint.
          maxLength: 1000
          minLength: 0
          type: string
        acceptAnyCertificate:
          description: Accept any, including self-signed and invalid, SSL certificate
            (`true`) or only trusted (`false`) certificates.
          type: boolean
        payload:
          description: "The content of the notification message.\n\n You can use the\
            \ following placeholders: \n* `{ImpactedEntities}`: Details about the\
            \ entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`:\
            \ The entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem\
            \ event details, including root cause, as an HTML-formatted string. \n\
            * `{ProblemDetailsJSON}`: All problem event details, including root cause,\
            \ as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemDetailsText}`: All problem event details, including\
            \ root cause, as a text-formatted string. \n* `{ProblemID}`: The display\
            \ number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          minLength: 1
          type: string
        headers:
          description: A list of the additional HTTP headers.
          items:
            $ref: '#/components/schemas/HttpHeader'
          type: array
      type: object
    XMattersNotificationConfig_allOf:
      properties:
        url:
          description: The URL of the xMatters WebHook.
          maxLength: 1000
          minLength: 1
          type: string
        acceptAnyCertificate:
          description: Accept any, including self-signed and invalid, SSL certificate
            (`true`) or only trusted (`false`) certificates.
          type: boolean
        headers:
          description: A list of the additional HTTP headers.
          items:
            $ref: '#/components/schemas/HttpHeader'
          type: array
        payload:
          description: "The content of the message.\n\n You can use the following\
            \ placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted\
            \ by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The\
            \ entity impacted by the problem or *X* impacted entities. \n* `{PID}`:\
            \ The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem\
            \ event details, including root cause, as an HTML-formatted string. \n\
            * `{ProblemDetailsJSON}`: All problem event details, including root cause,\
            \ as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event\
            \ details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/)\
            \ string. \n* `{ProblemDetailsText}`: All problem event details, including\
            \ root cause, as a text-formatted string. \n* `{ProblemID}`: The display\
            \ number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis)\
            \ of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.\
            \ \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types)\
            \ of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`,\
            \ `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short\
            \ description of the problem. \n* `{ProblemURL}`: The URL of the problem\
            \ within Dynatrace. \n* `{State}`: The state of the problem. Possible\
            \ values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that\
            \ are defined for all impacted entities, separated by commas. \n"
          maxLength: 600
          minLength: 1
          type: string
      type: object
    AfterTransformation_allOf:
      properties:
        delimiter:
          description: "The delimiter of the transformation. The transformation removes\
            \ everything before this delimiter and keeps everything after it.  \n\n\
            \ The delimiter itself is not kept. \n\n If several delimiters appear\
            \ in the initial value, only the first one is used."
          type: string
      type: object
    BeforeTransformation_allOf:
      properties:
        delimiter:
          description: "The delimiter of the transformation. The transformation keeps\
            \ everything before this delimiter and removes everything after it. \n\
            \n The delimiter itself is not kept. \n\nIf several delimiters appear\
            \ in the initial value, only the first one is used."
          type: string
      type: object
    BetweenTransformation_allOf:
      properties:
        after:
          description: 'The starting delimiter. The transformation removes everything
            before it. The delimiter itself is not kept. '
          type: string
        before:
          description: The ending delimiter. The transformation removes everything
            after it. The delimiter itself is not kept.
          type: string
      type: object
    EndsWithCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **ends with** into **does not end with**. \n\n If not set, then `false`\
            \ is used."
          type: boolean
        ignoreCase:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\nIf not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            type: string
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    EqualsCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **equals** into **does not equal**. \n\n If not set, then `false` is\
            \ used."
          type: boolean
        ignoreCase:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\nIf not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            type: object
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    ExistsCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **exists** into **does not exist**. \n\n If not set, then `false` is\
            \ used."
          type: boolean
      type: object
    GreaterThanCompareOperation_allOf:
      properties:
        value:
          description: The value to compare to.
          format: int32
          type: integer
      type: object
    IntEqualsCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **equals** into **does not equal**. \n\n If not set, then `false` is\
            \ used."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            format: int32
            type: integer
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    IpInRangeCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **IP is in range** into **IP is not in range**. \n\n If not set, then\
            \ `false` is used."
          type: boolean
        lower:
          description: The lower boundary of the IP range.
          type: string
        upper:
          description: The upper boundary of the IP range.
          type: string
      type: object
    RemoveNumbersTransformation_allOf:
      properties:
        minDigitCount:
          description: Remove numbers that contain at least *X* digits.
          format: int32
          minimum: 1
          type: integer
        includeHexNumbers:
          description: "Remove (`true`) or keep (`false`) hexadecimal numbers. \n\n\
            \ If not set, then `false` is used, keeping hexadecimal numbers."
          type: boolean
      type: object
    ReplaceBetweenTransformation_allOf:
      properties:
        after:
          description: The starting delimiter. The transformation removes everything
            before it. The delimiter itself is not kept.
          type: string
        before:
          description: The ending delimiter. The transformation removes everything
            after it. The delimiter itself is not kept.
          type: string
        replacement:
          description: The value to be used instead of the detected value.
          type: string
      type: object
    SplitSelectTransformation_allOf:
      properties:
        delimiter:
          description: The delimiter for splitting the detected value. The delimiter
            itself is not kept.
          type: string
        itemIndex:
          description: The index of the element in the split array to be used. Indexing
            starts with `1`.
          format: int32
          minimum: 1
          type: integer
      type: object
    StartsWithCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **starts with** into **does not start with**. \n\n If not set, then\
            \ `false` is used."
          type: boolean
        ignoreCase:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\nIf not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            type: string
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    StringContainsCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **contains** into **does not contain**. \n\n If not set, then `false`\
            \ is used."
          type: boolean
        ignoreCase:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\nIf not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            type: string
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    StringEqualsCompareOperation_allOf:
      properties:
        negate:
          description: "Inverts the operation of the condition. Set to `true` to turn\
            \ **equals** into **does not equal**. \n\n If not set, then `false` is\
            \ used."
          type: boolean
        ignoreCase:
          description: "The condition is case sensitive (`false`) or case insensitive\
            \ (`true`). \n\nIf not set, then `false` is used, making the condition\
            \ case sensitive."
          type: boolean
        values:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            type: string
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    TagCompareOperation_allOf:
      properties:
        compareKeyOnly:
          description: |-
            If `true` ignores the tag values and only validates that the tag key is matching.
            Defaults to `false`.
          type: boolean
        tags:
          description: "The value to compare to. \n\nIf several values are specified,\
            \ the OR logic applies."
          items:
            $ref: '#/components/schemas/TagInfo'
          maxItems: 10
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    TakeSegmentsTransformation_allOf:
      properties:
        segmentCount:
          description: The number of elements to be kept.
          format: int32
          minimum: 1
          type: integer
        delimiter:
          description: The delimiter for splitting the detected value. The delimiter
            itself is not kept.
          type: string
        takeFromEnd:
          description: "Keeps the first (`false`) or last (`true`) elements. \n\n\
            \ If not set, then `false` is used, keeping the first elements."
          type: boolean
      type: object
  securitySchemes:
    Api-Token:
      description: |-
        Dynatrace API Token

         The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.
      in: header
      name: Authorization
      type: apiKey
