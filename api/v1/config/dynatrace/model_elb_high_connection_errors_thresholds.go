/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// ElbHighConnectionErrorsThresholds Custom thresholds for high number of backend connection errors on ELB. If not set, automatic mode is used.
type ElbHighConnectionErrorsThresholds struct {
	// Alert if number of backend connection errors is higher than *X* per minute in 3 out of 5 samples.
	ConnectionErrorsPerMinute int32 `json:"connectionErrorsPerMinute"`
}

// NewElbHighConnectionErrorsThresholds instantiates a new ElbHighConnectionErrorsThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewElbHighConnectionErrorsThresholds(connectionErrorsPerMinute int32, ) *ElbHighConnectionErrorsThresholds {
	this := ElbHighConnectionErrorsThresholds{}
	this.ConnectionErrorsPerMinute = connectionErrorsPerMinute
	return &this
}

// NewElbHighConnectionErrorsThresholdsWithDefaults instantiates a new ElbHighConnectionErrorsThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewElbHighConnectionErrorsThresholdsWithDefaults() *ElbHighConnectionErrorsThresholds {
	this := ElbHighConnectionErrorsThresholds{}
	return &this
}

// GetConnectionErrorsPerMinute returns the ConnectionErrorsPerMinute field value
func (o *ElbHighConnectionErrorsThresholds) GetConnectionErrorsPerMinute() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ConnectionErrorsPerMinute
}

// GetConnectionErrorsPerMinuteOk returns a tuple with the ConnectionErrorsPerMinute field value
// and a boolean to check if the value has been set.
func (o *ElbHighConnectionErrorsThresholds) GetConnectionErrorsPerMinuteOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionErrorsPerMinute, true
}

// SetConnectionErrorsPerMinute sets field value
func (o *ElbHighConnectionErrorsThresholds) SetConnectionErrorsPerMinute(v int32) {
	o.ConnectionErrorsPerMinute = v
}

func (o ElbHighConnectionErrorsThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectionErrorsPerMinute"] = o.ConnectionErrorsPerMinute
	}
	return json.Marshal(toSerialize)
}

type NullableElbHighConnectionErrorsThresholds struct {
	value *ElbHighConnectionErrorsThresholds
	isSet bool
}

func (v NullableElbHighConnectionErrorsThresholds) Get() *ElbHighConnectionErrorsThresholds {
	return v.value
}

func (v *NullableElbHighConnectionErrorsThresholds) Set(val *ElbHighConnectionErrorsThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableElbHighConnectionErrorsThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableElbHighConnectionErrorsThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableElbHighConnectionErrorsThresholds(val *ElbHighConnectionErrorsThresholds) *NullableElbHighConnectionErrorsThresholds {
	return &NullableElbHighConnectionErrorsThresholds{value: val, isSet: true}
}

func (v NullableElbHighConnectionErrorsThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableElbHighConnectionErrorsThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


