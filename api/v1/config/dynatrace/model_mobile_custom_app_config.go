/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// MobileCustomAppConfig Configuration of a mobile or custom application.
type MobileCustomAppConfig struct {
	// The Dynatrace entity ID of the application.
	Identifier *string `json:"identifier,omitempty"`
	// The name of the application.
	Name string `json:"name"`
	// The type of the application.
	ApplicationType *string `json:"applicationType,omitempty"`
	// The UUID of the application.    It is used only by OneAgent to send data to Dynatrace.
	ApplicationId *string `json:"applicationId,omitempty"`
	// The icon of the custom application.   Mobile applications always use the mobile phone icon`.
	IconType *string `json:"iconType,omitempty"`
	// The percentage of user sessions to be analyzed.
	CostControlUserSessionPercentage *int32 `json:"costControlUserSessionPercentage,omitempty"`
	ApdexSettings *MobileCustomApdex `json:"apdexSettings,omitempty"`
	// The opt-in mode is enabled (`true`) or disabled (`false`).
	OptInModeEnabled *bool `json:"optInModeEnabled,omitempty"`
	// The session replay on crash is enabled (`true`) or disabled (`false`).
	SessionReplayOnCrashEnabled *bool `json:"sessionReplayOnCrashEnabled,omitempty"`
	// The type of the beacon endpoint.
	BeaconEndpointType *string `json:"beaconEndpointType,omitempty"`
	// The URL of the beacon endpoint.    Only applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`.
	BeaconEndpointUrl *string `json:"beaconEndpointUrl,omitempty"`
}

// NewMobileCustomAppConfig instantiates a new MobileCustomAppConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileCustomAppConfig(name string, ) *MobileCustomAppConfig {
	this := MobileCustomAppConfig{}
	this.Name = name
	return &this
}

// NewMobileCustomAppConfigWithDefaults instantiates a new MobileCustomAppConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileCustomAppConfigWithDefaults() *MobileCustomAppConfig {
	this := MobileCustomAppConfig{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MobileCustomAppConfig) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetName returns the Name field value
func (o *MobileCustomAppConfig) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MobileCustomAppConfig) SetName(v string) {
	o.Name = v
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetApplicationType() string {
	if o == nil || o.ApplicationType == nil {
		var ret string
		return ret
	}
	return *o.ApplicationType
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApplicationTypeOk() (*string, bool) {
	if o == nil || o.ApplicationType == nil {
		return nil, false
	}
	return o.ApplicationType, true
}

// HasApplicationType returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasApplicationType() bool {
	if o != nil && o.ApplicationType != nil {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given string and assigns it to the ApplicationType field.
func (o *MobileCustomAppConfig) SetApplicationType(v string) {
	o.ApplicationType = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *MobileCustomAppConfig) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetIconType returns the IconType field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetIconType() string {
	if o == nil || o.IconType == nil {
		var ret string
		return ret
	}
	return *o.IconType
}

// GetIconTypeOk returns a tuple with the IconType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetIconTypeOk() (*string, bool) {
	if o == nil || o.IconType == nil {
		return nil, false
	}
	return o.IconType, true
}

// HasIconType returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasIconType() bool {
	if o != nil && o.IconType != nil {
		return true
	}

	return false
}

// SetIconType gets a reference to the given string and assigns it to the IconType field.
func (o *MobileCustomAppConfig) SetIconType(v string) {
	o.IconType = &v
}

// GetCostControlUserSessionPercentage returns the CostControlUserSessionPercentage field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetCostControlUserSessionPercentage() int32 {
	if o == nil || o.CostControlUserSessionPercentage == nil {
		var ret int32
		return ret
	}
	return *o.CostControlUserSessionPercentage
}

// GetCostControlUserSessionPercentageOk returns a tuple with the CostControlUserSessionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetCostControlUserSessionPercentageOk() (*int32, bool) {
	if o == nil || o.CostControlUserSessionPercentage == nil {
		return nil, false
	}
	return o.CostControlUserSessionPercentage, true
}

// HasCostControlUserSessionPercentage returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasCostControlUserSessionPercentage() bool {
	if o != nil && o.CostControlUserSessionPercentage != nil {
		return true
	}

	return false
}

// SetCostControlUserSessionPercentage gets a reference to the given int32 and assigns it to the CostControlUserSessionPercentage field.
func (o *MobileCustomAppConfig) SetCostControlUserSessionPercentage(v int32) {
	o.CostControlUserSessionPercentage = &v
}

// GetApdexSettings returns the ApdexSettings field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetApdexSettings() MobileCustomApdex {
	if o == nil || o.ApdexSettings == nil {
		var ret MobileCustomApdex
		return ret
	}
	return *o.ApdexSettings
}

// GetApdexSettingsOk returns a tuple with the ApdexSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApdexSettingsOk() (*MobileCustomApdex, bool) {
	if o == nil || o.ApdexSettings == nil {
		return nil, false
	}
	return o.ApdexSettings, true
}

// HasApdexSettings returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasApdexSettings() bool {
	if o != nil && o.ApdexSettings != nil {
		return true
	}

	return false
}

// SetApdexSettings gets a reference to the given MobileCustomApdex and assigns it to the ApdexSettings field.
func (o *MobileCustomAppConfig) SetApdexSettings(v MobileCustomApdex) {
	o.ApdexSettings = &v
}

// GetOptInModeEnabled returns the OptInModeEnabled field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetOptInModeEnabled() bool {
	if o == nil || o.OptInModeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.OptInModeEnabled
}

// GetOptInModeEnabledOk returns a tuple with the OptInModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetOptInModeEnabledOk() (*bool, bool) {
	if o == nil || o.OptInModeEnabled == nil {
		return nil, false
	}
	return o.OptInModeEnabled, true
}

// HasOptInModeEnabled returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasOptInModeEnabled() bool {
	if o != nil && o.OptInModeEnabled != nil {
		return true
	}

	return false
}

// SetOptInModeEnabled gets a reference to the given bool and assigns it to the OptInModeEnabled field.
func (o *MobileCustomAppConfig) SetOptInModeEnabled(v bool) {
	o.OptInModeEnabled = &v
}

// GetSessionReplayOnCrashEnabled returns the SessionReplayOnCrashEnabled field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetSessionReplayOnCrashEnabled() bool {
	if o == nil || o.SessionReplayOnCrashEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SessionReplayOnCrashEnabled
}

// GetSessionReplayOnCrashEnabledOk returns a tuple with the SessionReplayOnCrashEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetSessionReplayOnCrashEnabledOk() (*bool, bool) {
	if o == nil || o.SessionReplayOnCrashEnabled == nil {
		return nil, false
	}
	return o.SessionReplayOnCrashEnabled, true
}

// HasSessionReplayOnCrashEnabled returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasSessionReplayOnCrashEnabled() bool {
	if o != nil && o.SessionReplayOnCrashEnabled != nil {
		return true
	}

	return false
}

// SetSessionReplayOnCrashEnabled gets a reference to the given bool and assigns it to the SessionReplayOnCrashEnabled field.
func (o *MobileCustomAppConfig) SetSessionReplayOnCrashEnabled(v bool) {
	o.SessionReplayOnCrashEnabled = &v
}

// GetBeaconEndpointType returns the BeaconEndpointType field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetBeaconEndpointType() string {
	if o == nil || o.BeaconEndpointType == nil {
		var ret string
		return ret
	}
	return *o.BeaconEndpointType
}

// GetBeaconEndpointTypeOk returns a tuple with the BeaconEndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetBeaconEndpointTypeOk() (*string, bool) {
	if o == nil || o.BeaconEndpointType == nil {
		return nil, false
	}
	return o.BeaconEndpointType, true
}

// HasBeaconEndpointType returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasBeaconEndpointType() bool {
	if o != nil && o.BeaconEndpointType != nil {
		return true
	}

	return false
}

// SetBeaconEndpointType gets a reference to the given string and assigns it to the BeaconEndpointType field.
func (o *MobileCustomAppConfig) SetBeaconEndpointType(v string) {
	o.BeaconEndpointType = &v
}

// GetBeaconEndpointUrl returns the BeaconEndpointUrl field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetBeaconEndpointUrl() string {
	if o == nil || o.BeaconEndpointUrl == nil {
		var ret string
		return ret
	}
	return *o.BeaconEndpointUrl
}

// GetBeaconEndpointUrlOk returns a tuple with the BeaconEndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetBeaconEndpointUrlOk() (*string, bool) {
	if o == nil || o.BeaconEndpointUrl == nil {
		return nil, false
	}
	return o.BeaconEndpointUrl, true
}

// HasBeaconEndpointUrl returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasBeaconEndpointUrl() bool {
	if o != nil && o.BeaconEndpointUrl != nil {
		return true
	}

	return false
}

// SetBeaconEndpointUrl gets a reference to the given string and assigns it to the BeaconEndpointUrl field.
func (o *MobileCustomAppConfig) SetBeaconEndpointUrl(v string) {
	o.BeaconEndpointUrl = &v
}

func (o MobileCustomAppConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ApplicationType != nil {
		toSerialize["applicationType"] = o.ApplicationType
	}
	if o.ApplicationId != nil {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.IconType != nil {
		toSerialize["iconType"] = o.IconType
	}
	if o.CostControlUserSessionPercentage != nil {
		toSerialize["costControlUserSessionPercentage"] = o.CostControlUserSessionPercentage
	}
	if o.ApdexSettings != nil {
		toSerialize["apdexSettings"] = o.ApdexSettings
	}
	if o.OptInModeEnabled != nil {
		toSerialize["optInModeEnabled"] = o.OptInModeEnabled
	}
	if o.SessionReplayOnCrashEnabled != nil {
		toSerialize["sessionReplayOnCrashEnabled"] = o.SessionReplayOnCrashEnabled
	}
	if o.BeaconEndpointType != nil {
		toSerialize["beaconEndpointType"] = o.BeaconEndpointType
	}
	if o.BeaconEndpointUrl != nil {
		toSerialize["beaconEndpointUrl"] = o.BeaconEndpointUrl
	}
	return json.Marshal(toSerialize)
}

type NullableMobileCustomAppConfig struct {
	value *MobileCustomAppConfig
	isSet bool
}

func (v NullableMobileCustomAppConfig) Get() *MobileCustomAppConfig {
	return v.value
}

func (v *NullableMobileCustomAppConfig) Set(val *MobileCustomAppConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileCustomAppConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileCustomAppConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileCustomAppConfig(val *MobileCustomAppConfig) *NullableMobileCustomAppConfig {
	return &NullableMobileCustomAppConfig{value: val, isSet: true}
}

func (v NullableMobileCustomAppConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileCustomAppConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


