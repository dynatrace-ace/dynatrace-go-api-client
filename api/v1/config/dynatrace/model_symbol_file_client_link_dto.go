/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// SymbolFileClientLinkDto struct for SymbolFileClientLinkDto
type SymbolFileClientLinkDto struct {
	// A download link for the latest compatible version of the DTXDSSClient.
	DssClientUrl string `json:"dssClientUrl"`
}

// NewSymbolFileClientLinkDto instantiates a new SymbolFileClientLinkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSymbolFileClientLinkDto(dssClientUrl string, ) *SymbolFileClientLinkDto {
	this := SymbolFileClientLinkDto{}
	this.DssClientUrl = dssClientUrl
	return &this
}

// NewSymbolFileClientLinkDtoWithDefaults instantiates a new SymbolFileClientLinkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSymbolFileClientLinkDtoWithDefaults() *SymbolFileClientLinkDto {
	this := SymbolFileClientLinkDto{}
	return &this
}

// GetDssClientUrl returns the DssClientUrl field value
func (o *SymbolFileClientLinkDto) GetDssClientUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DssClientUrl
}

// GetDssClientUrlOk returns a tuple with the DssClientUrl field value
// and a boolean to check if the value has been set.
func (o *SymbolFileClientLinkDto) GetDssClientUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DssClientUrl, true
}

// SetDssClientUrl sets field value
func (o *SymbolFileClientLinkDto) SetDssClientUrl(v string) {
	o.DssClientUrl = v
}

func (o SymbolFileClientLinkDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dssClientUrl"] = o.DssClientUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSymbolFileClientLinkDto struct {
	value *SymbolFileClientLinkDto
	isSet bool
}

func (v NullableSymbolFileClientLinkDto) Get() *SymbolFileClientLinkDto {
	return v.value
}

func (v *NullableSymbolFileClientLinkDto) Set(val *SymbolFileClientLinkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSymbolFileClientLinkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSymbolFileClientLinkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSymbolFileClientLinkDto(val *SymbolFileClientLinkDto) *NullableSymbolFileClientLinkDto {
	return &NullableSymbolFileClientLinkDto{value: val, isSet: true}
}

func (v NullableSymbolFileClientLinkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSymbolFileClientLinkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


