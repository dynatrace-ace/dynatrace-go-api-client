/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// EsxiHighMemoryThresholds Custom thresholds for memory saturation on ESXi host. If not set then the automatic mode is used.
type EsxiHighMemoryThresholds struct {
	// Alert if ESXi host swap IN/OUT or compression/decompression rate is higher *X* kilobytes per second in 3 out of 5 samples.
	CompressionDecompressionRate float32 `json:"compressionDecompressionRate"`
}

// NewEsxiHighMemoryThresholds instantiates a new EsxiHighMemoryThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsxiHighMemoryThresholds(compressionDecompressionRate float32, ) *EsxiHighMemoryThresholds {
	this := EsxiHighMemoryThresholds{}
	this.CompressionDecompressionRate = compressionDecompressionRate
	return &this
}

// NewEsxiHighMemoryThresholdsWithDefaults instantiates a new EsxiHighMemoryThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsxiHighMemoryThresholdsWithDefaults() *EsxiHighMemoryThresholds {
	this := EsxiHighMemoryThresholds{}
	return &this
}

// GetCompressionDecompressionRate returns the CompressionDecompressionRate field value
func (o *EsxiHighMemoryThresholds) GetCompressionDecompressionRate() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.CompressionDecompressionRate
}

// GetCompressionDecompressionRateOk returns a tuple with the CompressionDecompressionRate field value
// and a boolean to check if the value has been set.
func (o *EsxiHighMemoryThresholds) GetCompressionDecompressionRateOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CompressionDecompressionRate, true
}

// SetCompressionDecompressionRate sets field value
func (o *EsxiHighMemoryThresholds) SetCompressionDecompressionRate(v float32) {
	o.CompressionDecompressionRate = v
}

func (o EsxiHighMemoryThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["compressionDecompressionRate"] = o.CompressionDecompressionRate
	}
	return json.Marshal(toSerialize)
}

type NullableEsxiHighMemoryThresholds struct {
	value *EsxiHighMemoryThresholds
	isSet bool
}

func (v NullableEsxiHighMemoryThresholds) Get() *EsxiHighMemoryThresholds {
	return v.value
}

func (v *NullableEsxiHighMemoryThresholds) Set(val *EsxiHighMemoryThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableEsxiHighMemoryThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableEsxiHighMemoryThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsxiHighMemoryThresholds(val *EsxiHighMemoryThresholds) *NullableEsxiHighMemoryThresholds {
	return &NullableEsxiHighMemoryThresholds{value: val, isSet: true}
}

func (v NullableEsxiHighMemoryThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsxiHighMemoryThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


