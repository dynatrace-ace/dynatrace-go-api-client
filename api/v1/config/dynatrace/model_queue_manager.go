/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// QueueManager Parameters of the queue manager.
type QueueManager struct {
	// The name of the queue manager.
	Name string `json:"name"`
	// The queue manager will have access to all cluster visible queues in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).
	Clusters []string `json:"clusters"`
	// The list of alias queues in the queue manager.
	AliasQueues []AliasQueue `json:"aliasQueues"`
	// The list of remote queues in the queue manager.
	RemoteQueues []RemoteQueue `json:"remoteQueues"`
	// The list of cluster queues in the queue manager.
	ClusterQueues []ClusterQueue `json:"clusterQueues"`
}

// NewQueueManager instantiates a new QueueManager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueManager(name string, clusters []string, aliasQueues []AliasQueue, remoteQueues []RemoteQueue, clusterQueues []ClusterQueue, ) *QueueManager {
	this := QueueManager{}
	this.Name = name
	this.Clusters = clusters
	this.AliasQueues = aliasQueues
	this.RemoteQueues = remoteQueues
	this.ClusterQueues = clusterQueues
	return &this
}

// NewQueueManagerWithDefaults instantiates a new QueueManager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueManagerWithDefaults() *QueueManager {
	this := QueueManager{}
	return &this
}

// GetName returns the Name field value
func (o *QueueManager) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QueueManager) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QueueManager) SetName(v string) {
	o.Name = v
}

// GetClusters returns the Clusters field value
func (o *QueueManager) GetClusters() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value
// and a boolean to check if the value has been set.
func (o *QueueManager) GetClustersOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Clusters, true
}

// SetClusters sets field value
func (o *QueueManager) SetClusters(v []string) {
	o.Clusters = v
}

// GetAliasQueues returns the AliasQueues field value
func (o *QueueManager) GetAliasQueues() []AliasQueue {
	if o == nil  {
		var ret []AliasQueue
		return ret
	}

	return o.AliasQueues
}

// GetAliasQueuesOk returns a tuple with the AliasQueues field value
// and a boolean to check if the value has been set.
func (o *QueueManager) GetAliasQueuesOk() (*[]AliasQueue, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AliasQueues, true
}

// SetAliasQueues sets field value
func (o *QueueManager) SetAliasQueues(v []AliasQueue) {
	o.AliasQueues = v
}

// GetRemoteQueues returns the RemoteQueues field value
func (o *QueueManager) GetRemoteQueues() []RemoteQueue {
	if o == nil  {
		var ret []RemoteQueue
		return ret
	}

	return o.RemoteQueues
}

// GetRemoteQueuesOk returns a tuple with the RemoteQueues field value
// and a boolean to check if the value has been set.
func (o *QueueManager) GetRemoteQueuesOk() (*[]RemoteQueue, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RemoteQueues, true
}

// SetRemoteQueues sets field value
func (o *QueueManager) SetRemoteQueues(v []RemoteQueue) {
	o.RemoteQueues = v
}

// GetClusterQueues returns the ClusterQueues field value
func (o *QueueManager) GetClusterQueues() []ClusterQueue {
	if o == nil  {
		var ret []ClusterQueue
		return ret
	}

	return o.ClusterQueues
}

// GetClusterQueuesOk returns a tuple with the ClusterQueues field value
// and a boolean to check if the value has been set.
func (o *QueueManager) GetClusterQueuesOk() (*[]ClusterQueue, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterQueues, true
}

// SetClusterQueues sets field value
func (o *QueueManager) SetClusterQueues(v []ClusterQueue) {
	o.ClusterQueues = v
}

func (o QueueManager) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["clusters"] = o.Clusters
	}
	if true {
		toSerialize["aliasQueues"] = o.AliasQueues
	}
	if true {
		toSerialize["remoteQueues"] = o.RemoteQueues
	}
	if true {
		toSerialize["clusterQueues"] = o.ClusterQueues
	}
	return json.Marshal(toSerialize)
}

type NullableQueueManager struct {
	value *QueueManager
	isSet bool
}

func (v NullableQueueManager) Get() *QueueManager {
	return v.value
}

func (v *NullableQueueManager) Set(val *QueueManager) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueManager) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueManager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueManager(val *QueueManager) *NullableQueueManager {
	return &NullableQueueManager{value: val, isSet: true}
}

func (v NullableQueueManager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueManager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


