/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dynatrace
// MonitoringSettings Real user monitoring settings.
type MonitoringSettings struct {
	// `fetch()` request capture enabled/disabled.
	FetchRequests bool `json:"fetchRequests"`
	// `XmlHttpRequest` support enabled/disabled.
	XmlHttpRequest bool `json:"xmlHttpRequest"`
	JavaScriptFrameworkSupport JavaScriptFrameworkSupport `json:"javaScriptFrameworkSupport"`
	ContentCapture ContentCapture `json:"contentCapture"`
	// You can exclude some actions from becoming XHR actions.  Put a regular expression, matching all the required URLs, here.  If noting specified the feature is disabled.
	ExcludeXhrRegex string `json:"excludeXhrRegex"`
	// JavaScript injection mode.
	InjectionMode string `json:"injectionMode"`
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings.
	AddCrossOriginAnonymousAttribute bool `json:"addCrossOriginAnonymousAttribute,omitempty"`
	// Time duration for the cache settings.
	ScriptTagCacheDurationInHours int32 `json:"scriptTagCacheDurationInHours,omitempty"`
	// The location of your application’s custom JavaScript library file.  If nothing specified the root directory of your web server is used.
	LibraryFileLocation string `json:"libraryFileLocation,omitempty"`
	// The location to send monitoring data from the JavaScript tag.  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	MonitoringDataPath string `json:"monitoringDataPath,omitempty"`
	// Additional JavaScript tag properties that are specific to your application. To do this, type key=value pairs separated using a (|) symbol.
	CustomConfigurationProperties string `json:"customConfigurationProperties"`
	// Path to identify the server’s request ID.
	ServerRequestPathId string `json:"serverRequestPathId"`
	// Secure attribute usage for Dynatrace cookies enabled/disabled.
	SecureCookieAttribute bool `json:"secureCookieAttribute"`
	// Domain for cookie placement.
	CookiePlacementDomain string `json:"cookiePlacementDomain"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled.
	CacheControlHeaderOptimizations bool `json:"cacheControlHeaderOptimizations"`
	AdvancedJavaScriptTagSettings AdvancedJavaScriptTagSettings `json:"advancedJavaScriptTagSettings"`
	BrowserRestrictionSettings WebApplicationConfigBrowserRestrictionSettings `json:"browserRestrictionSettings,omitempty"`
	IpAddressRestrictionSettings WebApplicationConfigIpAddressRestrictionSettings `json:"ipAddressRestrictionSettings,omitempty"`
	// Java script injection rules.
	JavaScriptInjectionRules []JavaScriptInjectionRules `json:"javaScriptInjectionRules,omitempty"`
}
