/*
 * Dynatrace Configuration API
 *
 * Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// WhitelistedAwsAccount struct for WhitelistedAwsAccount
type WhitelistedAwsAccount struct {
	// The AWS account id to whitelist
	Id string `json:"id"`
}

// NewWhitelistedAwsAccount instantiates a new WhitelistedAwsAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhitelistedAwsAccount(id string, ) *WhitelistedAwsAccount {
	this := WhitelistedAwsAccount{}
	this.Id = id
	return &this
}

// NewWhitelistedAwsAccountWithDefaults instantiates a new WhitelistedAwsAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhitelistedAwsAccountWithDefaults() *WhitelistedAwsAccount {
	this := WhitelistedAwsAccount{}
	return &this
}

// GetId returns the Id field value
func (o *WhitelistedAwsAccount) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WhitelistedAwsAccount) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WhitelistedAwsAccount) SetId(v string) {
	o.Id = v
}

func (o WhitelistedAwsAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableWhitelistedAwsAccount struct {
	value *WhitelistedAwsAccount
	isSet bool
}

func (v NullableWhitelistedAwsAccount) Get() *WhitelistedAwsAccount {
	return v.value
}

func (v *NullableWhitelistedAwsAccount) Set(val *WhitelistedAwsAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableWhitelistedAwsAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableWhitelistedAwsAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhitelistedAwsAccount(val *WhitelistedAwsAccount) *NullableWhitelistedAwsAccount {
	return &NullableWhitelistedAwsAccount{value: val, isSet: true}
}

func (v NullableWhitelistedAwsAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhitelistedAwsAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


