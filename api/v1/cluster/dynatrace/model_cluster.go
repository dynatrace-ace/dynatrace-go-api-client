/*
 * Dynatrace Cluster API
 *
 * Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters.   To authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:  * 400 - Bad Request: Some request parameters are not correct. See response body for details. * 401 - Unauthorized: A valid authorization header is required but is missing. * 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid. * 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account. * 500 - Internal Server Error: See response body for details. * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade. 
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// Cluster struct for Cluster
type Cluster struct {
	// Node ID
	Id *int32 `json:"id,omitempty"`
	// Cluster member address
	ClusterMemberAddress *string `json:"clusterMemberAddress,omitempty"`
	// Operation state
	OperationState *string `json:"operationState,omitempty"`
	// Server version
	BuildVersion *string `json:"buildVersion,omitempty"`
	// OS info
	OsInfo *string `json:"osInfo,omitempty"`
	// JVM info
	JvmInfo *string `json:"jvmInfo,omitempty"`
	// DNS entry point URIs
	DnsEntryPointUris *[]string `json:"dnsEntryPointUris,omitempty"`
	// REST service root URIs
	RestServiceRootUris *[]string `json:"restServiceRootUris,omitempty"`
	// Communication URIs
	CommunicationUris *[]string `json:"communicationUris,omitempty"`
}

// NewCluster instantiates a new Cluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCluster() *Cluster {
	this := Cluster{}
	return &this
}

// NewClusterWithDefaults instantiates a new Cluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterWithDefaults() *Cluster {
	this := Cluster{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Cluster) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Cluster) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Cluster) SetId(v int32) {
	o.Id = &v
}

// GetClusterMemberAddress returns the ClusterMemberAddress field value if set, zero value otherwise.
func (o *Cluster) GetClusterMemberAddress() string {
	if o == nil || o.ClusterMemberAddress == nil {
		var ret string
		return ret
	}
	return *o.ClusterMemberAddress
}

// GetClusterMemberAddressOk returns a tuple with the ClusterMemberAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetClusterMemberAddressOk() (*string, bool) {
	if o == nil || o.ClusterMemberAddress == nil {
		return nil, false
	}
	return o.ClusterMemberAddress, true
}

// HasClusterMemberAddress returns a boolean if a field has been set.
func (o *Cluster) HasClusterMemberAddress() bool {
	if o != nil && o.ClusterMemberAddress != nil {
		return true
	}

	return false
}

// SetClusterMemberAddress gets a reference to the given string and assigns it to the ClusterMemberAddress field.
func (o *Cluster) SetClusterMemberAddress(v string) {
	o.ClusterMemberAddress = &v
}

// GetOperationState returns the OperationState field value if set, zero value otherwise.
func (o *Cluster) GetOperationState() string {
	if o == nil || o.OperationState == nil {
		var ret string
		return ret
	}
	return *o.OperationState
}

// GetOperationStateOk returns a tuple with the OperationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetOperationStateOk() (*string, bool) {
	if o == nil || o.OperationState == nil {
		return nil, false
	}
	return o.OperationState, true
}

// HasOperationState returns a boolean if a field has been set.
func (o *Cluster) HasOperationState() bool {
	if o != nil && o.OperationState != nil {
		return true
	}

	return false
}

// SetOperationState gets a reference to the given string and assigns it to the OperationState field.
func (o *Cluster) SetOperationState(v string) {
	o.OperationState = &v
}

// GetBuildVersion returns the BuildVersion field value if set, zero value otherwise.
func (o *Cluster) GetBuildVersion() string {
	if o == nil || o.BuildVersion == nil {
		var ret string
		return ret
	}
	return *o.BuildVersion
}

// GetBuildVersionOk returns a tuple with the BuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetBuildVersionOk() (*string, bool) {
	if o == nil || o.BuildVersion == nil {
		return nil, false
	}
	return o.BuildVersion, true
}

// HasBuildVersion returns a boolean if a field has been set.
func (o *Cluster) HasBuildVersion() bool {
	if o != nil && o.BuildVersion != nil {
		return true
	}

	return false
}

// SetBuildVersion gets a reference to the given string and assigns it to the BuildVersion field.
func (o *Cluster) SetBuildVersion(v string) {
	o.BuildVersion = &v
}

// GetOsInfo returns the OsInfo field value if set, zero value otherwise.
func (o *Cluster) GetOsInfo() string {
	if o == nil || o.OsInfo == nil {
		var ret string
		return ret
	}
	return *o.OsInfo
}

// GetOsInfoOk returns a tuple with the OsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetOsInfoOk() (*string, bool) {
	if o == nil || o.OsInfo == nil {
		return nil, false
	}
	return o.OsInfo, true
}

// HasOsInfo returns a boolean if a field has been set.
func (o *Cluster) HasOsInfo() bool {
	if o != nil && o.OsInfo != nil {
		return true
	}

	return false
}

// SetOsInfo gets a reference to the given string and assigns it to the OsInfo field.
func (o *Cluster) SetOsInfo(v string) {
	o.OsInfo = &v
}

// GetJvmInfo returns the JvmInfo field value if set, zero value otherwise.
func (o *Cluster) GetJvmInfo() string {
	if o == nil || o.JvmInfo == nil {
		var ret string
		return ret
	}
	return *o.JvmInfo
}

// GetJvmInfoOk returns a tuple with the JvmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetJvmInfoOk() (*string, bool) {
	if o == nil || o.JvmInfo == nil {
		return nil, false
	}
	return o.JvmInfo, true
}

// HasJvmInfo returns a boolean if a field has been set.
func (o *Cluster) HasJvmInfo() bool {
	if o != nil && o.JvmInfo != nil {
		return true
	}

	return false
}

// SetJvmInfo gets a reference to the given string and assigns it to the JvmInfo field.
func (o *Cluster) SetJvmInfo(v string) {
	o.JvmInfo = &v
}

// GetDnsEntryPointUris returns the DnsEntryPointUris field value if set, zero value otherwise.
func (o *Cluster) GetDnsEntryPointUris() []string {
	if o == nil || o.DnsEntryPointUris == nil {
		var ret []string
		return ret
	}
	return *o.DnsEntryPointUris
}

// GetDnsEntryPointUrisOk returns a tuple with the DnsEntryPointUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetDnsEntryPointUrisOk() (*[]string, bool) {
	if o == nil || o.DnsEntryPointUris == nil {
		return nil, false
	}
	return o.DnsEntryPointUris, true
}

// HasDnsEntryPointUris returns a boolean if a field has been set.
func (o *Cluster) HasDnsEntryPointUris() bool {
	if o != nil && o.DnsEntryPointUris != nil {
		return true
	}

	return false
}

// SetDnsEntryPointUris gets a reference to the given []string and assigns it to the DnsEntryPointUris field.
func (o *Cluster) SetDnsEntryPointUris(v []string) {
	o.DnsEntryPointUris = &v
}

// GetRestServiceRootUris returns the RestServiceRootUris field value if set, zero value otherwise.
func (o *Cluster) GetRestServiceRootUris() []string {
	if o == nil || o.RestServiceRootUris == nil {
		var ret []string
		return ret
	}
	return *o.RestServiceRootUris
}

// GetRestServiceRootUrisOk returns a tuple with the RestServiceRootUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetRestServiceRootUrisOk() (*[]string, bool) {
	if o == nil || o.RestServiceRootUris == nil {
		return nil, false
	}
	return o.RestServiceRootUris, true
}

// HasRestServiceRootUris returns a boolean if a field has been set.
func (o *Cluster) HasRestServiceRootUris() bool {
	if o != nil && o.RestServiceRootUris != nil {
		return true
	}

	return false
}

// SetRestServiceRootUris gets a reference to the given []string and assigns it to the RestServiceRootUris field.
func (o *Cluster) SetRestServiceRootUris(v []string) {
	o.RestServiceRootUris = &v
}

// GetCommunicationUris returns the CommunicationUris field value if set, zero value otherwise.
func (o *Cluster) GetCommunicationUris() []string {
	if o == nil || o.CommunicationUris == nil {
		var ret []string
		return ret
	}
	return *o.CommunicationUris
}

// GetCommunicationUrisOk returns a tuple with the CommunicationUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetCommunicationUrisOk() (*[]string, bool) {
	if o == nil || o.CommunicationUris == nil {
		return nil, false
	}
	return o.CommunicationUris, true
}

// HasCommunicationUris returns a boolean if a field has been set.
func (o *Cluster) HasCommunicationUris() bool {
	if o != nil && o.CommunicationUris != nil {
		return true
	}

	return false
}

// SetCommunicationUris gets a reference to the given []string and assigns it to the CommunicationUris field.
func (o *Cluster) SetCommunicationUris(v []string) {
	o.CommunicationUris = &v
}

func (o Cluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ClusterMemberAddress != nil {
		toSerialize["clusterMemberAddress"] = o.ClusterMemberAddress
	}
	if o.OperationState != nil {
		toSerialize["operationState"] = o.OperationState
	}
	if o.BuildVersion != nil {
		toSerialize["buildVersion"] = o.BuildVersion
	}
	if o.OsInfo != nil {
		toSerialize["osInfo"] = o.OsInfo
	}
	if o.JvmInfo != nil {
		toSerialize["jvmInfo"] = o.JvmInfo
	}
	if o.DnsEntryPointUris != nil {
		toSerialize["dnsEntryPointUris"] = o.DnsEntryPointUris
	}
	if o.RestServiceRootUris != nil {
		toSerialize["restServiceRootUris"] = o.RestServiceRootUris
	}
	if o.CommunicationUris != nil {
		toSerialize["communicationUris"] = o.CommunicationUris
	}
	return json.Marshal(toSerialize)
}

type NullableCluster struct {
	value *Cluster
	isSet bool
}

func (v NullableCluster) Get() *Cluster {
	return v.value
}

func (v *NullableCluster) Set(val *Cluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCluster(val *Cluster) *NullableCluster {
	return &NullableCluster{value: val, isSet: true}
}

func (v NullableCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


