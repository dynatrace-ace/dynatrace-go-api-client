/*
 * Dynatrace Cluster API
 *
 * Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters.   To authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:  * 400 - Bad Request: Some request parameters are not correct. See response body for details. * 401 - Unauthorized: A valid authorization header is required but is missing. * 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid. * 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account. * 500 - Internal Server Error: See response body for details. * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade. 
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// NodeJoiningPreCheckStatusDto struct for NodeJoiningPreCheckStatusDto
type NodeJoiningPreCheckStatusDto struct {
	NodeJoiningPreCheckFinished *bool `json:"nodeJoiningPreCheckFinished,omitempty"`
	CanRunNodeInstallation *bool `json:"canRunNodeInstallation,omitempty"`
	Details *string `json:"details,omitempty"`
}

// NewNodeJoiningPreCheckStatusDto instantiates a new NodeJoiningPreCheckStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeJoiningPreCheckStatusDto() *NodeJoiningPreCheckStatusDto {
	this := NodeJoiningPreCheckStatusDto{}
	return &this
}

// NewNodeJoiningPreCheckStatusDtoWithDefaults instantiates a new NodeJoiningPreCheckStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeJoiningPreCheckStatusDtoWithDefaults() *NodeJoiningPreCheckStatusDto {
	this := NodeJoiningPreCheckStatusDto{}
	return &this
}

// GetNodeJoiningPreCheckFinished returns the NodeJoiningPreCheckFinished field value if set, zero value otherwise.
func (o *NodeJoiningPreCheckStatusDto) GetNodeJoiningPreCheckFinished() bool {
	if o == nil || o.NodeJoiningPreCheckFinished == nil {
		var ret bool
		return ret
	}
	return *o.NodeJoiningPreCheckFinished
}

// GetNodeJoiningPreCheckFinishedOk returns a tuple with the NodeJoiningPreCheckFinished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeJoiningPreCheckStatusDto) GetNodeJoiningPreCheckFinishedOk() (*bool, bool) {
	if o == nil || o.NodeJoiningPreCheckFinished == nil {
		return nil, false
	}
	return o.NodeJoiningPreCheckFinished, true
}

// HasNodeJoiningPreCheckFinished returns a boolean if a field has been set.
func (o *NodeJoiningPreCheckStatusDto) HasNodeJoiningPreCheckFinished() bool {
	if o != nil && o.NodeJoiningPreCheckFinished != nil {
		return true
	}

	return false
}

// SetNodeJoiningPreCheckFinished gets a reference to the given bool and assigns it to the NodeJoiningPreCheckFinished field.
func (o *NodeJoiningPreCheckStatusDto) SetNodeJoiningPreCheckFinished(v bool) {
	o.NodeJoiningPreCheckFinished = &v
}

// GetCanRunNodeInstallation returns the CanRunNodeInstallation field value if set, zero value otherwise.
func (o *NodeJoiningPreCheckStatusDto) GetCanRunNodeInstallation() bool {
	if o == nil || o.CanRunNodeInstallation == nil {
		var ret bool
		return ret
	}
	return *o.CanRunNodeInstallation
}

// GetCanRunNodeInstallationOk returns a tuple with the CanRunNodeInstallation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeJoiningPreCheckStatusDto) GetCanRunNodeInstallationOk() (*bool, bool) {
	if o == nil || o.CanRunNodeInstallation == nil {
		return nil, false
	}
	return o.CanRunNodeInstallation, true
}

// HasCanRunNodeInstallation returns a boolean if a field has been set.
func (o *NodeJoiningPreCheckStatusDto) HasCanRunNodeInstallation() bool {
	if o != nil && o.CanRunNodeInstallation != nil {
		return true
	}

	return false
}

// SetCanRunNodeInstallation gets a reference to the given bool and assigns it to the CanRunNodeInstallation field.
func (o *NodeJoiningPreCheckStatusDto) SetCanRunNodeInstallation(v bool) {
	o.CanRunNodeInstallation = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *NodeJoiningPreCheckStatusDto) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeJoiningPreCheckStatusDto) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *NodeJoiningPreCheckStatusDto) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *NodeJoiningPreCheckStatusDto) SetDetails(v string) {
	o.Details = &v
}

func (o NodeJoiningPreCheckStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeJoiningPreCheckFinished != nil {
		toSerialize["nodeJoiningPreCheckFinished"] = o.NodeJoiningPreCheckFinished
	}
	if o.CanRunNodeInstallation != nil {
		toSerialize["canRunNodeInstallation"] = o.CanRunNodeInstallation
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableNodeJoiningPreCheckStatusDto struct {
	value *NodeJoiningPreCheckStatusDto
	isSet bool
}

func (v NullableNodeJoiningPreCheckStatusDto) Get() *NodeJoiningPreCheckStatusDto {
	return v.value
}

func (v *NullableNodeJoiningPreCheckStatusDto) Set(val *NodeJoiningPreCheckStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeJoiningPreCheckStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeJoiningPreCheckStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeJoiningPreCheckStatusDto(val *NodeJoiningPreCheckStatusDto) *NullableNodeJoiningPreCheckStatusDto {
	return &NullableNodeJoiningPreCheckStatusDto{value: val, isSet: true}
}

func (v NullableNodeJoiningPreCheckStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeJoiningPreCheckStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


