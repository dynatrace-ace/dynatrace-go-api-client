/*
 * Dynatrace Cluster API
 *
 * Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters.   To authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:  * 400 - Bad Request: Some request parameters are not correct. See response body for details. * 401 - Unauthorized: A valid authorization header is required but is missing. * 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid. * 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account. * 500 - Internal Server Error: See response body for details. * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade. 
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// LdapUsersQueryDescImpl struct for LdapUsersQueryDescImpl
type LdapUsersQueryDescImpl struct {
	UsersBaseDn *string `json:"usersBaseDn,omitempty"`
	UsersAccountNameAttribute *string `json:"usersAccountNameAttribute,omitempty"`
	UsersFirstNameAttribute *string `json:"usersFirstNameAttribute,omitempty"`
	UsersLastNameAttribute *string `json:"usersLastNameAttribute,omitempty"`
	UsersEmailAttribute *string `json:"usersEmailAttribute,omitempty"`
	UsersMembershipAttribute *string `json:"usersMembershipAttribute,omitempty"`
	UsersFilter *string `json:"usersFilter,omitempty"`
}

// NewLdapUsersQueryDescImpl instantiates a new LdapUsersQueryDescImpl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapUsersQueryDescImpl() *LdapUsersQueryDescImpl {
	this := LdapUsersQueryDescImpl{}
	return &this
}

// NewLdapUsersQueryDescImplWithDefaults instantiates a new LdapUsersQueryDescImpl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapUsersQueryDescImplWithDefaults() *LdapUsersQueryDescImpl {
	this := LdapUsersQueryDescImpl{}
	return &this
}

// GetUsersBaseDn returns the UsersBaseDn field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersBaseDn() string {
	if o == nil || o.UsersBaseDn == nil {
		var ret string
		return ret
	}
	return *o.UsersBaseDn
}

// GetUsersBaseDnOk returns a tuple with the UsersBaseDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersBaseDnOk() (*string, bool) {
	if o == nil || o.UsersBaseDn == nil {
		return nil, false
	}
	return o.UsersBaseDn, true
}

// HasUsersBaseDn returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersBaseDn() bool {
	if o != nil && o.UsersBaseDn != nil {
		return true
	}

	return false
}

// SetUsersBaseDn gets a reference to the given string and assigns it to the UsersBaseDn field.
func (o *LdapUsersQueryDescImpl) SetUsersBaseDn(v string) {
	o.UsersBaseDn = &v
}

// GetUsersAccountNameAttribute returns the UsersAccountNameAttribute field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersAccountNameAttribute() string {
	if o == nil || o.UsersAccountNameAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsersAccountNameAttribute
}

// GetUsersAccountNameAttributeOk returns a tuple with the UsersAccountNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersAccountNameAttributeOk() (*string, bool) {
	if o == nil || o.UsersAccountNameAttribute == nil {
		return nil, false
	}
	return o.UsersAccountNameAttribute, true
}

// HasUsersAccountNameAttribute returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersAccountNameAttribute() bool {
	if o != nil && o.UsersAccountNameAttribute != nil {
		return true
	}

	return false
}

// SetUsersAccountNameAttribute gets a reference to the given string and assigns it to the UsersAccountNameAttribute field.
func (o *LdapUsersQueryDescImpl) SetUsersAccountNameAttribute(v string) {
	o.UsersAccountNameAttribute = &v
}

// GetUsersFirstNameAttribute returns the UsersFirstNameAttribute field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersFirstNameAttribute() string {
	if o == nil || o.UsersFirstNameAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsersFirstNameAttribute
}

// GetUsersFirstNameAttributeOk returns a tuple with the UsersFirstNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersFirstNameAttributeOk() (*string, bool) {
	if o == nil || o.UsersFirstNameAttribute == nil {
		return nil, false
	}
	return o.UsersFirstNameAttribute, true
}

// HasUsersFirstNameAttribute returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersFirstNameAttribute() bool {
	if o != nil && o.UsersFirstNameAttribute != nil {
		return true
	}

	return false
}

// SetUsersFirstNameAttribute gets a reference to the given string and assigns it to the UsersFirstNameAttribute field.
func (o *LdapUsersQueryDescImpl) SetUsersFirstNameAttribute(v string) {
	o.UsersFirstNameAttribute = &v
}

// GetUsersLastNameAttribute returns the UsersLastNameAttribute field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersLastNameAttribute() string {
	if o == nil || o.UsersLastNameAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsersLastNameAttribute
}

// GetUsersLastNameAttributeOk returns a tuple with the UsersLastNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersLastNameAttributeOk() (*string, bool) {
	if o == nil || o.UsersLastNameAttribute == nil {
		return nil, false
	}
	return o.UsersLastNameAttribute, true
}

// HasUsersLastNameAttribute returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersLastNameAttribute() bool {
	if o != nil && o.UsersLastNameAttribute != nil {
		return true
	}

	return false
}

// SetUsersLastNameAttribute gets a reference to the given string and assigns it to the UsersLastNameAttribute field.
func (o *LdapUsersQueryDescImpl) SetUsersLastNameAttribute(v string) {
	o.UsersLastNameAttribute = &v
}

// GetUsersEmailAttribute returns the UsersEmailAttribute field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersEmailAttribute() string {
	if o == nil || o.UsersEmailAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsersEmailAttribute
}

// GetUsersEmailAttributeOk returns a tuple with the UsersEmailAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersEmailAttributeOk() (*string, bool) {
	if o == nil || o.UsersEmailAttribute == nil {
		return nil, false
	}
	return o.UsersEmailAttribute, true
}

// HasUsersEmailAttribute returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersEmailAttribute() bool {
	if o != nil && o.UsersEmailAttribute != nil {
		return true
	}

	return false
}

// SetUsersEmailAttribute gets a reference to the given string and assigns it to the UsersEmailAttribute field.
func (o *LdapUsersQueryDescImpl) SetUsersEmailAttribute(v string) {
	o.UsersEmailAttribute = &v
}

// GetUsersMembershipAttribute returns the UsersMembershipAttribute field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersMembershipAttribute() string {
	if o == nil || o.UsersMembershipAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsersMembershipAttribute
}

// GetUsersMembershipAttributeOk returns a tuple with the UsersMembershipAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersMembershipAttributeOk() (*string, bool) {
	if o == nil || o.UsersMembershipAttribute == nil {
		return nil, false
	}
	return o.UsersMembershipAttribute, true
}

// HasUsersMembershipAttribute returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersMembershipAttribute() bool {
	if o != nil && o.UsersMembershipAttribute != nil {
		return true
	}

	return false
}

// SetUsersMembershipAttribute gets a reference to the given string and assigns it to the UsersMembershipAttribute field.
func (o *LdapUsersQueryDescImpl) SetUsersMembershipAttribute(v string) {
	o.UsersMembershipAttribute = &v
}

// GetUsersFilter returns the UsersFilter field value if set, zero value otherwise.
func (o *LdapUsersQueryDescImpl) GetUsersFilter() string {
	if o == nil || o.UsersFilter == nil {
		var ret string
		return ret
	}
	return *o.UsersFilter
}

// GetUsersFilterOk returns a tuple with the UsersFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersQueryDescImpl) GetUsersFilterOk() (*string, bool) {
	if o == nil || o.UsersFilter == nil {
		return nil, false
	}
	return o.UsersFilter, true
}

// HasUsersFilter returns a boolean if a field has been set.
func (o *LdapUsersQueryDescImpl) HasUsersFilter() bool {
	if o != nil && o.UsersFilter != nil {
		return true
	}

	return false
}

// SetUsersFilter gets a reference to the given string and assigns it to the UsersFilter field.
func (o *LdapUsersQueryDescImpl) SetUsersFilter(v string) {
	o.UsersFilter = &v
}

func (o LdapUsersQueryDescImpl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UsersBaseDn != nil {
		toSerialize["usersBaseDn"] = o.UsersBaseDn
	}
	if o.UsersAccountNameAttribute != nil {
		toSerialize["usersAccountNameAttribute"] = o.UsersAccountNameAttribute
	}
	if o.UsersFirstNameAttribute != nil {
		toSerialize["usersFirstNameAttribute"] = o.UsersFirstNameAttribute
	}
	if o.UsersLastNameAttribute != nil {
		toSerialize["usersLastNameAttribute"] = o.UsersLastNameAttribute
	}
	if o.UsersEmailAttribute != nil {
		toSerialize["usersEmailAttribute"] = o.UsersEmailAttribute
	}
	if o.UsersMembershipAttribute != nil {
		toSerialize["usersMembershipAttribute"] = o.UsersMembershipAttribute
	}
	if o.UsersFilter != nil {
		toSerialize["usersFilter"] = o.UsersFilter
	}
	return json.Marshal(toSerialize)
}

type NullableLdapUsersQueryDescImpl struct {
	value *LdapUsersQueryDescImpl
	isSet bool
}

func (v NullableLdapUsersQueryDescImpl) Get() *LdapUsersQueryDescImpl {
	return v.value
}

func (v *NullableLdapUsersQueryDescImpl) Set(val *LdapUsersQueryDescImpl) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapUsersQueryDescImpl) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapUsersQueryDescImpl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapUsersQueryDescImpl(val *LdapUsersQueryDescImpl) *NullableLdapUsersQueryDescImpl {
	return &NullableLdapUsersQueryDescImpl{value: val, isSet: true}
}

func (v NullableLdapUsersQueryDescImpl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapUsersQueryDescImpl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


