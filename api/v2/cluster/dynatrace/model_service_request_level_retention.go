/*
 * Dynatrace Cluster API
 *
 * Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters.   To authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:  * 400 - Bad Request: Some request parameters are not correct. See response body for details. * 401 - Unauthorized: A valid authorization header is required but is missing. * 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid. * 404 - Not Found: Endpoint does not exist or some entities could not be found. * 500 - Internal Server Error: See response body for details. * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// ServiceRequestLevelRetention Service request level retention settings on environment level. Service code level retention time can't be greater than service request level retention time and both can't exceed one year.If skipped when editing via PUT method then already set limit will remain.
type ServiceRequestLevelRetention struct {
	// Maximum retention limit [days]
	MaxLimitInDays *int64 `json:"maxLimitInDays,omitempty"`
	// Current data age [milliseconds]
	CurrentlyUsedInMillis *int64 `json:"currentlyUsedInMillis,omitempty"`
	// Current data age [days]
	CurrentlyUsedInDays *int64 `json:"currentlyUsedInDays,omitempty"`
}

// NewServiceRequestLevelRetention instantiates a new ServiceRequestLevelRetention object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRequestLevelRetention() *ServiceRequestLevelRetention {
	this := ServiceRequestLevelRetention{}
	return &this
}

// NewServiceRequestLevelRetentionWithDefaults instantiates a new ServiceRequestLevelRetention object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRequestLevelRetentionWithDefaults() *ServiceRequestLevelRetention {
	this := ServiceRequestLevelRetention{}
	return &this
}

// GetMaxLimitInDays returns the MaxLimitInDays field value if set, zero value otherwise.
func (o *ServiceRequestLevelRetention) GetMaxLimitInDays() int64 {
	if o == nil || o.MaxLimitInDays == nil {
		var ret int64
		return ret
	}
	return *o.MaxLimitInDays
}

// GetMaxLimitInDaysOk returns a tuple with the MaxLimitInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRequestLevelRetention) GetMaxLimitInDaysOk() (*int64, bool) {
	if o == nil || o.MaxLimitInDays == nil {
		return nil, false
	}
	return o.MaxLimitInDays, true
}

// HasMaxLimitInDays returns a boolean if a field has been set.
func (o *ServiceRequestLevelRetention) HasMaxLimitInDays() bool {
	if o != nil && o.MaxLimitInDays != nil {
		return true
	}

	return false
}

// SetMaxLimitInDays gets a reference to the given int64 and assigns it to the MaxLimitInDays field.
func (o *ServiceRequestLevelRetention) SetMaxLimitInDays(v int64) {
	o.MaxLimitInDays = &v
}

// GetCurrentlyUsedInMillis returns the CurrentlyUsedInMillis field value if set, zero value otherwise.
func (o *ServiceRequestLevelRetention) GetCurrentlyUsedInMillis() int64 {
	if o == nil || o.CurrentlyUsedInMillis == nil {
		var ret int64
		return ret
	}
	return *o.CurrentlyUsedInMillis
}

// GetCurrentlyUsedInMillisOk returns a tuple with the CurrentlyUsedInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRequestLevelRetention) GetCurrentlyUsedInMillisOk() (*int64, bool) {
	if o == nil || o.CurrentlyUsedInMillis == nil {
		return nil, false
	}
	return o.CurrentlyUsedInMillis, true
}

// HasCurrentlyUsedInMillis returns a boolean if a field has been set.
func (o *ServiceRequestLevelRetention) HasCurrentlyUsedInMillis() bool {
	if o != nil && o.CurrentlyUsedInMillis != nil {
		return true
	}

	return false
}

// SetCurrentlyUsedInMillis gets a reference to the given int64 and assigns it to the CurrentlyUsedInMillis field.
func (o *ServiceRequestLevelRetention) SetCurrentlyUsedInMillis(v int64) {
	o.CurrentlyUsedInMillis = &v
}

// GetCurrentlyUsedInDays returns the CurrentlyUsedInDays field value if set, zero value otherwise.
func (o *ServiceRequestLevelRetention) GetCurrentlyUsedInDays() int64 {
	if o == nil || o.CurrentlyUsedInDays == nil {
		var ret int64
		return ret
	}
	return *o.CurrentlyUsedInDays
}

// GetCurrentlyUsedInDaysOk returns a tuple with the CurrentlyUsedInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRequestLevelRetention) GetCurrentlyUsedInDaysOk() (*int64, bool) {
	if o == nil || o.CurrentlyUsedInDays == nil {
		return nil, false
	}
	return o.CurrentlyUsedInDays, true
}

// HasCurrentlyUsedInDays returns a boolean if a field has been set.
func (o *ServiceRequestLevelRetention) HasCurrentlyUsedInDays() bool {
	if o != nil && o.CurrentlyUsedInDays != nil {
		return true
	}

	return false
}

// SetCurrentlyUsedInDays gets a reference to the given int64 and assigns it to the CurrentlyUsedInDays field.
func (o *ServiceRequestLevelRetention) SetCurrentlyUsedInDays(v int64) {
	o.CurrentlyUsedInDays = &v
}

func (o ServiceRequestLevelRetention) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxLimitInDays != nil {
		toSerialize["maxLimitInDays"] = o.MaxLimitInDays
	}
	if o.CurrentlyUsedInMillis != nil {
		toSerialize["currentlyUsedInMillis"] = o.CurrentlyUsedInMillis
	}
	if o.CurrentlyUsedInDays != nil {
		toSerialize["currentlyUsedInDays"] = o.CurrentlyUsedInDays
	}
	return json.Marshal(toSerialize)
}

type NullableServiceRequestLevelRetention struct {
	value *ServiceRequestLevelRetention
	isSet bool
}

func (v NullableServiceRequestLevelRetention) Get() *ServiceRequestLevelRetention {
	return v.value
}

func (v *NullableServiceRequestLevelRetention) Set(val *ServiceRequestLevelRetention) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRequestLevelRetention) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRequestLevelRetention) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRequestLevelRetention(val *ServiceRequestLevelRetention) *NullableServiceRequestLevelRetention {
	return &NullableServiceRequestLevelRetention{value: val, isSet: true}
}

func (v NullableServiceRequestLevelRetention) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRequestLevelRetention) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


