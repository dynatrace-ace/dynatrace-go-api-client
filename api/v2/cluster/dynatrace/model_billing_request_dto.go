/*
 * Dynatrace Cluster API
 *
 * Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters.   To authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:  * 400 - Bad Request: Some request parameters are not correct. See response body for details. * 401 - Unauthorized: A valid authorization header is required but is missing. * 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid. * 404 - Not Found: Endpoint does not exist or some entities could not be found. * 500 - Internal Server Error: See response body for details. * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
	"time"
)

// BillingRequestDto struct for BillingRequestDto
type BillingRequestDto struct {
	ClusterUuid *string `json:"clusterUuid,omitempty"`
	TimeFrameStart *time.Time `json:"timeFrameStart,omitempty"`
	TimeFrameEnd *time.Time `json:"timeFrameEnd,omitempty"`
	EnvironmentBillingEntries *[]EnvironmentUsageDto `json:"environmentBillingEntries,omitempty"`
}

// NewBillingRequestDto instantiates a new BillingRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingRequestDto() *BillingRequestDto {
	this := BillingRequestDto{}
	return &this
}

// NewBillingRequestDtoWithDefaults instantiates a new BillingRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingRequestDtoWithDefaults() *BillingRequestDto {
	this := BillingRequestDto{}
	return &this
}

// GetClusterUuid returns the ClusterUuid field value if set, zero value otherwise.
func (o *BillingRequestDto) GetClusterUuid() string {
	if o == nil || o.ClusterUuid == nil {
		var ret string
		return ret
	}
	return *o.ClusterUuid
}

// GetClusterUuidOk returns a tuple with the ClusterUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingRequestDto) GetClusterUuidOk() (*string, bool) {
	if o == nil || o.ClusterUuid == nil {
		return nil, false
	}
	return o.ClusterUuid, true
}

// HasClusterUuid returns a boolean if a field has been set.
func (o *BillingRequestDto) HasClusterUuid() bool {
	if o != nil && o.ClusterUuid != nil {
		return true
	}

	return false
}

// SetClusterUuid gets a reference to the given string and assigns it to the ClusterUuid field.
func (o *BillingRequestDto) SetClusterUuid(v string) {
	o.ClusterUuid = &v
}

// GetTimeFrameStart returns the TimeFrameStart field value if set, zero value otherwise.
func (o *BillingRequestDto) GetTimeFrameStart() time.Time {
	if o == nil || o.TimeFrameStart == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeFrameStart
}

// GetTimeFrameStartOk returns a tuple with the TimeFrameStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingRequestDto) GetTimeFrameStartOk() (*time.Time, bool) {
	if o == nil || o.TimeFrameStart == nil {
		return nil, false
	}
	return o.TimeFrameStart, true
}

// HasTimeFrameStart returns a boolean if a field has been set.
func (o *BillingRequestDto) HasTimeFrameStart() bool {
	if o != nil && o.TimeFrameStart != nil {
		return true
	}

	return false
}

// SetTimeFrameStart gets a reference to the given time.Time and assigns it to the TimeFrameStart field.
func (o *BillingRequestDto) SetTimeFrameStart(v time.Time) {
	o.TimeFrameStart = &v
}

// GetTimeFrameEnd returns the TimeFrameEnd field value if set, zero value otherwise.
func (o *BillingRequestDto) GetTimeFrameEnd() time.Time {
	if o == nil || o.TimeFrameEnd == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeFrameEnd
}

// GetTimeFrameEndOk returns a tuple with the TimeFrameEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingRequestDto) GetTimeFrameEndOk() (*time.Time, bool) {
	if o == nil || o.TimeFrameEnd == nil {
		return nil, false
	}
	return o.TimeFrameEnd, true
}

// HasTimeFrameEnd returns a boolean if a field has been set.
func (o *BillingRequestDto) HasTimeFrameEnd() bool {
	if o != nil && o.TimeFrameEnd != nil {
		return true
	}

	return false
}

// SetTimeFrameEnd gets a reference to the given time.Time and assigns it to the TimeFrameEnd field.
func (o *BillingRequestDto) SetTimeFrameEnd(v time.Time) {
	o.TimeFrameEnd = &v
}

// GetEnvironmentBillingEntries returns the EnvironmentBillingEntries field value if set, zero value otherwise.
func (o *BillingRequestDto) GetEnvironmentBillingEntries() []EnvironmentUsageDto {
	if o == nil || o.EnvironmentBillingEntries == nil {
		var ret []EnvironmentUsageDto
		return ret
	}
	return *o.EnvironmentBillingEntries
}

// GetEnvironmentBillingEntriesOk returns a tuple with the EnvironmentBillingEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingRequestDto) GetEnvironmentBillingEntriesOk() (*[]EnvironmentUsageDto, bool) {
	if o == nil || o.EnvironmentBillingEntries == nil {
		return nil, false
	}
	return o.EnvironmentBillingEntries, true
}

// HasEnvironmentBillingEntries returns a boolean if a field has been set.
func (o *BillingRequestDto) HasEnvironmentBillingEntries() bool {
	if o != nil && o.EnvironmentBillingEntries != nil {
		return true
	}

	return false
}

// SetEnvironmentBillingEntries gets a reference to the given []EnvironmentUsageDto and assigns it to the EnvironmentBillingEntries field.
func (o *BillingRequestDto) SetEnvironmentBillingEntries(v []EnvironmentUsageDto) {
	o.EnvironmentBillingEntries = &v
}

func (o BillingRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterUuid != nil {
		toSerialize["clusterUuid"] = o.ClusterUuid
	}
	if o.TimeFrameStart != nil {
		toSerialize["timeFrameStart"] = o.TimeFrameStart
	}
	if o.TimeFrameEnd != nil {
		toSerialize["timeFrameEnd"] = o.TimeFrameEnd
	}
	if o.EnvironmentBillingEntries != nil {
		toSerialize["environmentBillingEntries"] = o.EnvironmentBillingEntries
	}
	return json.Marshal(toSerialize)
}

type NullableBillingRequestDto struct {
	value *BillingRequestDto
	isSet bool
}

func (v NullableBillingRequestDto) Get() *BillingRequestDto {
	return v.value
}

func (v *NullableBillingRequestDto) Set(val *BillingRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingRequestDto(val *BillingRequestDto) *NullableBillingRequestDto {
	return &NullableBillingRequestDto{value: val, isSet: true}
}

func (v NullableBillingRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


