openapi: 3.0.1
info:
  description: "Dynatrace Managed exposes cluster-wide functionality via REST endpoints.\
    \ This interactive documentation also acts as a REST client you can use to interact\
    \ with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated\
    \ in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the\
    \ response shows the result of your request. The expected response code for a\
    \ successful request is documented individually per REST endpoint. Additionally\
    \ the following error response codes can occur in our REST interface:\n\n* 400\
    \ - Bad Request: Some request parameters are not correct. See response body for\
    \ details.\n* 401 - Unauthorized: A valid authorization header is required but\
    \ is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token\
    \ is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could\
    \ not be found.\n* 500 - Internal Server Error: See response body for details.\n\
    * 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n\
    \nNotes about compatibility:\n* Operations marked as early adopter or preview\
    \ may be changed in non-compatible ways, although we try to avoid this.\n* We\
    \ may add new enum constants without incrementing the API version; thus, clients\
    \ need to handle unknown enum constants gracefully."
  title: Dynatrace Cluster API
  version: "2.0"
servers:
- url: '{protocol}://{name}/api/cluster/v2'
  variables:
    name:
      default: ""
      description: Dynatrace full cluster name.
    protocol:
      default: https
      description: The protocol for accessing the API.
security:
- Api-Token: []
tags:
- description: Manage environments
  name: Environments
- description: Manage user sessions
  name: User management
- description: Manage remote access requests
  name: Remote access
- description: View license information
  name: License
- description: Manage synthetic locations and nodes
  name: Synthetic - Locations and nodes
- description: Manage Dynatrace API authentication tokens
  name: Tokens
- description: Manage network zones
  name: Network zones
- description: View information about your ActiveGates
  name: ActiveGates
- description: Manage ActiveGate auto-update settings.
  name: ActiveGates - Auto-update configuration
- description: Manage ActiveGate auto-update jobs.
  name: ActiveGates - Auto-update jobs
- description: View available ActiveGate versions
  name: Deployment
- description: Manage settings objects
  name: Settings - Objects
- description: View settings schemas
  name: Settings - Schemas
paths:
  /license/consumption:
    get:
      description: Export license consumption data as a ZIP archive.
      operationId: getBillingArchive
      parameters:
      - description: Start timestamp (30 days ago by default)
        explode: true
        in: query
        name: startTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: End timestamp (2 hours ago by default, values from the last 2
          hours are not allowed)
        explode: true
        in: query
        name: endTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/octet-stream: {}
          description: OK - license consumption data export will start
        "400":
          description: Bad request. Provided time range is incorrect.
        "429":
          description: License consumption data is already being exported. Please
            wait for the first request to finish before requesting another export.
        "500":
          description: Operation failed
      summary: Export license consumption data
      tags:
      - License
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /license/consumption/hour:
    get:
      operationId: getBillingHour
      parameters:
      - description: Begin timestamp
        explode: true
        in: query
        name: startTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/BillingRequestDto'
          description: Success
        "400":
          description: Bad request. Provided timestamp is incorrect.
        "500":
          description: Operation failed
      summary: Retrieve license consumption
      tags:
      - License
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /environments:
    get:
      operationId: getAllEnvironments
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of environments in a single response payload. \n\n\
          The maximal allowed page size is 1000. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          The sort order. Possible sorts orders are:
           * 'name' (without quotes): Sort by name ascending.
           * '-name' (without quotes): Sort by name descending.
           * 'creationDate' (without quotes): Sort by creation date ascending.
           * '-creationDate' (without quotes): Sort by name descending.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the filter of the query. \n\nYou can set one or several\
          \ of the following criteria:\n* Name: `name(string)`. The name can be either\
          \ a substring or the full name of an environment. Case-insensitive.\n* Trial:\
          \ `trial(true)` or `trial(false)`. Only includes trial environments if true\
          \ is specified or only non-trial environments if false is specified.\n*\
          \ State: `state(ENABLED)` or `state(DISABLED)`.\n* Tag: `tag(string)`. To\
          \ filter by multiple tags by applying OR logic use `tag(string1,string2)`.\
          \ To filter by multiple tags by applying AND logic use `tag(string1),tag(string2)`.\n\
          To set several criteria, separate them with a comma (`,`). Only results,\
          \ matching **all** criteria, are included into response.\n"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |-
          If true, consumption information (limits, usage) is returned for each environment.

          Returned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead.
        explode: true
        in: query
        name: includeConsumptionInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: If true, storage information (limits, usage) is returned for
          each environment.
        explode: true
        in: query
        name: includeStorageInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          If true, uncached consumption information (limits, usage) is returned for each environment.

          Up to date consumption will be calculated. Calculation may be time consuming, so it's recommended to use **includeConsumptionInfo** parameter instead.

          If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority.
        explode: true
        in: query
        name: includeUncachedConsumptionInfo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
          description: Successful operation.
      summary: Lists all existing environments.
      tags:
      - Environments
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    post:
      operationId: createEnvironment
      parameters:
      - description: If true, a token management token with the scopes 'apiTokens.read'
          and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'
          (for usage with token API v1) is created when creating a new environment.
          This token is then returned in the response body. It can be used within
          the newly created environment to create other tokens for configuring this
          environment.
        explode: true
        in: query
        name: createToken
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Environment'
        description: The JSON body of the request. The body must not provide an ID
          as it will be automatically assigned by the Dynatrace server.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EnvironmentShortRepresentation'
          description: Success. The environment has been created and started. The
            response body contains the generated ID of the environment and a token
            with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with
            token API v2) and 'TenantTokenManagement'. The location header contains
            the generated ID as well.
        "400":
          description: Failed. The input is invalid.
      summary: Creates a new environment.
      tags:
      - Environments
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /environments/{id}:
    delete:
      operationId: deleteEnvironment
      parameters:
      - description: The ID of the environment to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response does not have a body.
        "400":
          description: Failed. For example, if an environment is not disabled.
      summary: Deletes the specified environment. An environment must be disabled
        before it can be deleted.
      tags:
      - Environments
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    get:
      operationId: getSingleEnvironment
      parameters:
      - description: The ID of the environment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          If true, consumption information (limits, usage) is returned for this environment.

          Returned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead.
        explode: true
        in: query
        name: includeConsumptionInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: If true, storage information (limits, usage) is returned for
          this environment.
        explode: true
        in: query
        name: includeStorageInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          If true, uncached consumption information (limits, usage) is returned for this environment.

          Up to date consumption will be calculated. If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority.
        explode: true
        in: query
        name: includeUncachedConsumptionInfo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Successful operation.
      summary: Gets the properties of the specified environment.
      tags:
      - Environments
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      description: If the environment with the specified ID does not exist, a new
        environment will be created.
      operationId: createOrUpdateEnvironment
      parameters:
      - description: |-
          The ID of the environment to update.

           If you set the ID in the body as well, it must match this ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If true, a token management token with the scopes 'apiTokens.read'
          and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'
          (for usage with token API v1) is created when creating a new environment.
          This token is then returned in the response body. It can be used within
          the newly created environment to create other tokens for configuring this
          environment.
        explode: true
        in: query
        name: createToken
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Environment'
        description: JSON body of the request, containing updated parameters of the
          environment.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EnvironmentShortRepresentation'
          description: Success. The new environment has been created. The response
            body contains the ID, the name and also a token management token if 'createToken'
            is 'true'.
        "204":
          description: Success. The environment has been updated. Response doesn't
            have a body.
        "400":
          description: Failed. The input is invalid.
      summary: Updates an existing environment or creates a new one.
      tags:
      - Environments
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /environments/{id}/tokenManagementToken:
    post:
      description: "The newly created token is owned by the same user who owns the\
        \ token used for authentication of creation call. \nIt has the scopes 'apiTokens.read'\
        \ and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'\
        \ (for usage with token API v1)."
      operationId: createTokenManagementToken
      parameters:
      - description: The ID of the environment where the token is valid.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentTokenManagementToken'
        description: The JSON body of the request. Contains parameters of the token.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Token'
          description: Success. The token has been created. The response body contains
            the token itself
          headers:
            Location:
              description: Token Id
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new tenant management token for an environment.
      tags:
      - Environments
      x-token-scopes:
      - '`EnvironmentTokenManagement` ("Token Management" Token creation for existing
        environments)'
  /remoteaccess/requests:
    get:
      operationId: getAllAccessRequests
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestData'
                type: array
          description: Successful
        "403":
          description: Approving remote access request is disabled
      summary: Get all access requests
      tags:
      - Remote access
      x-token-scopes:
      - '`ControlManagement` (ControlManagement)'
      - '`ServiceProviderAPI` (Service Provider API)'
    post:
      operationId: addAccessRequest
      parameters: []
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateAccessRequestDto'
        description: The JSON body of the request, containing parameters of access
          request.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestData'
          description: Successfully created
        "400":
          description: Invalid parameters
        "403":
          description: Approving remote access request is disabled
        "500":
          description: Operation failed
        "513":
          description: Mission Control is unavailable
      summary: Grant remote access permission
      tags:
      - Remote access
      x-token-scopes:
      - '`ControlManagement` (ControlManagement)'
      - '`ServiceProviderAPI` (Service Provider API)'
  /remoteaccess/requests/{requestId}:
    get:
      operationId: getAccessRequest
      parameters:
      - description: Request id param
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestData'
          description: Successful
        "400":
          description: Bad request
        "403":
          description: Approving remote access request is disabled
        "404":
          description: Not found
      summary: Get access request
      tags:
      - Remote access
      x-token-scopes:
      - '`ControlManagement` (ControlManagement)'
      - '`ServiceProviderAPI` (Service Provider API)'
  /remoteaccess/requests/{requestId}/state:
    put:
      operationId: accessRequestChangeState
      parameters:
      - description: Request id param
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccessRequestStateData'
        description: The JSON body of the request, containing new state of access
          request.
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          description: Approving remote access request is disabled
        "404":
          description: Access request not found
        "409":
          description: Access request was found, but it's already expired
        "500":
          description: Operation failed
      summary: Change state of access request
      tags:
      - Remote access
      x-token-scopes:
      - '`ControlManagement` (ControlManagement)'
      - '`ServiceProviderAPI` (Service Provider API)'
  /clusterConfig/userSessions:
    get:
      operationId: getConcurrentSessionPolicyConfig
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionsConfig'
          description: Successful
      summary: Get user sessions configuration
      tags:
      - User management
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      operationId: updateConcurrentSessionPolicyConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSessionsConfig'
      responses:
        "200":
          description: Successful
        "400":
          description: Wrong parameters
        "510":
          description: Configuration update failed
      summary: Update user sessions configuration
      tags:
      - User management
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /userSessions:
    delete:
      operationId: removeUserSession
      parameters:
      - description: User ID (mandatory)
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Bad request. User id must be filled in.
        "404":
          description: User sessions not found
        "500":
          description: Operation failed
        "510":
          description: Failed to invalidate sessions
      summary: Remove user sessions for a given user
      tags:
      - User management
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    get:
      operationId: getUserSessions
      parameters:
      - description: User ID (optional)
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSession'
                type: array
          description: Success
        "500":
          description: Operation failed
      summary: Get user sessions
      tags:
      - User management
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}/autoUpdate/validator:
    post:
      operationId: validateAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: JSON body of the request, containing auto update parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted auto-update configuration is valid.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/{agId}/autoUpdate`
        request.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}/autoUpdate:
    get:
      operationId: getAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      operationId: putAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: JSON body of the request, containing auto update parameters.
        required: true
      responses:
        "204":
          description: Success. The auto-update configuration have been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/autoUpdate:
    get:
      operationId: getClusterGlobalAutoUpdateConfig
      parameters: []
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
          description: Success
      summary: Gets the global auto-update configuration of cluster ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      operationId: putClusterGlobalAutoUpdateConfig
      parameters: []
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Success. The global auto-update configuration have been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Puts the global auto-update configuration of cluster ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/autoUpdate/validator:
    post:
      operationId: validateClusterGlobalAutoUpdateConfig
      parameters: []
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/autoUpdate` request.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/autoUpdate/{envId}:
    get:
      operationId: getGlobalAutoUpdateConfigForTenant
      parameters:
      - description: The ID of the environment.
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      operationId: putGlobalAutoUpdateConfigForTenant
      parameters:
      - description: The ID of the environment.
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Success. The global auto-update configuration have been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Puts the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/autoUpdate/{envId}/validator:
    post:
      operationId: validateGlobalAutoUpdateConfigForTenant
      parameters:
      - description: The ID of the environment.
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/autoUpdate/{envId}`
        request.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/updateJobs:
    get:
      description: The response includes ActiveGates that have both completed (successful
        and failed) jobs and jobs in progress.
      operationId: getAllUpdateJobList
      parameters:
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one day is used (`now-1d`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: If `true`, filters the resulting set of update jobs to the most
          recent update of each type.
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobsAll'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: List ActiveGates with update jobs
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}/updateJobs/{jobId}:
    delete:
      operationId: deleteUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The update-job have been deleted. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Deletes the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    get:
      operationId: getUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the parameters of the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}/updateJobs:
    get:
      description: The job can update the ActiveGate to the specified version or the
        latest available one.
      operationId: getUpdateJobListByAgId
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one week is used (`now-1w`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: If `true`, filters the resulting set of update jobs to the most
          recent update of each type.
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Lists update jobs for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    post:
      operationId: createUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: JSON body of the request, containing update-job parameters.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success. The update-job have been created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new update job for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}/updateJobs/validator:
    post:
      operationId: validateUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: JSON body of the request, containing update-job parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted update-job is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/{agId}/updateJobs`
        request.
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates:
    get:
      description: The response includes all ActiveGates that are currently connected
        to the environment or have been connected during last 2 hours.
      operationId: getAllActiveGates
      parameters:
      - description: "Filters the resulting set of ActiveGates by the name of the\
          \ host it's running on. \n\n You can specify a partial name. In that case,\
          \ the `CONTAINS` operator is used."
        explode: true
        in: query
        name: hostname
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the OS type of the
          host it's running on.
        explode: true
        in: query
        name: osType
        required: false
        schema:
          enum:
          - LINUX
          - WINDOWS
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network address.\
          \ \n\n You can specify a partial address. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkAddress
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the Load Balancer\
          \ address. \n\n You can specify a partial address. In that case, the `CONTAINS`\
          \ operator is used."
        explode: true
        in: query
        name: loadBalancerAddress
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the ActiveGate type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          - CLUSTER
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network zone.\
          \ \n\n You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkZone
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the auto-update status.
        explode: true
        in: query
        name: updateStatus
        required: false
        schema:
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: versionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the version in `<major>.<minor>.<revision>` format (for example,\
          \ `1.195.0`) here."
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the actual state
          of auto-update.
        explode: true
        in: query
        name: autoUpdate
        required: false
        schema:
          enum:
          - DISABLED
          - ENABLED
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the group. \n\n\
          \ You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the communication
          status.
        explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters the resulting set of ActiveGates by the enabled modules.
        explode: true
        in: query
        name: enabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates by the disabled modules.
        explode: true
        in: query
        name: disabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates to those which are running
          in container (`true`) or not (`false`).
        explode: true
        in: query
        name: containerized
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Lists all available ActiveGates
      tags:
      - ActiveGates
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /activeGates/{agId}:
    get:
      operationId: getOneActiveGateById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGate'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the details of the specified ActiveGate
      tags:
      - ActiveGates
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /deployment/installer/gateway/versions/{osType}:
    get:
      operationId: getActiveGateInstallerAvailableVersions
      parameters:
      - description: The operating system of the installer.
        explode: false
        in: path
        name: osType
        required: true
        schema:
          enum:
          - windows
          - unix
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveGateInstallerVersions'
          description: Success. The payload contains the available versions.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See the response body for details.
      summary: Lists all available versions of ActiveGate installer
      tags:
      - Deployment
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /networkZones:
    get:
      operationId: getAllNetworkZones
      parameters: []
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneList'
          description: Success.
      summary: Lists all existing network zones | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /networkZones/{id}:
    delete:
      description: "You can only delete an empty network zone (a zone that no ActiveGate\
        \ or OneAgent is using). \n\n If the network zone is used as an alternative\
        \ zone for any OneAgent, it will be automatically removed from the list of\
        \ possible alternatives."
      operationId: deleteNetworkZone
      parameters:
      - description: The ID of the network zone to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See error message in the response body for details.
      summary: Deletes the specified network zone | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    get:
      operationId: getSingleNetworkZone
      parameters:
      - description: The ID of the required network zone.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success.
      summary: Gets parameters of the specified network zone | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      description: "If the network zone with the specified ID does not exist, a new\
        \ network zone is created. \n\n The ID is not case sensitive. Dynatrace stores\
        \ the ID in lowercase."
      operationId: createOrUpdateNetworkZone
      parameters:
      - description: "The ID of the network zone to be updated. \n\n If you set the\
          \ ID in the body as well, it must match this ID. \n\n The ID is not case\
          \ sensitive. Dynatrace stores the ID in lowercase."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        description: The JSON body of the request. Contains parameters of the network
          zone.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new network zone has been created. The response
            body contains the ID of the new network zone.
        "204":
          description: Success. The network zone has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /tokens/{id}:
    delete:
      operationId: deleteToken
      parameters:
      - description: |-
          The ID of the token to be deleted. Can either be the public identifier or the secret.

           You can't delete the token you're using for authentication of the request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. You can't delete the token you're using for authentication
            of the request.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested token has not been found.
      summary: Deletes the specified token
      tags:
      - Tokens
      x-token-scopes:
      - '`ClusterTokenManagement` (Cluster token management)'
    get:
      description: The token itself is **not** exposed.
      operationId: getTokenMetadata
      parameters:
      - description: The ID of the required token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TokenMetadata'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested token has not been found.
      summary: Lists token metadata by token ID
      tags:
      - Tokens
      x-token-scopes:
      - '`ClusterTokenManagement` (Cluster token management)'
    put:
      operationId: updateToken
      parameters:
      - description: "The ID of the token to be updated. \n\n You can't update the\
          \ token you're using for authentication of the request."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateToken'
        description: The JSON body of the request. Contains updated parameters of
          the token.
        required: true
      responses:
        "204":
          description: Success. The token has been updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. You can't update the token you're using for authentication
            of the request.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested token has not been found.
      summary: Updates the specified token
      tags:
      - Tokens
      x-token-scopes:
      - '`ClusterTokenManagement` (Cluster token management)'
  /tokens:
    get:
      description: "You can narrow down the output by adding parameters. The token\
        \ has to match *all* the specified parameters. \n\n You can also specify the\
        \ limit of returned tokens.\n\n **This list may contain tokens which were\
        \ created automatically** (e.g. InstallerDownload, Mobile, ...) and are not\
        \ visible on the `Settings` page. Deleting those might have unintended side-effects\
        \ as they might still be in use."
      operationId: listTokens
      parameters:
      - description: "Limits the maximum number of returned tokens. \n\n If not set\
          \ the value of `1000` is used. \n\n Maximum value is 1000000."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 1000000
          minimum: 0
          type: integer
        style: form
      - description: Filters the resulting set of tokens by user, who owns the token.
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of tokens by scopes assigned to the\
          \ token. \n\n You can specify several permissions in the following format:\
          \ `permissions=scope1&permissions=scope2`. The token must have *all* the\
          \ specified scopes."
        explode: true
        in: query
        name: permissions
        required: false
        schema:
          items:
            enum:
            - ClusterTokenManagement
            - ControlManagement
            - DiagnosticExport
            - EnvironmentTokenManagement
            - ExternalSyntheticIntegration
            - Nodekeeper
            - ReadSyntheticData
            - ServiceProviderAPI
            - UnattendedInstall
            - apiTokens.read
            - apiTokens.write
            - settings.read
            - settings.write
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Last used after this timestamp (UTC milliseconds).
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Last used before this timestamp (UTC milliseconds).
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StubList'
          description: Success
      summary: Lists available tokens in your environment
      tags:
      - Tokens
      x-token-scopes:
      - '`ClusterTokenManagement` (Cluster token management)'
    post:
      description: The newly created token will be owned by the same user who owns
        the token used for authentication of the call.
      operationId: createToken
      parameters: []
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateToken'
        description: The JSON body of the request. Contains parameters of the new
          token.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Token'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Token'
          description: Success. The token has been created. The response body contains
            the token itself.
          headers:
            Location:
              description: Token Id
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. Response body provides details.
      summary: Creates a new token
      tags:
      - Tokens
      x-token-scopes:
      - '`ClusterTokenManagement` (Cluster token management)'
  /tokens/lookup:
    post:
      operationId: getTokenMetadataBySecret
      parameters: []
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Token'
        description: The JSON body of the request. Contains the required token.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TokenMetadata'
          description: Success
      summary: Lists token metadata by token itself
      tags:
      - Tokens
      x-token-scopes:
      - Any Api-Token scope
  /settings/objects:
    get:
      operationId: getSettingsObjects
      parameters:
      - description: "A list of comma-separated schema IDs to which the requested\
          \ objects belong. \n\nTo load the first page, when the **nextPageKey** is\
          \ not set, this parameter is required. "
        explode: true
        in: query
        name: schemaIds
        required: false
        schema:
          type: string
        style: form
      - description: "A list of comma-separated scopes, that the requested objects\
          \ target. \n\nThe selection only matches objects directly targeting the\
          \ specified scopes. For example, `environment` will not match objects that\
          \ target a host within environment. \n\nTo load the first page, when the\
          \ **nextPageKey** is not set, this parameter is required. "
        explode: true
        in: query
        name: scopes
        required: false
        schema:
          type: string
        style: form
      - description: "A list of fields to be included to the response. The provided\
          \ set of fields replaces the default set. \n\n Specify the required top-level\
          \ fields, separated by commas (for example, `objectId,value`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: objectId,value
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of settings objects in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ObjectsList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema or scope is not found.
      summary: Lists available settings objects | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
    post:
      description: You can upload several objects at once. In that case each object
        returns its own response code. Check the response body for details.
      operationId: postSettingsObjects
      parameters:
      - description: If `true`, the request runs only validation of the submitted
          settings objects, without saving them.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/SettingsObjectCreate'
              type: array
        description: The JSON body of the request. Contains the settings objects.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Success
        "207":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/SettingsObjectResponse'
                  - $ref: '#/components/schemas/SettingsObjectErrorResponse'
                  type: string
                type: array
          description: 'Multi-status: different objects in the payload resulted in
            different statuses.'
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectErrorResponse'
                type: array
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectErrorResponse'
                type: array
          description: Failed. Conflicting resource.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectErrorResponse'
                type: array
          description: Failed. Schema validation failed.
      summary: Creates a new settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
  /settings/objects/{objectId}:
    delete:
      operationId: deleteSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: "The update token of the object. You can use it to detect simultaneous\
          \ modifications by different users. \n\nIt is generated upon retrieval (GET\
          \ requests). If set on update (PUT request) or deletion, the update/deletion\
          \ will be allowed only if there wasn't any change between the retrieval\
          \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
          \ the current value or deletes it without any checks."
        explode: true
        in: query
        name: updateToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: Failed. Conflicting resource.
      summary: Deletes the specified settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
    get:
      operationId: getSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObject'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: No object available for the given objectId
      summary: Gets the specified settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
    put:
      operationId: putSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SettingsObjectUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the settings object.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: Failed. Conflicting resource.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectErrorResponse'
          description: Failed. Schema validation failed.
      summary: Updates an existing settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
  /settings/schemas:
    get:
      operationId: getAvailableSchemaDefinitions
      parameters: []
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaList'
          description: Success
      summary: Lists available settings schemas | maturity=EARLY_ADOPTER
      tags:
      - Settings - Schemas
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
  /settings/schemas/{schemaId}:
    get:
      operationId: getSchemaDefinition
      parameters:
      - description: The ID of the required schema.
        explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      - description: "The version of the required schema. \n\n If not set, the most\
          \ recent version is returned."
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaDefinitionRestDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema doesn't exist.
      summary: Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER
      tags:
      - Settings - Schemas
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
  /synthetic/locations:
    get:
      operationId: getLocations
      parameters: []
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocations'
          description: Success.
      summary: Lists all cluster private synthetic locations
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    post:
      operationId: addLocation
      parameters: []
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PrivateSyntheticLocation'
        description: The JSON body of the request. Contains parameters of the new
          private synthetic cluster location
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocationIdsDto'
          description: Success.
      summary: Creates a new private synthetic cluster location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /synthetic/locations/{locationId}:
    delete:
      operationId: removeLocation
      parameters:
      - description: The Dynatrace entity ID of the private synthetic cluster location
          to be deleted.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json; charset=utf-8: {}
          description: default response
      summary: Deletes the specified private synthetic cluster location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    get:
      operationId: getLocation
      parameters:
      - description: The Dynatrace entity ID of the required cluster location.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocation'
          description: Success. The response contains parameters of the synthetic
            cluster location.
      summary: Gets properties of the specified cluster location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
    put:
      operationId: updateLocation
      parameters:
      - description: The Dynatrace entity ID of the private synthetic cluster location
          to be updated.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PrivateSyntheticLocation'
        description: The JSON body of the request. Contains updated parameters of
          the private synthetic cluster location.
      responses:
        default:
          content:
            application/json; charset=utf-8: {}
          description: default response
      summary: Updates the specified private synthetic cluster location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /synthetic/nodes:
    get:
      operationId: getNodes
      parameters: []
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Nodes'
          description: Success.
      summary: Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER
      tags:
      - Synthetic - Locations and nodes
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
  /synthetic/nodes/{nodeId}:
    get:
      operationId: getNode
      parameters:
      - description: The ID of the required synthetic cluster node.
        explode: false
        in: path
        name: nodeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Node'
          description: Success.
      summary: Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER
      tags:
      - Synthetic - Locations and nodes
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`ServiceProviderAPI` (Service Provider API)'
components:
  schemas:
    AgentUsageDto:
      example:
        agentId: 7
        agentUsageRecords:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        agentTypeId: 9
        networkTraffic: 2
      properties:
        networkTraffic:
          format: int64
          type: integer
        agentId:
          format: int32
          type: integer
        agentTypeId:
          format: int32
          type: integer
        agentUsageRecords:
          items:
            $ref: '#/components/schemas/AgentUsageRecordDto'
          type: array
      type: object
    AgentUsageRecordDto:
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
      type: object
    BillingRequestDto:
      example:
        clusterUuid: clusterUuid
        timeFrameStart: 2000-01-23T04:56:07.000+00:00
        timeFrameEnd: 2000-01-23T04:56:07.000+00:00
        environmentBillingEntries:
        - environmentUuid: environmentUuid
          newProblems: 5
          highAvailabilityCluster: true
          sessionReplays: 6
          logUploadVolumeBytes: 9
          totalRUMUserPropertiesUsed: 1
          syntheticBillingUsage:
          - privateExecutions: 9
            testId: 4
            publicExecutions: 5
            monitorTypeId: 1
          - privateExecutions: 9
            testId: 4
            publicExecutions: 5
            monitorTypeId: 1
          logStorageUsageBytes: 8
          davisDataUnits:
          - total: 6.683562403749608
            pool: pool
          - total: 6.683562403749608
            pool: pool
          trial: true
          customMetrics:
          - total: 9
            source: source
          - total: 9
            source: source
          hostUsages:
          - hostName: hostName
            agentUsages:
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            osiId: 5
            passMemoryLimit: 3
            infrastructureOnly: true
            hostCategory: hostCategory
            paas: true
            vendorTypeId: 2
            premiumLogAnalytics: true
            hasContainers: true
            hostMemoryBytes: 4
          - hostName: hostName
            agentUsages:
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            osiId: 5
            passMemoryLimit: 3
            infrastructureOnly: true
            hostCategory: hostCategory
            paas: true
            vendorTypeId: 2
            premiumLogAnalytics: true
            hasContainers: true
            hostMemoryBytes: 4
          syntheticUsages:
          - monitorDefinitionId: monitorDefinitionId
            performedSyntheticActions: 7
            monitorDescription: monitorDescription
            successCount: 1
            monitorTypeId: 1
            syntheticActionCount: 6
            failureCount: 1
          - monitorDefinitionId: monitorDefinitionId
            performedSyntheticActions: 7
            monitorDescription: monitorDescription
            successCount: 1
            monitorTypeId: 1
            syntheticActionCount: 6
            failureCount: 1
          visits: 0
          internalUse: true
          downloads:
          - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
            type: type
            version: version
            downloadCount: 7
          - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
            type: type
            version: version
            downloadCount: 7
          mobileSessionReplays: 3
          mobileSessions: 6
        - environmentUuid: environmentUuid
          newProblems: 5
          highAvailabilityCluster: true
          sessionReplays: 6
          logUploadVolumeBytes: 9
          totalRUMUserPropertiesUsed: 1
          syntheticBillingUsage:
          - privateExecutions: 9
            testId: 4
            publicExecutions: 5
            monitorTypeId: 1
          - privateExecutions: 9
            testId: 4
            publicExecutions: 5
            monitorTypeId: 1
          logStorageUsageBytes: 8
          davisDataUnits:
          - total: 6.683562403749608
            pool: pool
          - total: 6.683562403749608
            pool: pool
          trial: true
          customMetrics:
          - total: 9
            source: source
          - total: 9
            source: source
          hostUsages:
          - hostName: hostName
            agentUsages:
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            osiId: 5
            passMemoryLimit: 3
            infrastructureOnly: true
            hostCategory: hostCategory
            paas: true
            vendorTypeId: 2
            premiumLogAnalytics: true
            hasContainers: true
            hostMemoryBytes: 4
          - hostName: hostName
            agentUsages:
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            - agentId: 7
              agentUsageRecords:
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              - startTime: 2000-01-23T04:56:07.000+00:00
                endTime: 2000-01-23T04:56:07.000+00:00
              agentTypeId: 9
              networkTraffic: 2
            osiId: 5
            passMemoryLimit: 3
            infrastructureOnly: true
            hostCategory: hostCategory
            paas: true
            vendorTypeId: 2
            premiumLogAnalytics: true
            hasContainers: true
            hostMemoryBytes: 4
          syntheticUsages:
          - monitorDefinitionId: monitorDefinitionId
            performedSyntheticActions: 7
            monitorDescription: monitorDescription
            successCount: 1
            monitorTypeId: 1
            syntheticActionCount: 6
            failureCount: 1
          - monitorDefinitionId: monitorDefinitionId
            performedSyntheticActions: 7
            monitorDescription: monitorDescription
            successCount: 1
            monitorTypeId: 1
            syntheticActionCount: 6
            failureCount: 1
          visits: 0
          internalUse: true
          downloads:
          - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
            type: type
            version: version
            downloadCount: 7
          - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
            type: type
            version: version
            downloadCount: 7
          mobileSessionReplays: 3
          mobileSessions: 6
      properties:
        clusterUuid:
          type: string
        timeFrameStart:
          format: date-time
          type: string
        timeFrameEnd:
          format: date-time
          type: string
        environmentBillingEntries:
          items:
            $ref: '#/components/schemas/EnvironmentUsageDto'
          type: array
      type: object
    CustomMetricDto:
      example:
        total: 9
        source: source
      properties:
        source:
          type: string
        total:
          format: int64
          type: integer
      type: object
    DavisDataUnitsUsageDto:
      example:
        total: 6.683562403749608
        pool: pool
      properties:
        pool:
          type: string
        total:
          type: number
      type: object
    DownloadsDto:
      example:
        firstDownloadTime: 2000-01-23T04:56:07.000+00:00
        type: type
        version: version
        downloadCount: 7
      properties:
        type:
          type: string
        downloadCount:
          format: int32
          type: integer
        version:
          type: string
        firstDownloadTime:
          format: date-time
          type: string
      type: object
    EnvironmentUsageDto:
      example:
        environmentUuid: environmentUuid
        newProblems: 5
        highAvailabilityCluster: true
        sessionReplays: 6
        logUploadVolumeBytes: 9
        totalRUMUserPropertiesUsed: 1
        syntheticBillingUsage:
        - privateExecutions: 9
          testId: 4
          publicExecutions: 5
          monitorTypeId: 1
        - privateExecutions: 9
          testId: 4
          publicExecutions: 5
          monitorTypeId: 1
        logStorageUsageBytes: 8
        davisDataUnits:
        - total: 6.683562403749608
          pool: pool
        - total: 6.683562403749608
          pool: pool
        trial: true
        customMetrics:
        - total: 9
          source: source
        - total: 9
          source: source
        hostUsages:
        - hostName: hostName
          agentUsages:
          - agentId: 7
            agentUsageRecords:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            agentTypeId: 9
            networkTraffic: 2
          - agentId: 7
            agentUsageRecords:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            agentTypeId: 9
            networkTraffic: 2
          osiId: 5
          passMemoryLimit: 3
          infrastructureOnly: true
          hostCategory: hostCategory
          paas: true
          vendorTypeId: 2
          premiumLogAnalytics: true
          hasContainers: true
          hostMemoryBytes: 4
        - hostName: hostName
          agentUsages:
          - agentId: 7
            agentUsageRecords:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            agentTypeId: 9
            networkTraffic: 2
          - agentId: 7
            agentUsageRecords:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            agentTypeId: 9
            networkTraffic: 2
          osiId: 5
          passMemoryLimit: 3
          infrastructureOnly: true
          hostCategory: hostCategory
          paas: true
          vendorTypeId: 2
          premiumLogAnalytics: true
          hasContainers: true
          hostMemoryBytes: 4
        syntheticUsages:
        - monitorDefinitionId: monitorDefinitionId
          performedSyntheticActions: 7
          monitorDescription: monitorDescription
          successCount: 1
          monitorTypeId: 1
          syntheticActionCount: 6
          failureCount: 1
        - monitorDefinitionId: monitorDefinitionId
          performedSyntheticActions: 7
          monitorDescription: monitorDescription
          successCount: 1
          monitorTypeId: 1
          syntheticActionCount: 6
          failureCount: 1
        visits: 0
        internalUse: true
        downloads:
        - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
          type: type
          version: version
          downloadCount: 7
        - firstDownloadTime: 2000-01-23T04:56:07.000+00:00
          type: type
          version: version
          downloadCount: 7
        mobileSessionReplays: 3
        mobileSessions: 6
      properties:
        environmentUuid:
          type: string
        visits:
          format: int64
          type: integer
        mobileSessions:
          format: int64
          type: integer
        totalRUMUserPropertiesUsed:
          format: int64
          type: integer
        newProblems:
          format: int64
          type: integer
        hostUsages:
          items:
            $ref: '#/components/schemas/HostUsageDto'
          type: array
        downloads:
          items:
            $ref: '#/components/schemas/DownloadsDto'
          type: array
        syntheticUsages:
          items:
            $ref: '#/components/schemas/SyntheticUsageDto'
          type: array
        syntheticBillingUsage:
          items:
            $ref: '#/components/schemas/SyntheticBillingUsageDto'
          type: array
        customMetrics:
          items:
            $ref: '#/components/schemas/CustomMetricDto'
          type: array
        davisDataUnits:
          items:
            $ref: '#/components/schemas/DavisDataUnitsUsageDto'
          type: array
        trial:
          type: boolean
        internalUse:
          type: boolean
        highAvailabilityCluster:
          type: boolean
        logStorageUsageBytes:
          format: int64
          type: integer
        logUploadVolumeBytes:
          format: int64
          type: integer
        sessionReplays:
          format: int64
          type: integer
        mobileSessionReplays:
          format: int64
          type: integer
      type: object
    HostUsageDto:
      example:
        hostName: hostName
        agentUsages:
        - agentId: 7
          agentUsageRecords:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          agentTypeId: 9
          networkTraffic: 2
        - agentId: 7
          agentUsageRecords:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          agentTypeId: 9
          networkTraffic: 2
        osiId: 5
        passMemoryLimit: 3
        infrastructureOnly: true
        hostCategory: hostCategory
        paas: true
        vendorTypeId: 2
        premiumLogAnalytics: true
        hasContainers: true
        hostMemoryBytes: 4
      properties:
        osiId:
          format: int64
          type: integer
        hostName:
          type: string
        hostCategory:
          type: string
        agentUsages:
          items:
            $ref: '#/components/schemas/AgentUsageDto'
          type: array
        infrastructureOnly:
          type: boolean
        paas:
          type: boolean
        passMemoryLimit:
          format: int64
          type: integer
        vendorTypeId:
          format: int32
          type: integer
        hostMemoryBytes:
          format: int64
          type: integer
        premiumLogAnalytics:
          type: boolean
        hasContainers:
          type: boolean
      type: object
    SyntheticBillingUsageDto:
      example:
        privateExecutions: 9
        testId: 4
        publicExecutions: 5
        monitorTypeId: 1
      properties:
        monitorTypeId:
          format: int32
          type: integer
        testId:
          format: int64
          type: integer
        publicExecutions:
          format: int64
          type: integer
        privateExecutions:
          format: int64
          type: integer
      type: object
    SyntheticUsageDto:
      example:
        monitorDefinitionId: monitorDefinitionId
        performedSyntheticActions: 7
        monitorDescription: monitorDescription
        successCount: 1
        monitorTypeId: 1
        syntheticActionCount: 6
        failureCount: 1
      properties:
        monitorDefinitionId:
          type: string
        monitorDescription:
          type: string
        monitorTypeId:
          format: int32
          type: integer
        successCount:
          format: int32
          type: integer
        failureCount:
          format: int32
          type: integer
        syntheticActionCount:
          format: int32
          type: integer
        performedSyntheticActions:
          format: int32
          type: integer
      type: object
    EnvironmentShortRepresentation:
      description: The short representation of an environment.
      example:
        name: name
        description: description
        id: id
        tokenManagementToken: tokenManagementToken
      properties:
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
        tokenManagementToken:
          description: A token with the 'Token management' permission. Can be used
            to within the newly created environment to create other tokens for configuring
            this environment. This value is only set if an environment was created
            with the query parameter 'createToken=true'.
          readOnly: true
          type: string
      required:
      - id
      type: object
    CustomMetricsQuota:
      description: Custom metrics consumption and quota information on environment
        level. Not set (and not editable) if Custom metrics is not enabled. Not set
        (and not editable) if Davis data units is enabled. If skipped when editing
        via PUT method then already set quota will remain.
      properties:
        currentUsage:
          description: Current environment usage.
          format: double
          readOnly: true
          type: number
        maxLimit:
          description: Concurrent environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    DavisDataUnitsQuota:
      description: Davis data units consumption and quota information on environment
        level. Not set (and not editable) if Davis data units is not enabled. If skipped
        when editing via PUT method then already set quotas will remain.
      properties:
        consumedThisMonth:
          description: Monthly environment consumption. Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedThisYear:
          description: Yearly environment consumption. Resets each year on license
            creation date anniversary.
          format: double
          readOnly: true
          type: number
        monthlyLimit:
          description: Monthly environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        annualLimit:
          description: Annual environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    DemUnitsQuota:
      description: DEM units consumption and quota information on environment level.
        Not set (and not editable) if DEM units is not enabled. If skipped when editing
        via PUT method then already set quotas will remain.
      properties:
        consumedThisMonth:
          description: Monthly environment consumption. Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedThisYear:
          description: Yearly environment consumption. Resets each year on license
            creation date anniversary.
          format: double
          readOnly: true
          type: number
        monthlyLimit:
          description: Monthly environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        annualLimit:
          description: Annual environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    Environment:
      description: Basic configuration for an environment.
      example:
        name: example environment
        state: ENABLED
        tags:
        - tag1
        - tag2
        trial: false
      properties:
        name:
          description: The display name of the environment.
          maxLength: 100
          minLength: 1
          type: string
        id:
          description: The ID of the environment.
          type: string
        trial:
          description: Specifies whether the environment is a trial environment or
            a non-trial environment. Creating a trial environment is only possible
            if your license allows that. The default value is false (non-trial).
          type: boolean
        state:
          description: Indicates whether the environment is enabled or disabled. The
            default value is ENABLED.
          enum:
          - DISABLED
          - ENABLED
          type: string
        tags:
          description: A set of tags that are assigned to this environment. Every
            tag can have a maximum length of 100 characters.
          items:
            type: string
          maxItems: 1024
          minItems: 0
          type: array
          uniqueItems: true
        creationDate:
          description: The creation date of the environment in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
          readOnly: true
          type: string
        quotas:
          $ref: '#/components/schemas/EnvironmentQuotas'
        storage:
          $ref: '#/components/schemas/EnvironmentStorage'
      required:
      - name
      type: object
    EnvironmentQuotas:
      description: Environment level consumption and quotas information. Only returned
        if includeConsumptionInfo or includeUncachedConsumptionInfo param is true.
        If skipped when editing via PUT method then already set quotas will remain.
      properties:
        hostUnits:
          $ref: '#/components/schemas/HostUnitQuota'
        demUnits:
          $ref: '#/components/schemas/DemUnitsQuota'
        userSessions:
          $ref: '#/components/schemas/UserSessionsQuota'
        sessionProperties:
          $ref: '#/components/schemas/SessionPropertiesQuota'
        syntheticMonitors:
          $ref: '#/components/schemas/SyntheticQuota'
        customMetrics:
          $ref: '#/components/schemas/CustomMetricsQuota'
        davisDataUnits:
          $ref: '#/components/schemas/DavisDataUnitsQuota'
        logMonitoring:
          $ref: '#/components/schemas/LogMonitoringQuota'
      type: object
    EnvironmentStorage:
      description: Environment level storage usage and limit information. Not returned
        if includeStorageInfo param is not true. If skipped when editing via PUT method
        then already set limits will remain.
      properties:
        transactionStorage:
          $ref: '#/components/schemas/TransactionStorage'
        sessionReplayStorage:
          $ref: '#/components/schemas/SessionReplayStorage'
        symbolFilesFromMobileApps:
          $ref: '#/components/schemas/SymbolFilesFromMobileApps'
        logMonitoringStorage:
          $ref: '#/components/schemas/LogMonitoringStorage'
        serviceRequestLevelRetention:
          $ref: '#/components/schemas/ServiceRequestLevelRetention'
        serviceCodeLevelRetention:
          $ref: '#/components/schemas/ServiceCodeLevelRetention'
        realUserMonitoringRetention:
          $ref: '#/components/schemas/RealUserMonitoringRetention'
        syntheticMonitoringRetention:
          $ref: '#/components/schemas/SyntheticMonitoringRetention'
        sessionReplayRetention:
          $ref: '#/components/schemas/SessionReplayRetention'
        logMonitoringRetention:
          $ref: '#/components/schemas/LogMonitoringRetention'
        userActionsPerMinute:
          $ref: '#/components/schemas/UserActionsPerMinute'
        transactionTrafficQuota:
          $ref: '#/components/schemas/TransactionTrafficQuota'
      type: object
    HostUnitQuota:
      description: Host units consumption and quota information on environment level.
        If skipped when editing via PUT method then already set quota will remain.
      properties:
        currentUsage:
          description: Current environment usage.
          format: double
          readOnly: true
          type: number
        maxLimit:
          description: Concurrent environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    LogMonitoringQuota:
      description: Log monitoring consumption and quota information on environment
        level. Not set (and not editable) if Log monitoring is not enabled. Not set
        (and not editable) if Log monitoring is migrated to Davis data on license
        level. If skipped when editing via PUT method then already set quotas will
        remain.
      properties:
        consumedThisMonth:
          description: Monthly environment consumption. Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedThisYear:
          description: Yearly environment consumption. Resets each year on license
            creation date anniversary.
          format: double
          readOnly: true
          type: number
        monthlyLimit:
          description: Monthly environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        annualLimit:
          description: Annual environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    LogMonitoringRetention:
      description: Log monitoring retention settings on environment level. Not editable
        when Log monitoring is not allowed by license or not configured on cluster
        level. Can be set to any value from 5 to 90 days. If skipped when editing
        via PUT method then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    LogMonitoringStorage:
      description: Log monitoring storage usage and limit information on environment
        level. Not editable when Log monitoring is not allowed by license or not configured
        on cluster level. If skipped when editing via PUT method then already set
        limit will remain.
      properties:
        currentlyUsed:
          description: Currently used storage [bytes]
          format: int64
          readOnly: true
          type: integer
        maxLimit:
          description: Maximum storage limit [bytes]
          format: int64
          type: integer
      type: object
    RealUserMonitoringRetention:
      description: Real user monitoring retention settings on environment level. Can
        be set to any value from 1 to 35 days. If skipped when editing via PUT method
        then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    ServiceCodeLevelRetention:
      description: Service code level retention settings on environment level. Service
        code level retention time can't be greater than service request level retention
        time and both can't exceed one year.If skipped when editing via PUT method
        then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    ServiceRequestLevelRetention:
      description: Service request level retention settings on environment level.
        Service code level retention time can't be greater than service request level
        retention time and both can't exceed one year.If skipped when editing via
        PUT method then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    SessionPropertiesQuota:
      description: User session properties consumption information on environment
        level.
      properties:
        consumedThisMonth:
          description: Monthly environment consumption. Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedThisYear:
          description: Yearly environment consumption. Resets each year on license
            creation date anniversary.
          format: double
          readOnly: true
          type: number
      readOnly: true
      type: object
    SessionReplayRetention:
      description: Session replay retention settings on environment level. Can be
        set to any value from 1 to 35 days. If skipped when editing via PUT method
        then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    SessionReplayStorage:
      description: Session replay storage usage and limit information on environment
        level. If skipped when editing via PUT method then already set limit will
        remain.
      properties:
        retentionReductionPercentage:
          description: Percentage of truncation for new data.
          format: byte
          readOnly: true
          type: string
        retentionReductionReason:
          description: Reason of truncation.
          readOnly: true
          type: string
        currentlyUsed:
          description: Currently used storage [bytes]
          format: int64
          readOnly: true
          type: integer
        maxLimit:
          description: Maximum storage limit [bytes]
          format: int64
          type: integer
      type: object
    SymbolFilesFromMobileApps:
      description: Symbol files from mobile apps storage usage and limit information
        on environment level. If skipped when editing via PUT method then already
        set limit will remain.
      properties:
        currentlyUsed:
          description: Currently used storage [bytes]
          format: int64
          readOnly: true
          type: integer
        maxLimit:
          description: Maximum storage limit [bytes]
          format: int64
          type: integer
      type: object
    SyntheticMonitoringRetention:
      description: Synthetic monitoring retention settings on environment level. Can
        be set to any value from 1 to 35 days. If skipped when editing via PUT method
        then already set limit will remain.
      properties:
        maxLimitInDays:
          description: Maximum retention limit [days]
          format: int64
          type: integer
        currentlyUsedInMillis:
          description: Current data age [milliseconds]
          format: int64
          readOnly: true
          type: integer
        currentlyUsedInDays:
          description: Current data age [days]
          format: int64
          readOnly: true
          type: integer
      type: object
    SyntheticQuota:
      description: Synthetic monitors consumption and quota information on environment
        level. Not set (and not editable) if neither Synthetic nor DEM units is enabled.
        If skipped when editing via PUT method then already set quotas will remain.
      properties:
        consumedThisMonth:
          description: Monthly environment consumption. Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedThisYear:
          description: Yearly environment consumption. Resets each year on license
            creation date anniversary.
          format: double
          readOnly: true
          type: number
        monthlyLimit:
          description: Monthly environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        annualLimit:
          description: Annual environment quota. Not set if unlimited. When updating
            via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
      type: object
    TransactionStorage:
      description: Transaction storage usage and limit information on environment
        level. If skipped when editing via PUT method then already set limit will
        remain.
      properties:
        retentionReductionPercentage:
          description: Percentage of truncation for new data.
          format: byte
          readOnly: true
          type: string
        retentionReductionReason:
          description: Reason of truncation.
          readOnly: true
          type: string
        currentlyUsed:
          description: Currently used storage [bytes]
          format: int64
          readOnly: true
          type: integer
        maxLimit:
          description: Maximum storage limit [bytes]
          format: int64
          type: integer
      type: object
    TransactionTrafficQuota:
      description: Maximum number of newly monitored entry point PurePaths captured
        per process/minute on environment level. Can be set to any value from 100
        to 100000. If skipped when editing via PUT method then already set limit will
        remain.
      properties:
        maxLimit:
          description: Maximum traffic [units per minute]
          format: int32
          type: integer
      type: object
    UserActionsPerMinute:
      description: Maximum number of user actions generated per minute on environment
        level. Can be set to any value from 1 to 2147483646 or left unlimited. If
        skipped when editing via PUT method then already set limit will remain.
      properties:
        maxLimit:
          description: Maximum traffic [units per minute]
          format: int32
          type: integer
      type: object
    UserSessionsQuota:
      description: User sessions consumption and quota information on environment
        level. If skipped when editing via PUT method then already set quotas will
        remain.
      properties:
        consumedMobileSessionsThisMonth:
          description: Monthly Mobile user sessions environment consumption. Resets
            each calendar month.
          format: double
          readOnly: true
          type: number
        totalConsumedThisYear:
          description: Yearly total User sessions environment consumption. Resets
            each year on license creation date anniversary.
          format: double
          readOnly: true
          type: number
        consumedUserSessionsWithWebSessionReplayThisYear:
          description: Yearly Web user sessions with replay environment consumption.
            Resets each year on license creation date anniversary.
          format: double
          readOnly: true
          type: number
        totalMonthlyLimit:
          description: Monthly total User sessions environment quota. Not set if unlimited.
            When updating via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        totalAnnualLimit:
          description: Annual total User sessions environment quota. Not set if unlimited.
            When updating via PUT method, skipping this field will set quota unlimited.
          format: int64
          type: integer
        totalConsumedThisMonth:
          description: Monthly total User sessions environment consumption. Resets
            each calendar month.
          format: double
          readOnly: true
          type: number
        consumedUserSessionsWithWebSessionReplayThisMonth:
          description: Monthly Web user sessions with replay environment consumption.
            Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedMobileSessionsThisYear:
          description: Yearly Mobile user sessions environment consumption. Resets
            each year on license creation date anniversary.
          format: double
          readOnly: true
          type: number
        consumedUserSessionsWithMobileSessionReplayThisMonth:
          description: Monthly Mobile user sessions with replay environment consumption.
            Resets each calendar month.
          format: double
          readOnly: true
          type: number
        consumedUserSessionsWithMobileSessionReplayThisYear:
          description: Yearly Mobile user sessions with replay environment consumption.
            Resets each year on license creation date anniversary.
          format: double
          readOnly: true
          type: number
      type: object
    EnvironmentList:
      description: A list of environments.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        environments:
        - name: example environment
          state: ENABLED
          tags:
          - tag1
          - tag2
          trial: false
        - name: example environment
          state: ENABLED
          tags:
          - tag1
          - tag2
          trial: false
        pageSize: 6
        totalCount: 0
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        environments:
          description: The list of environments.
          items:
            $ref: '#/components/schemas/Environment'
          type: array
      required:
      - environments
      - totalCount
      type: object
    Token:
      example:
        token: abcdefjhij1234567890
      properties:
        token:
          description: Dynatrace API authentication token.
          type: string
      required:
      - token
      type: object
    ConstraintViolation:
      description: A list of constraint violations
      properties:
        parameterLocation:
          enum:
          - PATH
          - PAYLOAD_BODY
          - QUERY
          type: string
        location:
          type: string
        message:
          type: string
        path:
          type: string
      type: object
    Error:
      properties:
        constraintViolations:
          description: A list of constraint violations
          items:
            $ref: '#/components/schemas/ConstraintViolation'
          type: array
        code:
          description: The HTTP status code
          format: int32
          type: integer
        message:
          description: The error message
          type: string
      type: object
    ErrorEnvelope:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    CreateEnvironmentTokenManagementToken:
      example:
        name: Token Management
        expiresIn:
          value: 3600
          unit: SECONDS
      properties:
        name:
          description: The name of the token.
          type: string
        expiresIn:
          $ref: '#/components/schemas/Duration'
      required:
      - name
      type: object
    Duration:
      description: Defines a period of time.
      example:
        unit: DAYS
        value: 0
      properties:
        value:
          description: The amount of time.
          format: int64
          type: integer
        unit:
          description: "The unit of time. \n\n If not set, millisecond is used."
          enum:
          - DAYS
          - HOURS
          - MILLIS
          - MINUTES
          - SECONDS
          type: string
      required:
      - value
      type: object
    AccessRequestData:
      description: Access Request data
      example:
        reason: reason
        requestedDays: 0
        stateModifiedByUser: stateModifiedByUser
        role: devops-admin
        requestId: requestId
        createdTimestamp: 6
        expirationTimestamp: 1
        state: ACCEPTED
        userId: userId
      properties:
        requestId:
          description: Request id
          type: string
        userId:
          description: User id
          type: string
        reason:
          description: Request reason description
          type: string
        requestedDays:
          description: For how many days access is requested
          format: int32
          type: integer
        role:
          description: Requested role
          enum:
          - devops-admin
          - devops-user
          - devops-viewer
          type: string
        createdTimestamp:
          description: Access request created at (timestamp)
          format: int64
          type: integer
        expirationTimestamp:
          description: Access expires at (timestamp)
          format: int64
          type: integer
        state:
          description: Access request state
          enum:
          - ACCEPTED
          - EXPIRED
          - PENDING
          - REJECTED
          type: string
        stateModifiedByUser:
          description: Access request state was modified by user
          type: string
      type: object
    CreateAccessRequestDto:
      description: Access request data - format used to create a request
      example:
        reason: reason
        requestedDays: 0
        role: devops-admin
        userId: userId
      properties:
        userId:
          description: User id
          type: string
        reason:
          description: Request reason description
          type: string
        requestedDays:
          description: For how many days access is requested
          format: int32
          type: integer
        role:
          description: Requested role
          enum:
          - devops-admin
          - devops-user
          - devops-viewer
          type: string
      type: object
    AccessRequestStateData:
      description: Access request data - format used to change a state of a request
      example:
        state: ACCEPTED
      properties:
        state:
          description: Access request state
          enum:
          - ACCEPTED
          - EXPIRED
          - PENDING
          - REJECTED
          type: string
      type: object
    AutomaticLogoutConfiguration:
      description: Configuration of automatic logout.
      example:
        logoutInactiveUsersEnabled: true
        userInactivityTimeout: 900
      properties:
        logoutInactiveUsersEnabled:
          description: True if automatic logout is enabled
          type: boolean
        userInactivityTimeout:
          description: User inactivity timeout
          format: int32
          minimum: 1
          type: integer
      required:
      - logoutInactiveUsersEnabled
      - userInactivityTimeout
      type: object
    ConcurrentSessionPolicy:
      description: The configuration of the concurrent sessions policy. Set '0' to
        disable session limitation.
      example:
        userLimit: 0
        adminLimit: 6
      properties:
        userLimit:
          description: Session limit for regular users (0 = no limit)
          format: int32
          type: integer
        adminLimit:
          description: Session limit for admin users (0 = no limit)
          format: int32
          type: integer
      required:
      - adminLimit
      - userLimit
      type: object
    UserSessionsConfig:
      description: The configuration of user sessions - concurrent sessions policy
        and automatic logout.
      example:
        automaticLogoutDto:
          logoutInactiveUsersEnabled: true
          userInactivityTimeout: 900
        concurrentSessionPolicyDto:
          userLimit: 0
          adminLimit: 6
      properties:
        concurrentSessionPolicyDto:
          $ref: '#/components/schemas/ConcurrentSessionPolicy'
        automaticLogoutDto:
          $ref: '#/components/schemas/AutomaticLogoutConfiguration'
      required:
      - automaticLogoutDto
      - concurrentSessionPolicyDto
      type: object
    UserSession:
      description: Managed user session instance
      example:
        tenantUuid: tenantUuid
        creationTime: 6
        loginType: LOCAL
        ip: ip
        sessionId: sessionId
        userId: userId
        nodeId: 0
        device: device
        lastAccessedTimestamp: 1
      properties:
        userId:
          description: User id
          type: string
        nodeId:
          description: Node on which user session exists
          format: int32
          type: integer
        sessionId:
          description: User session id
          type: string
        creationTime:
          description: User session creation timestamp
          format: int64
          type: integer
        lastAccessedTimestamp:
          description: Timestamp when session was recently accessed
          format: int64
          type: integer
        tenantUuid:
          description: UUID of tenant to which user has logged in (or cluster UUID
            if user has logged in to CMC)
          type: string
        loginType:
          description: The way user has logged in
          enum:
          - LOCAL
          - LDAP
          - SSO_MANAGED
          - DEVOPSTOKEN
          type: string
        device:
          description: Device on which user has logged in
          type: string
        ip:
          description: IP from which has logged in
          type: string
      required:
      - creationTime
      - loginType
      - nodeId
      - sessionId
      - tenantUuid
      - userId
      type: object
    ActiveGateAutoUpdateConfig:
      description: Configuration of the ActiveGate auto-updates.
      example:
        effectiveSetting: ENABLED
        setting: INHERITED
      properties:
        setting:
          description: "The state of the ActiveGate auto-update: enabled, disabled,\
            \ or inherited. \n\nIf set to `INHERITED`, the setting is inherited from\
            \ the global configuration set on the environment or Managed cluster level."
          enum:
          - DISABLED
          - ENABLED
          - INHERITED
          example: INHERITED
          type: string
        effectiveSetting:
          description: "The actual state of the ActiveGate auto-update. \n\nApplicable\
            \ only if the **setting** parameter is set to `INHERITED`. In that case,\
            \ the value is taken from the parent setting. Otherwise, it's just a duplicate\
            \ of the **setting** value."
          enum:
          - ENABLED
          - DISABLED
          example: ENABLED
          readOnly: true
          type: string
      readOnly: true
      required:
      - setting
      type: object
    ActiveGateGlobalAutoUpdateConfig:
      description: Global configuration of ActiveGates auto-update.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        globalSetting: ENABLED
      properties:
        globalSetting:
          description: "The state of auto-updates for all ActiveGates connected to\
            \ the environment or Managed cluster. \n\nThis setting is inherited by\
            \ all ActiveGates that have the `INHERITED` setting."
          enum:
          - ENABLED
          - DISABLED
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
      required:
      - globalSetting
      type: object
    ConfigurationMetadata:
      description: Metadata useful for debugging
      example:
        currentConfigurationVersions:
        - 1.0.4
        - "1.23"
        configurationVersions:
        - 4
        - 2
        clusterVersion: 1.192.1
      properties:
        configurationVersions:
          description: A sorted list of the version numbers of the configuration.
          example:
          - 4
          - 2
          items:
            format: int64
            type: integer
          type: array
        currentConfigurationVersions:
          description: A sorted list of version numbers of the configuration.
          example:
          - 1.0.4
          - "1.23"
          items:
            type: string
          type: array
        clusterVersion:
          description: Dynatrace version.
          example: 1.192.1
          type: string
      readOnly: true
      type: object
    UpdateJobData:
      example:
        duration: 6
        jobId: jobId
        cancelable: true
        environments:
        - environments
        - environments
        jobState: FAILED
        startVersion: startVersion
        agType: CLUSTER
        error: error
        updateMethod: AUTOMATIC
        updateType: ACTIVE_GATE
        timestamp: 0
        targetVersion: targetVersion
      properties:
        environments:
          items:
            type: string
          type: array
        jobState:
          enum:
          - FAILED
          - IN_PROGRESS
          - PENDING
          - ROLLBACK
          - SCHEDULED
          - SKIPPED
          - SUCCEED
          type: string
        updateMethod:
          enum:
          - AUTOMATIC
          - MANUAL_INSTALLATION
          - ON_DEMAND
          type: string
        updateType:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        agType:
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          type: string
        startVersion:
          type: string
        cancelable:
          type: boolean
        jobId:
          type: string
        timestamp:
          format: int64
          type: integer
        duration:
          format: int64
          type: integer
        targetVersion:
          type: string
        error:
          type: string
      type: object
    UpdateJobListData:
      example:
        updateJobs:
        - duration: 6
          jobId: jobId
          cancelable: true
          environments:
          - environments
          - environments
          jobState: FAILED
          startVersion: startVersion
          agType: CLUSTER
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 0
          targetVersion: targetVersion
        - duration: 6
          jobId: jobId
          cancelable: true
          environments:
          - environments
          - environments
          jobState: FAILED
          startVersion: startVersion
          agType: CLUSTER
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 0
          targetVersion: targetVersion
        agId: agId
      properties:
        updateJobs:
          items:
            $ref: '#/components/schemas/UpdateJobData'
          type: array
        agId:
          type: string
      type: object
    UpdateJobsAll:
      description: A list of ActiveGates with update jobs.
      example:
        allUpdateJobs:
        - updateJobs:
          - duration: 6
            jobId: jobId
            cancelable: true
            environments:
            - environments
            - environments
            jobState: FAILED
            startVersion: startVersion
            agType: CLUSTER
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 0
            targetVersion: targetVersion
          - duration: 6
            jobId: jobId
            cancelable: true
            environments:
            - environments
            - environments
            jobState: FAILED
            startVersion: startVersion
            agType: CLUSTER
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 0
            targetVersion: targetVersion
          agId: agId
        - updateJobs:
          - duration: 6
            jobId: jobId
            cancelable: true
            environments:
            - environments
            - environments
            jobState: FAILED
            startVersion: startVersion
            agType: CLUSTER
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 0
            targetVersion: targetVersion
          - duration: 6
            jobId: jobId
            cancelable: true
            environments:
            - environments
            - environments
            jobState: FAILED
            startVersion: startVersion
            agType: CLUSTER
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 0
            targetVersion: targetVersion
          agId: agId
      properties:
        allUpdateJobs:
          description: A list of ActiveGates with update jobs.
          items:
            $ref: '#/components/schemas/UpdateJobListData'
          readOnly: true
          type: array
      type: object
    UpdateJob:
      description: Configuration of the ActiveGate update job.
      example:
        duration: 3608000
        jobId: -3524498778810258605
        cancelable: false
        environments:
        - environments
        - environments
        jobState: SUCCEED
        startVersion: 1.185.0.20200201-120000
        agType: ENVIRONMENT
        error: error
        updateMethod: AUTOMATIC
        updateType: ACTIVE_GATE
        targetVersion: 1.190.0.20200301-130000
        timestamp: 1582031917814
      properties:
        jobId:
          description: The ID of the update job.
          example: -3524498778810258605
          readOnly: true
          type: string
        jobState:
          description: The status of the update job.
          enum:
          - FAILED
          - IN_PROGRESS
          - PENDING
          - ROLLBACK
          - SCHEDULED
          - SKIPPED
          - SUCCEED
          example: SUCCEED
          readOnly: true
          type: string
        updateMethod:
          description: The method of updating the ActiveGate or its component.
          enum:
          - AUTOMATIC
          - MANUAL_INSTALLATION
          - ON_DEMAND
          example: AUTOMATIC
          readOnly: true
          type: string
        updateType:
          description: The component to be updated.
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          example: ACTIVE_GATE
          readOnly: true
          type: string
        cancelable:
          description: The job can (`true`) or can't (`false`) be cancelled at the
            moment.
          example: false
          readOnly: true
          type: boolean
        startVersion:
          description: The initial version of the ActiveGate.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
        targetVersion:
          description: "The target version of the update. \n\nSpecify the version\
            \ in the `<major>.<minor>.<revision>.<timestamp>` format. \n\nTo update\
            \ to the latest available version, use the `latest` value."
          example: 1.190.0.20200301-130000
          type: string
        timestamp:
          description: "The timestamp of the update job completion. \n\n The `null`\
            \ value means the job is still running."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        agType:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        error:
          description: The information about update error.
          readOnly: true
          type: string
        duration:
          description: The duration of the update, in milliseconds.
          example: 3608000
          format: int64
          readOnly: true
          type: integer
      required:
      - targetVersion
      type: object
    UpdateJobList:
      description: A list of update jobs of the ActiveGate.
      example:
        updateJobs:
        - duration: 6
          jobId: jobId
          cancelable: true
          environments:
          - environments
          - environments
          jobState: FAILED
          startVersion: startVersion
          agType: CLUSTER
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 0
          targetVersion: targetVersion
        - duration: 6
          jobId: jobId
          cancelable: true
          environments:
          - environments
          - environments
          jobState: FAILED
          startVersion: startVersion
          agType: CLUSTER
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 0
          targetVersion: targetVersion
        agId: 0x3efdd092
      properties:
        agId:
          description: The ID of the ActiveGate.
          example: 0x3efdd092
          readOnly: true
          type: string
        updateJobs:
          description: A list of update jobs of the ActiveGate.
          items:
            $ref: '#/components/schemas/UpdateJobData'
          readOnly: true
          type: array
      type: object
    ActiveGate:
      description: Parameters of the ActiveGate.
      example:
        environments:
        - environments
        - environments
        mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
        loadBalancerAddresses:
        - loadBalancerAddresses
        - loadBalancerAddresses
        type: ENVIRONMENT
        version: 1.185.0.20200201-120000
        networkZone: exampleNetworkZone
        modules:
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        hostname: exampleHostname
        autoUpdateSettings:
          effectiveSetting: ENABLED
          setting: INHERITED
        containerized: true
        osType: WINDOWS
        offlineSince: 1582031917814
        id: 0x3efdd091
        networkAddresses:
        - networkAddresses
        - networkAddresses
        autoUpdateStatus: OUTDATED
        group: default
      properties:
        id:
          description: The ID of the ActiveGate.
          example: 0x3efdd091
          readOnly: true
          type: string
        networkAddresses:
          description: A list of network addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        loadBalancerAddresses:
          description: A list of Load Balancer addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        osType:
          description: The OS type that the ActiveGate is running on.
          enum:
          - LINUX
          - WINDOWS
          example: WINDOWS
          readOnly: true
          type: string
        autoUpdateStatus:
          description: The current status of auto-updates of the ActiveGate.
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          example: OUTDATED
          readOnly: true
          type: string
        offlineSince:
          description: "The timestamp since when the ActiveGate is offline. \n\n The\
            \ `null` value means the ActiveGate is online."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        version:
          description: The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>`
            format.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
        type:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        hostname:
          description: The name of the host the ActiveGate is running on.
          example: exampleHostname
          readOnly: true
          type: string
        mainEnvironment:
          description: The ID of the main environment for a multi-environment ActiveGate.
          example: d1bf4a7e-666b-43af-9f45-718g98372e2f
          readOnly: true
          type: string
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        autoUpdateSettings:
          $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        networkZone:
          description: The network zone of the ActiveGate.
          example: exampleNetworkZone
          readOnly: true
          type: string
        group:
          description: The group of the ActiveGate.
          example: default
          readOnly: true
          type: string
        modules:
          description: A list of modules of the ActiveGate.
          items:
            $ref: '#/components/schemas/ActiveGateModule'
          readOnly: true
          type: array
        containerized:
          description: ActiveGate is deployed in container (`true`) or not (`false`).
          readOnly: true
          type: boolean
      type: object
    ActiveGateList:
      description: A list of ActiveGates.
      example:
        activeGates:
        - environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          version: 1.185.0.20200201-120000
          networkZone: exampleNetworkZone
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
        - environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          version: 1.185.0.20200201-120000
          networkZone: exampleNetworkZone
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
      properties:
        activeGates:
          description: A list of ActiveGates.
          items:
            $ref: '#/components/schemas/ActiveGate'
          readOnly: true
          type: array
      type: object
    ActiveGateModule:
      description: Information about ActiveGate module
      example:
        misconfigured: true
        attributes:
          key: attributes
        type: KUBERNETES
        version: version
        enabled: true
      properties:
        misconfigured:
          description: The module is misconfigured (`true`) or not (`false`).
          readOnly: true
          type: boolean
        version:
          description: The version of the ActiveGate module.
          readOnly: true
          type: string
        enabled:
          description: The module is enabled (`true`) or disabled (`false`).
          readOnly: true
          type: boolean
        type:
          description: The type of ActiveGate module.
          enum:
          - AWS
          - AZURE
          - BEACON_FORWARDER
          - CLOUD_FOUNDRY
          - DB_INSIGHT
          - EXTENSIONS_V1
          - EXTENSIONS_V2
          - KUBERNETES
          - LOGS
          - MEMORY_DUMPS
          - METRIC_API
          - ONE_AGENT_ROUTING
          - OTLP_INGEST
          - REST_API
          - SYNTHETIC
          - VMWARE
          - Z_OS
          example: KUBERNETES
          readOnly: true
          type: string
        attributes:
          additionalProperties:
            description: The attributes of the ActiveGate module.
            readOnly: true
            type: string
          description: The attributes of the ActiveGate module.
          readOnly: true
          type: object
      type: object
    ActiveGateInstallerVersions:
      description: A list of available versions of ActiveGate installer.
      example:
        availableVersions:
        - availableVersions
        - availableVersions
      properties:
        availableVersions:
          description: Available versions.
          items:
            type: string
          type: array
      type: object
    NetworkZone:
      description: Configuration of a network zone.
      example:
        numOfOneAgentsUsing: 6
        numOfConfiguredOneAgents: 1
        alternativeZones:
        - alternativeZones
        - alternativeZones
        numOfConfiguredActiveGates: 0
        description: description
        id: id
        numOfOneAgentsFromOtherZones: 5
      properties:
        numOfConfiguredActiveGates:
          description: The number of ActiveGates in the network zone.
          format: int32
          readOnly: true
          type: integer
        alternativeZones:
          description: A list of alternative network zones.
          items:
            type: string
          type: array
          uniqueItems: true
        numOfOneAgentsUsing:
          description: The number of OneAgents that are using ActiveGates in the network
            zone.
          format: int32
          readOnly: true
          type: integer
        numOfConfiguredOneAgents:
          description: The number of OneAgents that are configured to use the network
            zone as primary.
          format: int32
          readOnly: true
          type: integer
        numOfOneAgentsFromOtherZones:
          description: "The number of OneAgents from other network zones that are\
            \ using ActiveGates in the network zone. \n\n This is a fraction of\_\
            **numOfOneAgentsUsing**. \n\nOne possible reason for switching to another\
            \ zone is that a firewall is preventing a OneAgent from connecting to\
            \ any ActiveGate in the preferred network zone.\n\n"
          format: int32
          readOnly: true
          type: integer
        description:
          description: A short description of the network zone
          type: string
        id:
          description: The ID of the network zone
          readOnly: true
          type: string
      type: object
    NetworkZoneList:
      description: A list of network zones.
      example:
        networkZones:
        - numOfOneAgentsUsing: 6
          numOfConfiguredOneAgents: 1
          alternativeZones:
          - alternativeZones
          - alternativeZones
          numOfConfiguredActiveGates: 0
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 5
        - numOfOneAgentsUsing: 6
          numOfConfiguredOneAgents: 1
          alternativeZones:
          - alternativeZones
          - alternativeZones
          numOfConfiguredActiveGates: 0
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 5
      properties:
        networkZones:
          description: A list of network zones.
          items:
            $ref: '#/components/schemas/NetworkZone'
          type: array
      required:
      - networkZones
      type: object
    EntityShortRepresentation:
      description: The short representation of a Dynatrace entity.
      example:
        id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
        name: Dynatrace entity
        description: Dynatrace entity for the REST API example
      properties:
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
      required:
      - id
      type: object
    UpdateToken:
      example:
        name: name
        scopes:
        - DiagnosticExport
        - DiagnosticExport
        revoked: true
      properties:
        revoked:
          description: The token is revoked (`true`) or active (`false`).
          type: boolean
        name:
          description: The name of the token.
          type: string
        scopes:
          description: "The list of permissions assigned to the token. \n\nApart from\
            \ the new permissions, you need to submit the existing permissions you\
            \ want to keep, too. Any existing permission, missing in the payload,\
            \ is revoked.\n\n* `DiagnosticExport`: DiagnosticExport. \n* `ControlManagement`:\
            \ ControlManagement. \n* `UnattendedInstall`: UnattendedInstall. \n* `ServiceProviderAPI`:\
            \ Service Provider API. \n* `ExternalSyntheticIntegration`: Create and\
            \ read synthetic monitors, locations, and nodes. \n* `ClusterTokenManagement`:\
            \ Cluster token management. \n* `ReadSyntheticData`: Read synthetic monitors,\
            \ locations, and nodes. \n* `Nodekeeper`: Nodekeeper access for node management.\
            \ \n* `EnvironmentTokenManagement`: \"Token Management\" Token creation\
            \ for existing environments. \n* `settings.read`: Read settings. \n* `settings.write`:\
            \ Write settings. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`:\
            \ Write API tokens. \n"
          items:
            enum:
            - DiagnosticExport
            - ControlManagement
            - UnattendedInstall
            - ServiceProviderAPI
            - ExternalSyntheticIntegration
            - ClusterTokenManagement
            - ReadSyntheticData
            - Nodekeeper
            - EnvironmentTokenManagement
            - settings.read
            - settings.write
            - apiTokens.read
            - apiTokens.write
            type: string
          type: array
          uniqueItems: true
      type: object
    StubList:
      description: An ordered list of short representations of Dynatrace entities.
      example:
        values:
        - id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
          name: Dynatrace entity 1
          description: Dynatrace entity 1 for the REST API example
        - id: ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618
          name: Dynatrace entity 2
        - id: 8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f
      properties:
        values:
          description: An ordered list of short representations of Dynatrace entities.
          items:
            $ref: '#/components/schemas/EntityShortRepresentation'
          type: array
      required:
      - values
      type: object
    TokenMetadata:
      description: Metadata of a token.
      example:
        id: acbed0c4-4ef1-4303-991f-102510a69322
        name: myToken
        userId: john.smith
        revoked: true
        created: 1554076800000
        expires: 1585976400000
        lastUse: 1554354000000
        personalAccessToken: true
        scopes:
        - DataExport
        - ReadConfig
        - WriteConfig
      properties:
        id:
          description: The ID of the token.
          readOnly: true
          type: string
        name:
          description: The name of the token.
          type: string
        userId:
          description: The owner of the token.
          readOnly: true
          type: string
        revoked:
          description: Revocation status of the token. Revoked tokens are disabled.
          type: boolean
        created:
          description: The creation time as a unix timestamp in milliseconds.
          format: int64
          readOnly: true
          type: integer
        expires:
          description: The expiration time as a unix timestamp in milliseconds.
          format: int64
          type: integer
        lastUse:
          description: The unix timestamp in milliseconds when the token was last
            used.
          format: int64
          readOnly: true
          type: integer
        scopes:
          description: A list of scopes assigned to the token.
          items:
            enum:
            - ClusterTokenManagement
            - ControlManagement
            - DiagnosticExport
            - EnvironmentTokenManagement
            - ExternalSyntheticIntegration
            - Nodekeeper
            - ReadSyntheticData
            - ServiceProviderAPI
            - UnattendedInstall
            - apiTokens.read
            - apiTokens.write
            - settings.read
            - settings.write
            type: string
          type: array
        personalAccessToken:
          description: The token is a [personal access token](https://dt-url.net/wm03sop)
            (`true`) or an API token (`false`).
          readOnly: true
          type: boolean
      type: object
    CreateToken:
      example:
        expiresIn:
          unit: DAYS
          value: 0
        name: name
        scopes:
        - DiagnosticExport
        - DiagnosticExport
      properties:
        name:
          description: The name of the token.
          type: string
        expiresIn:
          $ref: '#/components/schemas/Duration'
        scopes:
          description: "The list of scopes to be assigned to the token.\n\n* `DiagnosticExport`:\
            \ DiagnosticExport. \n* `ControlManagement`: ControlManagement. \n* `UnattendedInstall`:\
            \ UnattendedInstall. \n* `ServiceProviderAPI`: Service Provider API. \n\
            * `ExternalSyntheticIntegration`: Create and read synthetic monitors,\
            \ locations, and nodes. \n* `ClusterTokenManagement`: Cluster token management.\
            \ \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes.\
            \ \n* `Nodekeeper`: Nodekeeper access for node management. \n* `EnvironmentTokenManagement`:\
            \ \"Token Management\" Token creation for existing environments. \n* `settings.read`:\
            \ Read settings. \n* `settings.write`: Write settings. \n* `apiTokens.read`:\
            \ Read API tokens. \n* `apiTokens.write`: Write API tokens. \n"
          items:
            enum:
            - DiagnosticExport
            - ControlManagement
            - UnattendedInstall
            - ServiceProviderAPI
            - ExternalSyntheticIntegration
            - ClusterTokenManagement
            - ReadSyntheticData
            - Nodekeeper
            - EnvironmentTokenManagement
            - settings.read
            - settings.write
            - apiTokens.read
            - apiTokens.write
            type: string
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - name
      - scopes
      type: object
    ObjectsList:
      description: A list of settings objects.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 1
        totalCount: 5
        items:
        - summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          schemaId: builtin:anomaly.infrastructure
          created: 6
          scope: HOST-D3A3C5A146830A79
          modified: 0
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        - summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          schemaId: builtin:anomaly.infrastructure
          created: 6
          scope: HOST-D3A3C5A146830A79
          modified: 0
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        items:
          description: A list of settings objects.
          items:
            $ref: '#/components/schemas/SettingsObject'
          type: array
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    SettingsObject:
      description: A settings object.
      example:
        summary: summary
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        author: john.doe@example.com
        schemaId: builtin:anomaly.infrastructure
        created: 6
        scope: HOST-D3A3C5A146830A79
        modified: 0
        value:
          autoMonitoring: true
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        author:
          description: The user (identified by a user ID or a public token ID) who
            performed that most recent modification.
          example: john.doe@example.com
          type: string
        modified:
          description: The timestamp of the last modification.
          format: int64
          type: integer
        scope:
          description: The scope that the object targets.
          example: HOST-D3A3C5A146830A79
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:anomaly.infrastructure
          type: string
        summary:
          description: A short summary of settings.
          type: string
        objectId:
          description: The ID of the settings object.
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        created:
          description: The timestamp of the creation.
          format: int64
          type: integer
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      type: object
    SettingsValue:
      description: "The value of the setting. \n\n It defines the actual values of\
        \ settings' parameters. \n\nThe actual content depends on the object's schema."
      example:
        autoMonitoring: true
      type: object
    SettingsObjectResponse:
      description: The response to a successful creation or update request.
      example:
        code: 0
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        objectId:
          description: The ID of the settings object.
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        code:
          description: The HTTP status code for the object.
          format: int32
          type: integer
      type: object
    SettingsObjectErrorResponse:
      description: The response to a failed settings object request
      properties:
        invalidValue:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
        error:
          $ref: '#/components/schemas/Error'
        code:
          description: The HTTP status code for the object.
          format: int32
          type: integer
      type: object
    SettingsObjectCreate:
      description: Configuration of a new settings object.
      example:
        schemaVersion: 1.0.0
        schemaId: builtin:anomaly.infrastructure
        scope: HOST-D3A3C5A146830A79
        value:
          autoMonitoring: true
        insertAfter: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        insertAfter:
          description: "The position of the new object. The new object will be added\
            \ after the specified one. \n\nIf `null`, the new object will be placed\
            \ in the last position. \n\nIf set to empty string, the new object will\
            \ be placed in the first position. \n\nOnly applicable for objects based\
            \ on schemas with ordered objects (schema's **ordered** parameter is set\
            \ to `true`)."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        scope:
          description: The scope that the object targets.
          example: HOST-D3A3C5A146830A79
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:anomaly.infrastructure
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - schemaId
      - scope
      - value
      type: object
    SettingsObjectUpdate:
      description: An update of a settings object.
      example:
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        value:
          autoMonitoring: true
      properties:
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - value
      type: object
    SchemaList:
      description: The list of available settings schemas.
      example:
        totalCount: 1
        items:
        - latestSchemaVersion: 1.4.2
          schemaId: builtin:anomaly.infrastructure
          displayName: Anomaly Detection for Infrastructure
        - latestSchemaVersion: 1.4.2
          schemaId: builtin:anomaly.infrastructure
          displayName: Anomaly Detection for Infrastructure
      properties:
        items:
          description: A list of settings schemas.
          items:
            $ref: '#/components/schemas/SchemaStub'
          type: array
        totalCount:
          description: The number of schemas in the list.
          example: 1
          format: int64
          type: integer
      type: object
    SchemaStub:
      description: The short representation of the settings schema.
      example:
        latestSchemaVersion: 1.4.2
        schemaId: builtin:anomaly.infrastructure
        displayName: Anomaly Detection for Infrastructure
      properties:
        latestSchemaVersion:
          description: The most recent version of the schema.
          example: 1.4.2
          type: string
        schemaId:
          description: The ID of the schema.
          example: builtin:anomaly.infrastructure
          type: string
        displayName:
          description: The name of the schema.
          example: Anomaly Detection for Infrastructure
          type: string
      type: object
    ComplexConstraint:
      description: A constraint on the values accepted for a complex settings property.
      example:
        customValidatorId: my-min-max
        customMessage: customMessage
        minimumPropertyCount: 1
        type: CUSTOM_VALIDATOR_REF
        maximumPropertyCount: 2
        properties:
        - properties
        - properties
      properties:
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        minimumPropertyCount:
          description: The minimum number of properties that must be set.
          example: 1
          format: int32
          type: integer
        maximumPropertyCount:
          description: The maximum number of properties that can be set.
          example: 2
          format: int32
          type: integer
        customMessage:
          description: A custom message for invalid values.
          type: string
        properties:
          description: A list of properties (defined by IDs) that are used to check
            the constraint.
          items:
            description: A list of properties (defined by IDs) that are used to check
              the constraint.
            type: string
          type: array
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LESS_THAN
          - LESS_THAN_OR_EQUAL
          - PROPERTY_COUNT_RANGE
          - UNKNOWN
          type: string
      type: object
    Constraint:
      description: A constraint on the values accepted for a settings property.
      example:
        customValidatorId: my-min-max
        minLength: 7
        pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
        customMessage: customConstraintMessage
        maximum: 200
        type: UNKNOWN
        minimum: 3
        maxLength: 20
        uniqueProperties:
        - my-prop-1
        - my-prop-2
      properties:
        maxLength:
          description: The maximum allowed length of string values.
          example: 20
          format: int32
          type: integer
        minLength:
          description: The minimum required length of string values.
          example: 7
          format: int32
          type: integer
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        customMessage:
          description: A custom message for invalid values.
          example: customConstraintMessage
          type: string
        uniqueProperties:
          description: A list of properties for which the combination of values must
            be unique.
          example:
          - my-prop-1
          - my-prop-2
          items:
            description: A list of properties for which the combination of values
              must be unique.
            example: '["my-prop-1","my-prop-2"]'
            type: string
          type: array
        maximum:
          description: The maximum allowed value.
          example: 200
          type: number
        minimum:
          description: The minimum allowed value.
          example: 3
          type: number
        pattern:
          description: The regular expression pattern for valid string values.
          example: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          type: string
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - LENGTH
          - NOT_BLANK
          - NOT_EMPTY
          - NO_WHITESPACE
          - PATTERN
          - RANGE
          - TRIMMED
          - UNIQUE
          - UNKNOWN
          example: UNKNOWN
          type: string
      type: object
    EnumType:
      description: Definition of an enum property.
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        description: typeDescription
        enumClass: enumClass
        items:
        - displayName: exampleDisplayName
          icon: checkmark
          enumInstance: exampleJavaEnumValue
          description: exampleDescription
          value: exampleValue
        - displayName: exampleDisplayName
          icon: checkmark
          enumInstance: exampleJavaEnumValue
          description: exampleDescription
          value: exampleValue
      properties:
        items:
          description: A list of allowed values of the enum.
          items:
            $ref: '#/components/schemas/EnumValue'
          type: array
        enumClass:
          description: An existing Java enum class that holds the allowed values of
            the enum.
          example: enumClass
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
      type: object
    EnumValue:
      description: An allowed value for an enum property.
      example:
        displayName: exampleDisplayName
        icon: checkmark
        enumInstance: exampleJavaEnumValue
        description: exampleDescription
        value: exampleValue
      properties:
        enumInstance:
          description: The name of the value in an existing Java enum class.
          example: exampleJavaEnumValue
          type: string
        icon:
          description: The icon of the value.
          example: checkmark
          type: string
        description:
          description: A short description of the value.
          example: exampleDescription
          type: string
        value:
          description: The allowed value of the enum.
          example: exampleValue
          type: object
        displayName:
          description: The display name of the value.
          example: exampleDisplayName
          type: string
      type: object
    Item:
      description: An item of a collection property.
      example:
        displayName: itemDisplayName
        documentation: propertyDocumentation
        description: itemDescription
        subType: itemSubType
        referencedType: itemReferencedType
        type: '{}'
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
      properties:
        referencedType:
          description: The type referenced by the item's value.
          example: itemReferencedType
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
        subType:
          description: The subtype of the item's value.
          example: itemSubType
          type: string
        description:
          description: A short description of the item.
          example: itemDescription
          type: string
        type:
          description: The type of the item's value.
          type: object
        displayName:
          description: The display name of the item.
          example: itemDisplayName
          type: string
      type: object
    Precondition:
      description: A precondition for visibility of a property.
      example:
        preconditions:
        - null
        - null
        expectedValue: expectedValue
        property: propertyToEvaluate
        type: "NULL"
        expectedValues: expectedValues
      properties:
        preconditions:
          description: "A list of child preconditions to be evaluated. \n\nOnly applicable\
            \ to properties of the `AND` and `OR` types."
          items:
            $ref: '#/components/schemas/Precondition'
          type: array
        expectedValue:
          description: "The expected value of the property. \n\nOnly applicable to\
            \ properties of the `EQUALS` type."
          example: expectedValue
          type: object
        expectedValues:
          description: "A list of valid values of the property. \n\nOnly applicable\
            \ to properties of the `IN` type."
          example: expectedValues
          items:
            type: object
          type: array
        precondition:
          $ref: '#/components/schemas/Precondition'
        property:
          description: The property to be evaluated.
          example: propertyToEvaluate
          type: string
        type:
          description: The type of the precondition.
          enum:
          - AND
          - EQUALS
          - IN
          - NOT
          - "NULL"
          - OR
          example: "NULL"
          type: string
      type: object
    PropertyDefinition:
      description: Configuration of a property in a settings schema.
      example:
        metadata:
          key: metadata
        nullable: true
        minObjects: 1
        displayName: propertyDisplayName
        documentation: propertyDocumentation
        description: propertyDescription
        referencedType: propertyReferencedType
        precondition:
          preconditions:
          - null
          - null
          expectedValue: expectedValue
          property: propertyToEvaluate
          type: "NULL"
          expectedValues: expectedValues
        type: '{}'
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        default: propertyDefaultValue
        subType: propertySubType
        maxObjects: 0
        items:
          displayName: itemDisplayName
          documentation: propertyDocumentation
          description: itemDescription
          subType: itemSubType
          referencedType: itemReferencedType
          type: '{}'
          constraints:
          - customValidatorId: my-min-max
            minLength: 7
            pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
          - customValidatorId: my-min-max
            minLength: 7
            pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
      properties:
        items:
          $ref: '#/components/schemas/Item'
        referencedType:
          description: The type referenced by the property value
          example: propertyReferencedType
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        maxObjects:
          description: "The maximum number of **objects** in a collection property.\
            \ \n\n Has the value of `1` for singletons."
          format: int32
          type: integer
        precondition:
          $ref: '#/components/schemas/Precondition'
        minObjects:
          description: The minimum number of **objects** in a collection property.
          example: 1
          format: int32
          type: integer
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
        subType:
          description: The subtype of the property's value.
          example: propertySubType
          type: string
        description:
          description: A short description of the property.
          example: propertyDescription
          type: string
        metadata:
          additionalProperties:
            description: Metadata of the property.
            type: string
          description: Metadata of the property.
          type: object
        nullable:
          description: The value can (`true`) or can't (`false`) be `null`.
          example: true
          type: boolean
        default:
          description: "The default value to be used when no value is provided. \n\
            \nIf a non-singleton has the value of `null`, it means an empty collection."
          example: propertyDefaultValue
          type: object
        type:
          description: The type of the property's value.
          type: object
        displayName:
          description: The display name of the property.
          example: propertyDisplayName
          type: string
      type: object
    SchemaDefinitionRestDto:
      example:
        ordered: true
        types:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            description: typeDescription
            versionInfo: Added new property
            constraints:
            - customValidatorId: my-min-max
              customMessage: customMessage
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            - customValidatorId: my-min-max
              customMessage: customMessage
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            version: "0"
            summaryPattern: summaryPatternOfType
            properties:
              key:
                metadata:
                  key: metadata
                nullable: true
                minObjects: 1
                displayName: propertyDisplayName
                documentation: propertyDocumentation
                description: propertyDescription
                referencedType: propertyReferencedType
                precondition:
                  preconditions:
                  - null
                  - null
                  expectedValue: expectedValue
                  property: propertyToEvaluate
                  type: "NULL"
                  expectedValues: expectedValues
                type: '{}'
                constraints:
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                default: propertyDefaultValue
                subType: propertySubType
                maxObjects: 0
                items:
                  displayName: itemDisplayName
                  documentation: propertyDocumentation
                  description: itemDescription
                  subType: itemSubType
                  referencedType: itemReferencedType
                  type: '{}'
                  constraints:
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
        metadata:
          key: metadata
        displayName: Anomaly detection for infrastructure
        documentation: documentation
        dynatrace: "1.0"
        description: Dynatrace automatically detects infrastructure-related performance
          anomalies such as high CPU saturation, memory outages, and low disk-space
          conditions
        version: 1.4.2
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        allowedScopes:
        - host
        - application
        enums:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            description: typeDescription
            enumClass: enumClass
            items:
            - displayName: exampleDisplayName
              icon: checkmark
              enumInstance: exampleJavaEnumValue
              description: exampleDescription
              value: exampleValue
            - displayName: exampleDisplayName
              icon: checkmark
              enumInstance: exampleJavaEnumValue
              description: exampleDescription
              value: exampleValue
        multiObject: true
        schemaId: builtin:anomaly.infrastructure
        maxObjects: 10
        properties:
          key:
            metadata:
              key: metadata
            nullable: true
            minObjects: 1
            displayName: propertyDisplayName
            documentation: propertyDocumentation
            description: propertyDescription
            referencedType: propertyReferencedType
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              property: propertyToEvaluate
              type: "NULL"
              expectedValues: expectedValues
            type: '{}'
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            subType: propertySubType
            maxObjects: 0
            items:
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              referencedType: itemReferencedType
              type: '{}'
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
      properties:
        dynatrace:
          description: The version of the data format.
          example: "1.0"
          type: string
        schemaId:
          description: The ID of the schema.
          example: builtin:anomaly.infrastructure
          type: string
        displayName:
          description: The display name of the schema.
          example: Anomaly detection for infrastructure
          type: string
        description:
          description: A short description of the schema.
          example: Dynatrace automatically detects infrastructure-related performance
            anomalies such as high CPU saturation, memory outages, and low disk-space
            conditions
          type: string
        documentation:
          description: An extended description of the schema and/or links to documentation.
          type: string
        version:
          description: The version of the schema.
          example: 1.4.2
          type: string
        multiObject:
          description: Multiple (`true`) objects per scope are permitted or a single
            (`false`) object per scope is permitted.
          type: boolean
        ordered:
          description: "If `true` the order of objects has semantic significance.\
            \ \n\nOnly applicable when **multiObject** is set to `true`."
          type: boolean
        maxObjects:
          description: "The maximum amount of objects per scope. \n\nOnly applicable\
            \ when **multiObject** is set to `true`."
          example: 10
          format: int32
          type: integer
        allowedScopes:
          description: A list of scopes where the schema can be used.
          example:
          - host
          - application
          items:
            type: string
          type: array
        enums:
          additionalProperties:
            $ref: '#/components/schemas/EnumType'
          description: A list of definitions of enum properties.
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: "A list of definitions of types. \n\n A type is a complex property\
            \ that contains its own set of subproperties."
          type: object
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: A list of schema's properties.
          type: object
        constraints:
          description: A list of constrains limiting the values to be accepted by
            the schema.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        metadata:
          additionalProperties:
            description: Metadata of the setting.
            type: string
          description: Metadata of the setting.
          type: object
      type: object
    SchemaType:
      description: "A list of definitions of types. \n\n A type is a complex property\
        \ that contains its own set of subproperties."
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        description: typeDescription
        versionInfo: Added new property
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        version: "0"
        summaryPattern: summaryPatternOfType
        properties:
          key:
            metadata:
              key: metadata
            nullable: true
            minObjects: 1
            displayName: propertyDisplayName
            documentation: propertyDocumentation
            description: propertyDescription
            referencedType: propertyReferencedType
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              property: propertyToEvaluate
              type: "NULL"
              expectedValues: expectedValues
            type: '{}'
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            subType: propertySubType
            maxObjects: 0
            items:
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              referencedType: itemReferencedType
              type: '{}'
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
      properties:
        summaryPattern:
          description: The pattern for the summary (for example, "Alert after *X*
            minutes.") of the configuration in the UI.
          example: summaryPatternOfType
          type: string
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        versionInfo:
          description: A short description of the version.
          example: Added new property
          type: string
        version:
          description: The version of the type.
          example: "0"
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: Definition of properties that can be persisted.
          type: object
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
      type: object
    SyntheticLocationIdsDto:
      description: A DTO for synthetic Location IDs.
      example:
        entityId: entityId
        geoLocationId: geoLocationId
      properties:
        entityId:
          description: Entity ID to be transferred
          type: string
        geoLocationId:
          description: GeoLocation ID to be transferred
          type: string
      required:
      - entityId
      - geoLocationId
      type: object
    PrivateSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - $ref: '#/components/schemas/PrivateSyntheticLocation_allOf'
      description: |-
        Configuration of a private synthetic location.

         **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.
      example:
        type: PRIVATE
        name: Linz Location
        latitude: 48.306351
        longitude: 14.287399
        nodes:
        - "93302281"
        status: ENABLED
        availabilityLocationOutage: false
        availabilityNodeOutage: false
        availabilityLocationNodeOutageDelayInMinutes: 5
        availabilityNotificationsEnabled: true
      required:
      - entityId
      - latitude
      - longitude
      - name
      - nodes
      - type
      type: object
    LocationCollectionElement:
      description: A synthetic location.
      properties:
        name:
          description: The name of the location.
          type: string
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        type:
          description: The type of the location.
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
        cloudPlatform:
          description: "The cloud provider where the location is hosted. \n\n Only\
            \ applicable to `PUBLIC` locations."
          enum:
          - ALIBABA
          - AMAZON_EC2
          - AZURE
          - DYNATRACE_CLOUD
          - GOOGLE_CLOUD
          - INTEROUTE
          - OTHER
          - UNDEFINED
          type: string
        ips:
          description: "The list of IP addresses assigned to the location. \n\n Only\
            \ applicable to `PUBLIC` locations."
          items:
            type: string
          type: array
        stage:
          description: The release stage of the location.
          enum:
          - BETA
          - COMING_SOON
          - GA
          type: string
        status:
          description: The status of the location.
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        geoLocationId:
          description: The Dynatrace GeoLocation ID of the location.
          type: string
      required:
      - entityId
      - geoLocationId
      - name
      - type
      type: object
    SyntheticLocations:
      description: A list of synthetic locations.
      example:
        locations:
        - name: Gdansk
          entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          type: PUBLIC
          cloudPlatform: AMAZON_EC2
          ips:
          - 134.189.153.97
          - 134.189.153.98
          stage: GA
          status: ENABLED
          capabilities:
          - BROWSER
          - HTTP
        - name: My private location
          entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          type: PRIVATE
          status: ENABLED
      properties:
        locations:
          description: A list of synthetic locations.
          items:
            $ref: '#/components/schemas/LocationCollectionElement'
          type: array
      required:
      - locations
      type: object
    PublicSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - $ref: '#/components/schemas/PublicSyntheticLocation_allOf'
      description: Configuration of a public synthetic location.
      example:
        entityId: GEOLOCATION-95196F3C9A4F4215
        type: PUBLIC
        name: Amazon US East
        countryCode: US
        regionCode: VA
        city: Amazon US East (N. Virginia)
        latitude: 39.0436
        longitude: -77.4875
        cloudPlatform: AMAZON_EC2
        ips:
        - 134.189.153.97
        - 134.189.153.98
        stage: GA
        browserType: Chrome
        browserVersion: 69.0.3497.81
        status: ENABLED
        capabilities:
        - BROWSER
        - HTTP
      required:
      - browserType
      - browserVersion
      - cloudPlatform
      - entityId
      - ips
      - latitude
      - longitude
      - name
      - stage
      - type
      type: object
    SyntheticLocation:
      description: "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**,\
        \ **city** parameters are optional as they can be retrieved based on **latitude**\
        \ and **longitude** of location.\n\n The actual set of fields depends on the\
        \ **type** of the location."
      discriminator:
        propertyName: type
      example:
        regionCode: regionCode
        city: city
        countryCode: countryCode
        latitude: 0.8008281904610115
        name: name
        entityId: entityId
        type: CLUSTER
        longitude: 6.027456183070403
        status: DISABLED
      properties:
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation\
            \ \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation\
            \ \n"
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
        name:
          description: The name of the location.
          type: string
        countryCode:
          description: "The country code of the location. \n\n Use the alpha-2 code\
            \ of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example,\
            \ `AT` for Austria or `PL` for Poland)."
          type: string
        regionCode:
          description: "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us)\
            \ or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes\
            \ (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR`\
            \ for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)."
          type: string
        city:
          description: The city of the location.
          type: string
        latitude:
          description: The latitude of the location in `DDD.dddd` format.
          format: double
          type: number
        longitude:
          description: The longitude of the location in `DDD.dddd` format.
          format: double
          type: number
        status:
          description: "The status of the location: \n\n* `ENABLED`: The location\
            \ is displayed as active in the UI. You can assign monitors to the location.\
            \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
            \ can't assign monitors to the location. Monitors already assigned to\
            \ the location will stay there and will be executed from the location.\
            \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
            \ monitors to the location. You can only set location as `HIDDEN` when\
            \ no monitor is assigned to it."
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
      required:
      - entityId
      - latitude
      - longitude
      - name
      - type
      type: object
    NodeCollectionElement:
      description: The short representation of a synthetic object. Only contains the
        ID and the display name.
      properties:
        entityId:
          description: The ID of a node.
          type: string
        hostname:
          description: The hostname of a node.
          type: string
        ips:
          description: The IP of a node.
          items:
            type: string
          type: array
        version:
          description: The version of a node
          type: string
        browserMonitorsEnabled:
          description: Browser check capabilities enabled flag.
          type: boolean
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        'oneAgentRoutingEnabled ':
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        status:
          description: The status of the synthetic node.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - 'oneAgentRoutingEnabled '
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    Nodes:
      description: A list of synthetic nodes
      example:
        nodes:
        - entityId: "3086117876"
          hostname: gdn.dyna.trace
          ips:
          - 238.245.160.14
          version: 1.161.0.20181210-173639
          browserMonitorsEnabled: true
          activeGateVersion: 1.172.2.20190607-040913
          oneAgentRoutingEnabled: true
          operatingSystem: Linux
          autoUpdateEnabled: true
          status: Running
          playerVersion: 1.179.0.20190920-145430
          healthCheckStatus: Ok
      properties:
        nodes:
          description: A list of synthetic nodes
          items:
            $ref: '#/components/schemas/NodeCollectionElement'
          type: array
      required:
      - nodes
      type: object
    Node:
      description: "Configuration of a synthetic node. \n\n A *synthetic node* is\
        \ an ActiveGate that is able to execute synthetic monitors."
      example:
        entityId: "3086117876"
        hostname: gdn.dyna.trace
        ips:
        - 238.245.160.14
        version: 1.161.0.20181210-173639
        browserMonitorsEnabled: true
        activeGateVersion: 1.172.2.20190607-040913
        oneAgentRoutingEnabled: true
        operatingSystem: Linux
        autoUpdateEnabled: true
        status: Running
        playerVersion: 1.179.0.20190920-145430
        healthCheckStatus: Ok
        browserType: Chrome
        browserVersion: 69.0.3497.81
      properties:
        entityId:
          description: The ID of the synthetic node.
          type: string
        hostname:
          description: The hostname of the synthetic node.
          type: string
        ips:
          description: The IP of the synthetic node.
          items:
            type: string
          type: array
        version:
          description: The version of the synthetic node.
          type: string
        browserMonitorsEnabled:
          description: The synthetic node is able to execute browser monitors (`true`)
            or not (`false`).
          type: boolean
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        'oneAgentRoutingEnabled ':
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        status:
          description: The status of the synthetic node.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
        browserType:
          description: The browser type.
          type: string
        browserVersion:
          description: The browser version.
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - browserType
      - browserVersion
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - 'oneAgentRoutingEnabled '
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    PrivateSyntheticLocation_allOf:
      properties:
        nodes:
          description: "A list of synthetic nodes belonging to the location. \n\n\
            \ You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl)\
            \ call."
          items:
            type: string
          type: array
        availabilityLocationOutage:
          description: The alerting of location outage is enabled (`true`) or disabled
            (`false`).
          type: boolean
        availabilityNodeOutage:
          description: "The alerting of node outage is enabled (`true`) or disabled\
            \ (`false`). \n\n If enabled, the outage of *any* node in the location\
            \ triggers an alert."
          type: boolean
        locationNodeOutageDelayInMinutes:
          description: "Alert if the location or node outage lasts longer than *X*\
            \ minutes. \n\n Only applicable when **availabilityLocationOutage** or\
            \ **availabilityNodeOutage** is set to `true`."
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        availabilityNotificationsEnabled:
          description: The notifications of location and node outage is enabled (`true`)
            or disabled (`false`).
          type: boolean
      type: object
    PublicSyntheticLocation_allOf:
      properties:
        cloudPlatform:
          description: The cloud provider where the location is hosted.
          enum:
          - ALIBABA
          - AMAZON_EC2
          - AZURE
          - DYNATRACE_CLOUD
          - GOOGLE_CLOUD
          - INTEROUTE
          - OTHER
          - UNDEFINED
          type: string
        ips:
          description: The list of IP addresses assigned to the location.
          items:
            type: string
          type: array
          uniqueItems: true
        stage:
          description: The stage of the location.
          enum:
          - BETA
          - COMING_SOON
          - GA
          type: string
        browserType:
          description: The type of the browser the location is using to execute browser
            monitors.
          type: string
        browserVersion:
          description: The version of the browser the location is using to execute
            browser monitors.
          type: string
        capabilities:
          description: A list of location capabilities.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    Api-Token:
      description: |-
        Dynatrace API Token

         The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.
      in: header
      name: Authorization
      type: apiKey
