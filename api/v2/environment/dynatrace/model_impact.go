/*
 * Dynatrace Environment API
 *
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// Impact The impact analysis of the problem on other entities/users.
type Impact struct {
	// Defines the actual set of fields depending on the value. See one of the following objects:   * `SERVICE` -> ServiceImpact  * `APPLICATION` -> ApplicationImpact  * `MOBILE` -> MobileImpact  * `CUSTOM_APPLICATION` -> CustomApplicationImpact  
	ImpactType string `json:"impactType"`
	ImpactedEntity EntityStub `json:"impactedEntity"`
	// The estimated number of affected users.
	EstimatedAffectedUsers int64 `json:"estimatedAffectedUsers"`
}

// NewImpact instantiates a new Impact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImpact(impactType string, impactedEntity EntityStub, estimatedAffectedUsers int64) *Impact {
	this := Impact{}
	this.ImpactType = impactType
	this.ImpactedEntity = impactedEntity
	this.EstimatedAffectedUsers = estimatedAffectedUsers
	return &this
}

// NewImpactWithDefaults instantiates a new Impact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImpactWithDefaults() *Impact {
	this := Impact{}
	return &this
}

// GetImpactType returns the ImpactType field value
func (o *Impact) GetImpactType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImpactType
}

// GetImpactTypeOk returns a tuple with the ImpactType field value
// and a boolean to check if the value has been set.
func (o *Impact) GetImpactTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImpactType, true
}

// SetImpactType sets field value
func (o *Impact) SetImpactType(v string) {
	o.ImpactType = v
}

// GetImpactedEntity returns the ImpactedEntity field value
func (o *Impact) GetImpactedEntity() EntityStub {
	if o == nil {
		var ret EntityStub
		return ret
	}

	return o.ImpactedEntity
}

// GetImpactedEntityOk returns a tuple with the ImpactedEntity field value
// and a boolean to check if the value has been set.
func (o *Impact) GetImpactedEntityOk() (*EntityStub, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImpactedEntity, true
}

// SetImpactedEntity sets field value
func (o *Impact) SetImpactedEntity(v EntityStub) {
	o.ImpactedEntity = v
}

// GetEstimatedAffectedUsers returns the EstimatedAffectedUsers field value
func (o *Impact) GetEstimatedAffectedUsers() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EstimatedAffectedUsers
}

// GetEstimatedAffectedUsersOk returns a tuple with the EstimatedAffectedUsers field value
// and a boolean to check if the value has been set.
func (o *Impact) GetEstimatedAffectedUsersOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EstimatedAffectedUsers, true
}

// SetEstimatedAffectedUsers sets field value
func (o *Impact) SetEstimatedAffectedUsers(v int64) {
	o.EstimatedAffectedUsers = v
}

func (o Impact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["impactType"] = o.ImpactType
	}
	if true {
		toSerialize["impactedEntity"] = o.ImpactedEntity
	}
	if true {
		toSerialize["estimatedAffectedUsers"] = o.EstimatedAffectedUsers
	}
	return json.Marshal(toSerialize)
}

type NullableImpact struct {
	value *Impact
	isSet bool
}

func (v NullableImpact) Get() *Impact {
	return v.value
}

func (v *NullableImpact) Set(val *Impact) {
	v.value = val
	v.isSet = true
}

func (v NullableImpact) IsSet() bool {
	return v.isSet
}

func (v *NullableImpact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImpact(val *Impact) *NullableImpact {
	return &NullableImpact{value: val, isSet: true}
}

func (v NullableImpact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImpact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


