/*
 * Dynatrace Environment API
 *
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// VulnerableComponent Vulnerable component of a security problem.
type VulnerableComponent struct {
	// The Dynatrace entity ID of the vulnerable component.
	Id *string `json:"id,omitempty"`
	// The display name of the vulnerable component.
	DisplayName *string `json:"displayName,omitempty"`
	// The file name of the vulnerable component.
	FileName *string `json:"fileName,omitempty"`
	// The number of affected entities.
	NumberOfAffectedEntities *int32 `json:"numberOfAffectedEntities,omitempty"`
	// The list of affected entities.
	AffectedEntities *[]string `json:"affectedEntities,omitempty"`
}

// NewVulnerableComponent instantiates a new VulnerableComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerableComponent() *VulnerableComponent {
	this := VulnerableComponent{}
	return &this
}

// NewVulnerableComponentWithDefaults instantiates a new VulnerableComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerableComponentWithDefaults() *VulnerableComponent {
	this := VulnerableComponent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VulnerableComponent) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableComponent) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VulnerableComponent) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VulnerableComponent) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *VulnerableComponent) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableComponent) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *VulnerableComponent) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *VulnerableComponent) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *VulnerableComponent) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableComponent) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *VulnerableComponent) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *VulnerableComponent) SetFileName(v string) {
	o.FileName = &v
}

// GetNumberOfAffectedEntities returns the NumberOfAffectedEntities field value if set, zero value otherwise.
func (o *VulnerableComponent) GetNumberOfAffectedEntities() int32 {
	if o == nil || o.NumberOfAffectedEntities == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfAffectedEntities
}

// GetNumberOfAffectedEntitiesOk returns a tuple with the NumberOfAffectedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableComponent) GetNumberOfAffectedEntitiesOk() (*int32, bool) {
	if o == nil || o.NumberOfAffectedEntities == nil {
		return nil, false
	}
	return o.NumberOfAffectedEntities, true
}

// HasNumberOfAffectedEntities returns a boolean if a field has been set.
func (o *VulnerableComponent) HasNumberOfAffectedEntities() bool {
	if o != nil && o.NumberOfAffectedEntities != nil {
		return true
	}

	return false
}

// SetNumberOfAffectedEntities gets a reference to the given int32 and assigns it to the NumberOfAffectedEntities field.
func (o *VulnerableComponent) SetNumberOfAffectedEntities(v int32) {
	o.NumberOfAffectedEntities = &v
}

// GetAffectedEntities returns the AffectedEntities field value if set, zero value otherwise.
func (o *VulnerableComponent) GetAffectedEntities() []string {
	if o == nil || o.AffectedEntities == nil {
		var ret []string
		return ret
	}
	return *o.AffectedEntities
}

// GetAffectedEntitiesOk returns a tuple with the AffectedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableComponent) GetAffectedEntitiesOk() (*[]string, bool) {
	if o == nil || o.AffectedEntities == nil {
		return nil, false
	}
	return o.AffectedEntities, true
}

// HasAffectedEntities returns a boolean if a field has been set.
func (o *VulnerableComponent) HasAffectedEntities() bool {
	if o != nil && o.AffectedEntities != nil {
		return true
	}

	return false
}

// SetAffectedEntities gets a reference to the given []string and assigns it to the AffectedEntities field.
func (o *VulnerableComponent) SetAffectedEntities(v []string) {
	o.AffectedEntities = &v
}

func (o VulnerableComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.NumberOfAffectedEntities != nil {
		toSerialize["numberOfAffectedEntities"] = o.NumberOfAffectedEntities
	}
	if o.AffectedEntities != nil {
		toSerialize["affectedEntities"] = o.AffectedEntities
	}
	return json.Marshal(toSerialize)
}

type NullableVulnerableComponent struct {
	value *VulnerableComponent
	isSet bool
}

func (v NullableVulnerableComponent) Get() *VulnerableComponent {
	return v.value
}

func (v *NullableVulnerableComponent) Set(val *VulnerableComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerableComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerableComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerableComponent(val *VulnerableComponent) *NullableVulnerableComponent {
	return &NullableVulnerableComponent{value: val, isSet: true}
}

func (v NullableVulnerableComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerableComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


