/*
 * Dynatrace Environment API
 *
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// MonitorRequestExecutionResult A result of the execution HTTP monitor's request.
type MonitorRequestExecutionResult struct {
	// Request id.
	RequestId *string `json:"requestId,omitempty"`
	// Request name.
	RequestName *string `json:"requestName,omitempty"`
	// Request's sequence number.
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`
	// Request start timestamp.
	StartTimestamp *int64 `json:"startTimestamp,omitempty"`
	// VUC's id on which monitor's request was executed.
	EngineId *int64 `json:"engineId,omitempty"`
	// Flag informs whether request was executed on public location.
	PublicLocation *bool `json:"publicLocation,omitempty"`
	// Request URL address.
	Url *string `json:"url,omitempty"`
	// Request method type.
	Method *string `json:"method,omitempty"`
	// Request's request body.
	RequestBody *string `json:"requestBody,omitempty"`
	// A list of request's headers
	RequestHeaders *[]MonitorRequestHeader `json:"requestHeaders,omitempty"`
	// Request's response status code.
	ResponseStatusCode *int32 `json:"responseStatusCode,omitempty"`
	// Request's response body.
	ResponseBody *string `json:"responseBody,omitempty"`
	// Request's response size in bytes.
	ResponseSize *int64 `json:"responseSize,omitempty"`
	// A flag indicating that the response payload size limit of 10MB has been exceeded.
	ResponseBodySizeLimitExceeded *bool `json:"responseBodySizeLimitExceeded,omitempty"`
	// A list of request's response headers
	ResponseHeaders *[]MonitorRequestHeader `json:"responseHeaders,omitempty"`
	// Request's resolved ips.'
	ResolvedIps *[]string `json:"resolvedIps,omitempty"`
	// Request's health status code.
	HealthStatusCode *int32 `json:"healthStatusCode,omitempty"`
	// Request's health status.
	HealthStatus *string `json:"healthStatus,omitempty"`
	// Request's response message.'
	ResponseMessage *string `json:"responseMessage,omitempty"`
	// An expiry date of the first SSL certificate from the certificate chain.
	PeerCertificateExpiryDate *int64 `json:"peerCertificateExpiryDate,omitempty"`
	// Request's certificate details.
	PeerCertificateDetails *string `json:"peerCertificateDetails,omitempty"`
	// A total request time measured in ms.
	TotalTime *int64 `json:"totalTime,omitempty"`
	// A hostname resolution time measured in ms.
	HostNameResolutionTime *int64 `json:"hostNameResolutionTime,omitempty"`
	// A TCP connect time measured in ms.
	TcpConnectTime *int64 `json:"tcpConnectTime,omitempty"`
	// A TLS handshake time measured in ms.
	TlsHandshakeTime *int64 `json:"tlsHandshakeTime,omitempty"`
	// A time to first byte measured in ms.
	TimeToFirstByte *int64 `json:"timeToFirstByte,omitempty"`
	// Total number of milliseconds spent on handling all redirect requests, measured in ms.
	RedirectionTime *int64 `json:"redirectionTime,omitempty"`
	// Waiting time (time to first byte - (DNS lookup time + TCP connect time + TLS handshake time), measured in ms.
	WaitingTime *int64 `json:"waitingTime,omitempty"`
	// Number of request's redirects.
	RedirectsCount *int32 `json:"redirectsCount,omitempty"`
	// Request's failure message.
	FailureMessage *string `json:"failureMessage,omitempty"`
}

// NewMonitorRequestExecutionResult instantiates a new MonitorRequestExecutionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorRequestExecutionResult() *MonitorRequestExecutionResult {
	this := MonitorRequestExecutionResult{}
	return &this
}

// NewMonitorRequestExecutionResultWithDefaults instantiates a new MonitorRequestExecutionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorRequestExecutionResultWithDefaults() *MonitorRequestExecutionResult {
	this := MonitorRequestExecutionResult{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *MonitorRequestExecutionResult) SetRequestId(v string) {
	o.RequestId = &v
}

// GetRequestName returns the RequestName field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRequestName() string {
	if o == nil || o.RequestName == nil {
		var ret string
		return ret
	}
	return *o.RequestName
}

// GetRequestNameOk returns a tuple with the RequestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRequestNameOk() (*string, bool) {
	if o == nil || o.RequestName == nil {
		return nil, false
	}
	return o.RequestName, true
}

// HasRequestName returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRequestName() bool {
	if o != nil && o.RequestName != nil {
		return true
	}

	return false
}

// SetRequestName gets a reference to the given string and assigns it to the RequestName field.
func (o *MonitorRequestExecutionResult) SetRequestName(v string) {
	o.RequestName = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetSequenceNumber() int32 {
	if o == nil || o.SequenceNumber == nil {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *MonitorRequestExecutionResult) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetStartTimestamp returns the StartTimestamp field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetStartTimestamp() int64 {
	if o == nil || o.StartTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.StartTimestamp
}

// GetStartTimestampOk returns a tuple with the StartTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetStartTimestampOk() (*int64, bool) {
	if o == nil || o.StartTimestamp == nil {
		return nil, false
	}
	return o.StartTimestamp, true
}

// HasStartTimestamp returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasStartTimestamp() bool {
	if o != nil && o.StartTimestamp != nil {
		return true
	}

	return false
}

// SetStartTimestamp gets a reference to the given int64 and assigns it to the StartTimestamp field.
func (o *MonitorRequestExecutionResult) SetStartTimestamp(v int64) {
	o.StartTimestamp = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetEngineId() int64 {
	if o == nil || o.EngineId == nil {
		var ret int64
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetEngineIdOk() (*int64, bool) {
	if o == nil || o.EngineId == nil {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasEngineId() bool {
	if o != nil && o.EngineId != nil {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given int64 and assigns it to the EngineId field.
func (o *MonitorRequestExecutionResult) SetEngineId(v int64) {
	o.EngineId = &v
}

// GetPublicLocation returns the PublicLocation field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetPublicLocation() bool {
	if o == nil || o.PublicLocation == nil {
		var ret bool
		return ret
	}
	return *o.PublicLocation
}

// GetPublicLocationOk returns a tuple with the PublicLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetPublicLocationOk() (*bool, bool) {
	if o == nil || o.PublicLocation == nil {
		return nil, false
	}
	return o.PublicLocation, true
}

// HasPublicLocation returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasPublicLocation() bool {
	if o != nil && o.PublicLocation != nil {
		return true
	}

	return false
}

// SetPublicLocation gets a reference to the given bool and assigns it to the PublicLocation field.
func (o *MonitorRequestExecutionResult) SetPublicLocation(v bool) {
	o.PublicLocation = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MonitorRequestExecutionResult) SetUrl(v string) {
	o.Url = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *MonitorRequestExecutionResult) SetMethod(v string) {
	o.Method = &v
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRequestBody() string {
	if o == nil || o.RequestBody == nil {
		var ret string
		return ret
	}
	return *o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRequestBodyOk() (*string, bool) {
	if o == nil || o.RequestBody == nil {
		return nil, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRequestBody() bool {
	if o != nil && o.RequestBody != nil {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given string and assigns it to the RequestBody field.
func (o *MonitorRequestExecutionResult) SetRequestBody(v string) {
	o.RequestBody = &v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRequestHeaders() []MonitorRequestHeader {
	if o == nil || o.RequestHeaders == nil {
		var ret []MonitorRequestHeader
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRequestHeadersOk() (*[]MonitorRequestHeader, bool) {
	if o == nil || o.RequestHeaders == nil {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders != nil {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given []MonitorRequestHeader and assigns it to the RequestHeaders field.
func (o *MonitorRequestExecutionResult) SetRequestHeaders(v []MonitorRequestHeader) {
	o.RequestHeaders = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseStatusCode() int32 {
	if o == nil || o.ResponseStatusCode == nil {
		var ret int32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given int32 and assigns it to the ResponseStatusCode field.
func (o *MonitorRequestExecutionResult) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode = &v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseBody() string {
	if o == nil || o.ResponseBody == nil {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseBodyOk() (*string, bool) {
	if o == nil || o.ResponseBody == nil {
		return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseBody() bool {
	if o != nil && o.ResponseBody != nil {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *MonitorRequestExecutionResult) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetResponseSize returns the ResponseSize field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseSize() int64 {
	if o == nil || o.ResponseSize == nil {
		var ret int64
		return ret
	}
	return *o.ResponseSize
}

// GetResponseSizeOk returns a tuple with the ResponseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseSizeOk() (*int64, bool) {
	if o == nil || o.ResponseSize == nil {
		return nil, false
	}
	return o.ResponseSize, true
}

// HasResponseSize returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseSize() bool {
	if o != nil && o.ResponseSize != nil {
		return true
	}

	return false
}

// SetResponseSize gets a reference to the given int64 and assigns it to the ResponseSize field.
func (o *MonitorRequestExecutionResult) SetResponseSize(v int64) {
	o.ResponseSize = &v
}

// GetResponseBodySizeLimitExceeded returns the ResponseBodySizeLimitExceeded field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseBodySizeLimitExceeded() bool {
	if o == nil || o.ResponseBodySizeLimitExceeded == nil {
		var ret bool
		return ret
	}
	return *o.ResponseBodySizeLimitExceeded
}

// GetResponseBodySizeLimitExceededOk returns a tuple with the ResponseBodySizeLimitExceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseBodySizeLimitExceededOk() (*bool, bool) {
	if o == nil || o.ResponseBodySizeLimitExceeded == nil {
		return nil, false
	}
	return o.ResponseBodySizeLimitExceeded, true
}

// HasResponseBodySizeLimitExceeded returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseBodySizeLimitExceeded() bool {
	if o != nil && o.ResponseBodySizeLimitExceeded != nil {
		return true
	}

	return false
}

// SetResponseBodySizeLimitExceeded gets a reference to the given bool and assigns it to the ResponseBodySizeLimitExceeded field.
func (o *MonitorRequestExecutionResult) SetResponseBodySizeLimitExceeded(v bool) {
	o.ResponseBodySizeLimitExceeded = &v
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseHeaders() []MonitorRequestHeader {
	if o == nil || o.ResponseHeaders == nil {
		var ret []MonitorRequestHeader
		return ret
	}
	return *o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseHeadersOk() (*[]MonitorRequestHeader, bool) {
	if o == nil || o.ResponseHeaders == nil {
		return nil, false
	}
	return o.ResponseHeaders, true
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseHeaders() bool {
	if o != nil && o.ResponseHeaders != nil {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given []MonitorRequestHeader and assigns it to the ResponseHeaders field.
func (o *MonitorRequestExecutionResult) SetResponseHeaders(v []MonitorRequestHeader) {
	o.ResponseHeaders = &v
}

// GetResolvedIps returns the ResolvedIps field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResolvedIps() []string {
	if o == nil || o.ResolvedIps == nil {
		var ret []string
		return ret
	}
	return *o.ResolvedIps
}

// GetResolvedIpsOk returns a tuple with the ResolvedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResolvedIpsOk() (*[]string, bool) {
	if o == nil || o.ResolvedIps == nil {
		return nil, false
	}
	return o.ResolvedIps, true
}

// HasResolvedIps returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResolvedIps() bool {
	if o != nil && o.ResolvedIps != nil {
		return true
	}

	return false
}

// SetResolvedIps gets a reference to the given []string and assigns it to the ResolvedIps field.
func (o *MonitorRequestExecutionResult) SetResolvedIps(v []string) {
	o.ResolvedIps = &v
}

// GetHealthStatusCode returns the HealthStatusCode field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetHealthStatusCode() int32 {
	if o == nil || o.HealthStatusCode == nil {
		var ret int32
		return ret
	}
	return *o.HealthStatusCode
}

// GetHealthStatusCodeOk returns a tuple with the HealthStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetHealthStatusCodeOk() (*int32, bool) {
	if o == nil || o.HealthStatusCode == nil {
		return nil, false
	}
	return o.HealthStatusCode, true
}

// HasHealthStatusCode returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasHealthStatusCode() bool {
	if o != nil && o.HealthStatusCode != nil {
		return true
	}

	return false
}

// SetHealthStatusCode gets a reference to the given int32 and assigns it to the HealthStatusCode field.
func (o *MonitorRequestExecutionResult) SetHealthStatusCode(v int32) {
	o.HealthStatusCode = &v
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetHealthStatus() string {
	if o == nil || o.HealthStatus == nil {
		var ret string
		return ret
	}
	return *o.HealthStatus
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetHealthStatusOk() (*string, bool) {
	if o == nil || o.HealthStatus == nil {
		return nil, false
	}
	return o.HealthStatus, true
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasHealthStatus() bool {
	if o != nil && o.HealthStatus != nil {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given string and assigns it to the HealthStatus field.
func (o *MonitorRequestExecutionResult) SetHealthStatus(v string) {
	o.HealthStatus = &v
}

// GetResponseMessage returns the ResponseMessage field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetResponseMessage() string {
	if o == nil || o.ResponseMessage == nil {
		var ret string
		return ret
	}
	return *o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetResponseMessageOk() (*string, bool) {
	if o == nil || o.ResponseMessage == nil {
		return nil, false
	}
	return o.ResponseMessage, true
}

// HasResponseMessage returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasResponseMessage() bool {
	if o != nil && o.ResponseMessage != nil {
		return true
	}

	return false
}

// SetResponseMessage gets a reference to the given string and assigns it to the ResponseMessage field.
func (o *MonitorRequestExecutionResult) SetResponseMessage(v string) {
	o.ResponseMessage = &v
}

// GetPeerCertificateExpiryDate returns the PeerCertificateExpiryDate field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetPeerCertificateExpiryDate() int64 {
	if o == nil || o.PeerCertificateExpiryDate == nil {
		var ret int64
		return ret
	}
	return *o.PeerCertificateExpiryDate
}

// GetPeerCertificateExpiryDateOk returns a tuple with the PeerCertificateExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetPeerCertificateExpiryDateOk() (*int64, bool) {
	if o == nil || o.PeerCertificateExpiryDate == nil {
		return nil, false
	}
	return o.PeerCertificateExpiryDate, true
}

// HasPeerCertificateExpiryDate returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasPeerCertificateExpiryDate() bool {
	if o != nil && o.PeerCertificateExpiryDate != nil {
		return true
	}

	return false
}

// SetPeerCertificateExpiryDate gets a reference to the given int64 and assigns it to the PeerCertificateExpiryDate field.
func (o *MonitorRequestExecutionResult) SetPeerCertificateExpiryDate(v int64) {
	o.PeerCertificateExpiryDate = &v
}

// GetPeerCertificateDetails returns the PeerCertificateDetails field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetPeerCertificateDetails() string {
	if o == nil || o.PeerCertificateDetails == nil {
		var ret string
		return ret
	}
	return *o.PeerCertificateDetails
}

// GetPeerCertificateDetailsOk returns a tuple with the PeerCertificateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetPeerCertificateDetailsOk() (*string, bool) {
	if o == nil || o.PeerCertificateDetails == nil {
		return nil, false
	}
	return o.PeerCertificateDetails, true
}

// HasPeerCertificateDetails returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasPeerCertificateDetails() bool {
	if o != nil && o.PeerCertificateDetails != nil {
		return true
	}

	return false
}

// SetPeerCertificateDetails gets a reference to the given string and assigns it to the PeerCertificateDetails field.
func (o *MonitorRequestExecutionResult) SetPeerCertificateDetails(v string) {
	o.PeerCertificateDetails = &v
}

// GetTotalTime returns the TotalTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetTotalTime() int64 {
	if o == nil || o.TotalTime == nil {
		var ret int64
		return ret
	}
	return *o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetTotalTimeOk() (*int64, bool) {
	if o == nil || o.TotalTime == nil {
		return nil, false
	}
	return o.TotalTime, true
}

// HasTotalTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasTotalTime() bool {
	if o != nil && o.TotalTime != nil {
		return true
	}

	return false
}

// SetTotalTime gets a reference to the given int64 and assigns it to the TotalTime field.
func (o *MonitorRequestExecutionResult) SetTotalTime(v int64) {
	o.TotalTime = &v
}

// GetHostNameResolutionTime returns the HostNameResolutionTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetHostNameResolutionTime() int64 {
	if o == nil || o.HostNameResolutionTime == nil {
		var ret int64
		return ret
	}
	return *o.HostNameResolutionTime
}

// GetHostNameResolutionTimeOk returns a tuple with the HostNameResolutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetHostNameResolutionTimeOk() (*int64, bool) {
	if o == nil || o.HostNameResolutionTime == nil {
		return nil, false
	}
	return o.HostNameResolutionTime, true
}

// HasHostNameResolutionTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasHostNameResolutionTime() bool {
	if o != nil && o.HostNameResolutionTime != nil {
		return true
	}

	return false
}

// SetHostNameResolutionTime gets a reference to the given int64 and assigns it to the HostNameResolutionTime field.
func (o *MonitorRequestExecutionResult) SetHostNameResolutionTime(v int64) {
	o.HostNameResolutionTime = &v
}

// GetTcpConnectTime returns the TcpConnectTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetTcpConnectTime() int64 {
	if o == nil || o.TcpConnectTime == nil {
		var ret int64
		return ret
	}
	return *o.TcpConnectTime
}

// GetTcpConnectTimeOk returns a tuple with the TcpConnectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetTcpConnectTimeOk() (*int64, bool) {
	if o == nil || o.TcpConnectTime == nil {
		return nil, false
	}
	return o.TcpConnectTime, true
}

// HasTcpConnectTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasTcpConnectTime() bool {
	if o != nil && o.TcpConnectTime != nil {
		return true
	}

	return false
}

// SetTcpConnectTime gets a reference to the given int64 and assigns it to the TcpConnectTime field.
func (o *MonitorRequestExecutionResult) SetTcpConnectTime(v int64) {
	o.TcpConnectTime = &v
}

// GetTlsHandshakeTime returns the TlsHandshakeTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetTlsHandshakeTime() int64 {
	if o == nil || o.TlsHandshakeTime == nil {
		var ret int64
		return ret
	}
	return *o.TlsHandshakeTime
}

// GetTlsHandshakeTimeOk returns a tuple with the TlsHandshakeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetTlsHandshakeTimeOk() (*int64, bool) {
	if o == nil || o.TlsHandshakeTime == nil {
		return nil, false
	}
	return o.TlsHandshakeTime, true
}

// HasTlsHandshakeTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasTlsHandshakeTime() bool {
	if o != nil && o.TlsHandshakeTime != nil {
		return true
	}

	return false
}

// SetTlsHandshakeTime gets a reference to the given int64 and assigns it to the TlsHandshakeTime field.
func (o *MonitorRequestExecutionResult) SetTlsHandshakeTime(v int64) {
	o.TlsHandshakeTime = &v
}

// GetTimeToFirstByte returns the TimeToFirstByte field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetTimeToFirstByte() int64 {
	if o == nil || o.TimeToFirstByte == nil {
		var ret int64
		return ret
	}
	return *o.TimeToFirstByte
}

// GetTimeToFirstByteOk returns a tuple with the TimeToFirstByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetTimeToFirstByteOk() (*int64, bool) {
	if o == nil || o.TimeToFirstByte == nil {
		return nil, false
	}
	return o.TimeToFirstByte, true
}

// HasTimeToFirstByte returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasTimeToFirstByte() bool {
	if o != nil && o.TimeToFirstByte != nil {
		return true
	}

	return false
}

// SetTimeToFirstByte gets a reference to the given int64 and assigns it to the TimeToFirstByte field.
func (o *MonitorRequestExecutionResult) SetTimeToFirstByte(v int64) {
	o.TimeToFirstByte = &v
}

// GetRedirectionTime returns the RedirectionTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRedirectionTime() int64 {
	if o == nil || o.RedirectionTime == nil {
		var ret int64
		return ret
	}
	return *o.RedirectionTime
}

// GetRedirectionTimeOk returns a tuple with the RedirectionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRedirectionTimeOk() (*int64, bool) {
	if o == nil || o.RedirectionTime == nil {
		return nil, false
	}
	return o.RedirectionTime, true
}

// HasRedirectionTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRedirectionTime() bool {
	if o != nil && o.RedirectionTime != nil {
		return true
	}

	return false
}

// SetRedirectionTime gets a reference to the given int64 and assigns it to the RedirectionTime field.
func (o *MonitorRequestExecutionResult) SetRedirectionTime(v int64) {
	o.RedirectionTime = &v
}

// GetWaitingTime returns the WaitingTime field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetWaitingTime() int64 {
	if o == nil || o.WaitingTime == nil {
		var ret int64
		return ret
	}
	return *o.WaitingTime
}

// GetWaitingTimeOk returns a tuple with the WaitingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetWaitingTimeOk() (*int64, bool) {
	if o == nil || o.WaitingTime == nil {
		return nil, false
	}
	return o.WaitingTime, true
}

// HasWaitingTime returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasWaitingTime() bool {
	if o != nil && o.WaitingTime != nil {
		return true
	}

	return false
}

// SetWaitingTime gets a reference to the given int64 and assigns it to the WaitingTime field.
func (o *MonitorRequestExecutionResult) SetWaitingTime(v int64) {
	o.WaitingTime = &v
}

// GetRedirectsCount returns the RedirectsCount field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetRedirectsCount() int32 {
	if o == nil || o.RedirectsCount == nil {
		var ret int32
		return ret
	}
	return *o.RedirectsCount
}

// GetRedirectsCountOk returns a tuple with the RedirectsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetRedirectsCountOk() (*int32, bool) {
	if o == nil || o.RedirectsCount == nil {
		return nil, false
	}
	return o.RedirectsCount, true
}

// HasRedirectsCount returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasRedirectsCount() bool {
	if o != nil && o.RedirectsCount != nil {
		return true
	}

	return false
}

// SetRedirectsCount gets a reference to the given int32 and assigns it to the RedirectsCount field.
func (o *MonitorRequestExecutionResult) SetRedirectsCount(v int32) {
	o.RedirectsCount = &v
}

// GetFailureMessage returns the FailureMessage field value if set, zero value otherwise.
func (o *MonitorRequestExecutionResult) GetFailureMessage() string {
	if o == nil || o.FailureMessage == nil {
		var ret string
		return ret
	}
	return *o.FailureMessage
}

// GetFailureMessageOk returns a tuple with the FailureMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestExecutionResult) GetFailureMessageOk() (*string, bool) {
	if o == nil || o.FailureMessage == nil {
		return nil, false
	}
	return o.FailureMessage, true
}

// HasFailureMessage returns a boolean if a field has been set.
func (o *MonitorRequestExecutionResult) HasFailureMessage() bool {
	if o != nil && o.FailureMessage != nil {
		return true
	}

	return false
}

// SetFailureMessage gets a reference to the given string and assigns it to the FailureMessage field.
func (o *MonitorRequestExecutionResult) SetFailureMessage(v string) {
	o.FailureMessage = &v
}

func (o MonitorRequestExecutionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestId != nil {
		toSerialize["requestId"] = o.RequestId
	}
	if o.RequestName != nil {
		toSerialize["requestName"] = o.RequestName
	}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.StartTimestamp != nil {
		toSerialize["startTimestamp"] = o.StartTimestamp
	}
	if o.EngineId != nil {
		toSerialize["engineId"] = o.EngineId
	}
	if o.PublicLocation != nil {
		toSerialize["publicLocation"] = o.PublicLocation
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.RequestBody != nil {
		toSerialize["requestBody"] = o.RequestBody
	}
	if o.RequestHeaders != nil {
		toSerialize["requestHeaders"] = o.RequestHeaders
	}
	if o.ResponseStatusCode != nil {
		toSerialize["responseStatusCode"] = o.ResponseStatusCode
	}
	if o.ResponseBody != nil {
		toSerialize["responseBody"] = o.ResponseBody
	}
	if o.ResponseSize != nil {
		toSerialize["responseSize"] = o.ResponseSize
	}
	if o.ResponseBodySizeLimitExceeded != nil {
		toSerialize["responseBodySizeLimitExceeded"] = o.ResponseBodySizeLimitExceeded
	}
	if o.ResponseHeaders != nil {
		toSerialize["responseHeaders"] = o.ResponseHeaders
	}
	if o.ResolvedIps != nil {
		toSerialize["resolvedIps"] = o.ResolvedIps
	}
	if o.HealthStatusCode != nil {
		toSerialize["healthStatusCode"] = o.HealthStatusCode
	}
	if o.HealthStatus != nil {
		toSerialize["healthStatus"] = o.HealthStatus
	}
	if o.ResponseMessage != nil {
		toSerialize["responseMessage"] = o.ResponseMessage
	}
	if o.PeerCertificateExpiryDate != nil {
		toSerialize["peerCertificateExpiryDate"] = o.PeerCertificateExpiryDate
	}
	if o.PeerCertificateDetails != nil {
		toSerialize["peerCertificateDetails"] = o.PeerCertificateDetails
	}
	if o.TotalTime != nil {
		toSerialize["totalTime"] = o.TotalTime
	}
	if o.HostNameResolutionTime != nil {
		toSerialize["hostNameResolutionTime"] = o.HostNameResolutionTime
	}
	if o.TcpConnectTime != nil {
		toSerialize["tcpConnectTime"] = o.TcpConnectTime
	}
	if o.TlsHandshakeTime != nil {
		toSerialize["tlsHandshakeTime"] = o.TlsHandshakeTime
	}
	if o.TimeToFirstByte != nil {
		toSerialize["timeToFirstByte"] = o.TimeToFirstByte
	}
	if o.RedirectionTime != nil {
		toSerialize["redirectionTime"] = o.RedirectionTime
	}
	if o.WaitingTime != nil {
		toSerialize["waitingTime"] = o.WaitingTime
	}
	if o.RedirectsCount != nil {
		toSerialize["redirectsCount"] = o.RedirectsCount
	}
	if o.FailureMessage != nil {
		toSerialize["failureMessage"] = o.FailureMessage
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorRequestExecutionResult struct {
	value *MonitorRequestExecutionResult
	isSet bool
}

func (v NullableMonitorRequestExecutionResult) Get() *MonitorRequestExecutionResult {
	return v.value
}

func (v *NullableMonitorRequestExecutionResult) Set(val *MonitorRequestExecutionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorRequestExecutionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorRequestExecutionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorRequestExecutionResult(val *MonitorRequestExecutionResult) *NullableMonitorRequestExecutionResult {
	return &NullableMonitorRequestExecutionResult{value: val, isSet: true}
}

func (v NullableMonitorRequestExecutionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorRequestExecutionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


