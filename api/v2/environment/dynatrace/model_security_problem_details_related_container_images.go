/*
 * Dynatrace Environment API
 *
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynatrace

import (
	"encoding/json"
)

// SecurityProblemDetailsRelatedContainerImages A list of related container images.
type SecurityProblemDetailsRelatedContainerImages struct {
	// A list of related container images.
	ContainerImages *[]RelatedContainerImage `json:"containerImages,omitempty"`
}

// NewSecurityProblemDetailsRelatedContainerImages instantiates a new SecurityProblemDetailsRelatedContainerImages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityProblemDetailsRelatedContainerImages() *SecurityProblemDetailsRelatedContainerImages {
	this := SecurityProblemDetailsRelatedContainerImages{}
	return &this
}

// NewSecurityProblemDetailsRelatedContainerImagesWithDefaults instantiates a new SecurityProblemDetailsRelatedContainerImages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityProblemDetailsRelatedContainerImagesWithDefaults() *SecurityProblemDetailsRelatedContainerImages {
	this := SecurityProblemDetailsRelatedContainerImages{}
	return &this
}

// GetContainerImages returns the ContainerImages field value if set, zero value otherwise.
func (o *SecurityProblemDetailsRelatedContainerImages) GetContainerImages() []RelatedContainerImage {
	if o == nil || o.ContainerImages == nil {
		var ret []RelatedContainerImage
		return ret
	}
	return *o.ContainerImages
}

// GetContainerImagesOk returns a tuple with the ContainerImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityProblemDetailsRelatedContainerImages) GetContainerImagesOk() (*[]RelatedContainerImage, bool) {
	if o == nil || o.ContainerImages == nil {
		return nil, false
	}
	return o.ContainerImages, true
}

// HasContainerImages returns a boolean if a field has been set.
func (o *SecurityProblemDetailsRelatedContainerImages) HasContainerImages() bool {
	if o != nil && o.ContainerImages != nil {
		return true
	}

	return false
}

// SetContainerImages gets a reference to the given []RelatedContainerImage and assigns it to the ContainerImages field.
func (o *SecurityProblemDetailsRelatedContainerImages) SetContainerImages(v []RelatedContainerImage) {
	o.ContainerImages = &v
}

func (o SecurityProblemDetailsRelatedContainerImages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerImages != nil {
		toSerialize["containerImages"] = o.ContainerImages
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityProblemDetailsRelatedContainerImages struct {
	value *SecurityProblemDetailsRelatedContainerImages
	isSet bool
}

func (v NullableSecurityProblemDetailsRelatedContainerImages) Get() *SecurityProblemDetailsRelatedContainerImages {
	return v.value
}

func (v *NullableSecurityProblemDetailsRelatedContainerImages) Set(val *SecurityProblemDetailsRelatedContainerImages) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityProblemDetailsRelatedContainerImages) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityProblemDetailsRelatedContainerImages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityProblemDetailsRelatedContainerImages(val *SecurityProblemDetailsRelatedContainerImages) *NullableSecurityProblemDetailsRelatedContainerImages {
	return &NullableSecurityProblemDetailsRelatedContainerImages{value: val, isSet: true}
}

func (v NullableSecurityProblemDetailsRelatedContainerImages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityProblemDetailsRelatedContainerImages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


