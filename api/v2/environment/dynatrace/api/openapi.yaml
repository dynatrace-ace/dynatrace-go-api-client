openapi: 3.0.1
info:
  description: "\nDocumentation of the Dynatrace Environment API v2. Resources here\
    \ generally supersede those in v1. Migration of resources from v1 is in progress.\
    \ \n\nIf you miss a resource, consider using the Dynatrace Environment API v1.\
    \ To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k)\
    \ .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview\
    \ may be changed in non-compatible ways, although we try to avoid this.\n* We\
    \ may add new enum constants without incrementing the API version; thus, clients\
    \ need to handle unknown enum constants gracefully."
  title: Dynatrace Environment API
  version: "2.0"
servers:
- url: '{protocol}://{name}/api/v2'
  variables:
    name:
      default: ""
      description: Dynatrace full environment name.
    protocol:
      default: https
      description: The protocol for accessing the API.
security:
- Api-Token: []
tags:
- description: Query and ingest metrics
  name: Metrics
- description: Manage problems and comments
  name: Problems
- description: Read audit logs
  name: Audit Logs
- description: Manage network zones
  name: Network zones
- description: Manage monitored entities
  name: Monitored entities
- description: Read and ingest logs
  name: Logs
- description: View information about your ActiveGates
  name: ActiveGates
- description: Manage ActiveGate auto-update settings.
  name: ActiveGates - Auto-update configuration
- description: Manage ActiveGate auto-update jobs.
  name: ActiveGates - Auto-update jobs
- description: Manage custom tags of monitored entities
  name: Monitored entities - Custom tags
- description: Manage SLOs
  name: Service-level objectives
- description: Analyze your deployed components
  name: Releases
- description: Manage security problems
  name: Security problems
- description: Manage Davis security advices
  name: Davis security advisor
- description: Manage Extensions 2.0 life cycle
  name: Extensions 2.0
- description: Manage Dynatrace API tokens
  name: Access Tokens - API tokens
- description: Manage settings objects
  name: Settings - Objects
- description: View settings schemas
  name: Settings - Schemas
- description: Rotate tenant tokens
  name: Access tokens - Tenant tokens
paths:
  /activeGates/{agId}/autoUpdate/validator:
    post:
      operationId: validateAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: JSON body of the request, containing auto update parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted auto-update configuration is valid.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/{agId}/autoUpdate`
        request.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates/{agId}/autoUpdate:
    get:
      operationId: getAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
    put:
      operationId: putAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: JSON body of the request, containing auto update parameters.
        required: true
      responses:
        "204":
          description: Success. The auto-update configuration have been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates/autoUpdate:
    get:
      operationId: getGlobalAutoUpdateConfigForTenant
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
          description: Success
      summary: Gets the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
    put:
      operationId: putGlobalAutoUpdateConfigForTenant
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Success. The global auto-update configuration have been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Puts the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates/autoUpdate/validator:
    post:
      operationId: validateGlobalAutoUpdateConfigForTenant
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: JSON body of the request, containing global auto update parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/autoUpdate` request.
      tags:
      - ActiveGates - Auto-update configuration
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates/updateJobs:
    get:
      description: The response includes ActiveGates that have both completed (successful
        and failed) jobs and jobs in progress.
      operationId: getAllUpdateJobList
      parameters:
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one day is used (`now-1d`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: If `true`, filters the resulting set of update jobs to the most
          recent update of each type.
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobsAll'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: List ActiveGates with update jobs
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
  /activeGates/{agId}/updateJobs/{jobId}:
    delete:
      operationId: deleteUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The update-job have been deleted. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Deletes the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
    get:
      operationId: getUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the parameters of the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
  /activeGates/{agId}/updateJobs:
    get:
      description: The job can update the ActiveGate to the specified version or the
        latest available one.
      operationId: getUpdateJobListByAgId
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one week is used (`now-1w`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: If `true`, filters the resulting set of update jobs to the most
          recent update of each type.
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Lists update jobs for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
    post:
      operationId: createUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: JSON body of the request, containing update-job parameters.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success. The update-job have been created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new update job for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates/{agId}/updateJobs/validator:
    post:
      operationId: validateUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: JSON body of the request, containing update-job parameters.
        required: true
      responses:
        "204":
          description: Validated. The submitted update-job is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Validates the payload for the `POST /activeGates/{agId}/updateJobs`
        request.
      tags:
      - ActiveGates - Auto-update jobs
      x-token-scopes:
      - '`activeGates.write` (Write ActiveGates)'
  /activeGates:
    get:
      description: The response includes all ActiveGates that are currently connected
        to the environment or have been connected during last 2 hours.
      operationId: getAllActiveGates
      parameters:
      - description: "Filters the resulting set of ActiveGates by the name of the\
          \ host it's running on. \n\n You can specify a partial name. In that case,\
          \ the `CONTAINS` operator is used."
        explode: true
        in: query
        name: hostname
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the OS type of the
          host it's running on.
        explode: true
        in: query
        name: osType
        required: false
        schema:
          enum:
          - LINUX
          - WINDOWS
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network address.\
          \ \n\n You can specify a partial address. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkAddress
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the Load Balancer\
          \ address. \n\n You can specify a partial address. In that case, the `CONTAINS`\
          \ operator is used."
        explode: true
        in: query
        name: loadBalancerAddress
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the ActiveGate type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network zone.\
          \ \n\n You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkZone
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the auto-update status.
        explode: true
        in: query
        name: updateStatus
        required: false
        schema:
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: versionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the version in `<major>.<minor>.<revision>` format (for example,\
          \ `1.195.0`) here."
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the actual state
          of auto-update.
        explode: true
        in: query
        name: autoUpdate
        required: false
        schema:
          enum:
          - DISABLED
          - ENABLED
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the group. \n\n\
          \ You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the communication
          status.
        explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters the resulting set of ActiveGates by the enabled modules.
        explode: true
        in: query
        name: enabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates by the disabled modules.
        explode: true
        in: query
        name: disabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates to those which are running
          in container (`true`) or not (`false`).
        explode: true
        in: query
        name: containerized
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Lists all available ActiveGates
      tags:
      - ActiveGates
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
  /activeGates/{agId}:
    get:
      operationId: getOneActiveGateById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGate'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      summary: Gets the details of the specified ActiveGate
      tags:
      - ActiveGates
      x-token-scopes:
      - '`activeGates.read` (Read ActiveGates)'
  /entityTypes:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: getEntityTypes
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of entity types in a single response payload. \n\n\
          The maximal allowed page size is 500. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityTypeList'
          description: Success
        "400":
          description: Failed. There are no more entity types to export.
      summary: Gets a list of properties for all entity types
      tags:
      - Monitored entities
      x-token-scopes:
      - '`entities.read` (Read entities)'
      x-supports-personal-access-token: true
  /entityTypes/{type}:
    get:
      operationId: getEntityType
      parameters:
      - description: The required entity type.
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: Success
        "400":
          description: Failed. The requested monitored entity type is not exportable
            or doesn't exist.
      summary: Gets a list of properties for the specified entity type
      tags:
      - Monitored entities
      x-token-scopes:
      - '`entities.read` (Read entities)'
      x-supports-personal-access-token: true
  /entities/custom:
    post:
      operationId: pushCustomDevice
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomDeviceCreation'
        description: The JSON body of the request. Contains parameters of a custom
          device.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomDeviceCreationResult'
          description: Success
        "204":
          description: Success
        "400":
          description: Failed. The input is invalid.
      summary: Creates or updates a custom device
      tags:
      - Monitored entities
      x-token-scopes:
      - '`entities.write` (Write entities)'
      x-supports-personal-access-token: true
  /entities:
    get:
      description: "Lists entities observed within the specified timeframe along with\
        \ their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type,\
        \ only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s)\
        \ \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb)\
        \ \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\
        \nYou can limit the output by using pagination: \n1. Specify the number of\
        \ results per page in the **pageSize** query parameter. \n2. Use the cursor\
        \ from the **nextPageKey** field of the previous response in the **nextPageKey**\
        \ query parameter to obtain subsequent pages."
      operationId: getEntities
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of entities. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Defines the scope of the query. Only entities matching the specified\
          \ criteria are included into response. \n\nYou must set one of these criteria:\
          \ \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"\
          id\")`. You can specify several IDs, separated by a comma (`entityId(\"\
          id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria.\
          \ Values are case-sensitive and the `EQUALS` operator is used unless otherwise\
          \ specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`), otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: `entityName(\"value\")`. By default this filters for\
          \ entities, whose name **contains** the given value and is **not** case\
          \ sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`:\
          \ changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes\
          \ the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide\
          \ multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"\
          value\"))`: takes any entity name criterion as an arguments and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET all entity\
          \ types](https://dt-url.net/dw03s7h) and check the **properties** field.\
          \ \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ The criterion takes an entity selector as an attribute. To fetch the list\
          \ of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\nThe field\
          \ is **required** when you're querying the first page of results."
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of three days is used (`now-3d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of entity properties included in the response.\
          \ The ID and the name of an entity are **always** included to the response.\
          \ \n\nTo add properties, list them with leading plus `+`. You can specify\
          \ several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`).\
          \ \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch\
          \ the list of properties available for your entity type. Fields from the\
          \ **properties** object must be specified in the `properties.FIELD` format\
          \ (for example, `properties.BITNESS`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the ordering of the entities returned. \n\nThis field\
          \ is **optional**, each field has a sign prefix (+/-), which corresponds\
          \ to sorting order ( + for ascending and - for descending). If no sign prefix\
          \ is set, then default ascending sorting order will be applied. \n\nCurrently\
          \ ordering is only available for the display name (for example `sort=name\
          \ or sort =+name for ascending, sort=-name for descending`)"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntitiesList'
          description: Success
      summary: Gets the information about monitored entities
      tags:
      - Monitored entities
      x-token-scopes:
      - '`entities.read` (Read entities)'
      x-supports-personal-access-token: true
  /entities/{entityId}:
    get:
      operationId: getEntity
      parameters:
      - description: The ID of the required entity.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of three days is used (`now-3d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of entity properties included in the response.\
          \ The ID and the name of an entity are **always** included to the response.\
          \ \n\nTo add properties, list them with leading plus `+`. You can specify\
          \ several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`).\
          \ \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch\
          \ the list of properties available for your entity type. Fields from the\
          \ **properties** object must be specified in the `properties.FIELD` format\
          \ (for example, `properties.BITNESS`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Entity'
          description: Success
      summary: Gets the properties of the specified monitored entity
      tags:
      - Monitored entities
      x-token-scopes:
      - '`entities.read` (Read entities)'
      x-supports-personal-access-token: true
  /logs/search:
    get:
      description: "Returns the first *X* records (specified in the **limit** query\
        \ parameter). Log records are sorted by the criteria specified in the **sort**\
        \ query parameter. \n\nIf the query is too large to be processed in a single\
        \ request, it is divided into slices. In that case the first response contains\
        \ the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey**\
        \ query parameter to obtain the second slice, which contains **nextSliceKey**\
        \ cursor for the third slice, and so on. \n\nResults can be distributed unevenly\
        \ between slices and some slices might be empty."
      operationId: getLogRecords
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The desired amount of log records. \n\nThe maximal allowed limit\
          \ is 1000. \n\nIf not set, 1000 is used."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The log search query. \n\nThe query must use the [Dynatrace\
          \ search query language](https://dt-url.net/pe03s6f). \n\nThe query has\
          \ a limit of 20 relations (logical operators between simple expressions\
          \ (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`)\
          \ in simple expressions)."
        explode: true
        in: query
        name: query
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "Defines the ordering of the log records.\n\nEach field has a\
          \ sign prefix (+/-) for sorting order. If no sign prefix is set, then the\
          \ `+` option will be applied. \n\nCurrently, ordering is available only\
          \ for the timestamp (+timestamp for the oldest records first, or -timestamp\
          \ for the newest records first)."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -timestamp
          pattern: ^[+-]?[a-z]+$
          type: string
        style: form
      - description: "The cursor for the next slice of results. You can find it in\
          \ the **nextSliceKey** field of the previous response. \n\nThe first slice\
          \ is always returned if you don't specify this parameter. \n\nIf this parameter\
          \ is set, all other query parameters are ignored."
        explode: true
        in: query
        name: nextSliceKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/LogRecordsList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Reads log records | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-feature-flag: LOGS_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`logs.read` (Read logs)'
  /logs/aggregate:
    get:
      description: "Returns the aggregated number of occurrences of log values divided\
        \ into time slots. \n\nIt is possible that the timeframe covered by results\
        \ exceeds the specified timeframe. In that case the request returns fewer\
        \ time slots than specified in the **timeBuckets** query parameter."
      operationId: getLogHistogramData
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The log search query. \n\nThe query must use the [Dynatrace\
          \ search query language](https://dt-url.net/pe03s6f). \n\nThe query has\
          \ a limit of 20 relations (logical operators between simple expressions\
          \ (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`)\
          \ in simple expressions)."
        explode: true
        in: query
        name: query
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "The number of time slots in the result. \n\nThe query timeframe\
          \ is divided equally into the specified number of slots. \n\nThe minimum\
          \ length of a slot is 1 ms. \n\nIf not set, 1 is used."
        explode: true
        in: query
        name: timeBuckets
        required: false
        schema:
          default: 1
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The maximum number of values in each group. \n\nYou can get\
          \ up to 100 values per group. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: maxGroupValues
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The groupings to be included in the response. \n\nYou can specify\
          \ several groups in the following format: `groupBy=status&groupBy=log.source`.\
          \ \n\nIf not set, all possible groups are returned. You can use this option\
          \ to check for possible grouping values."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AggregatedLog'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Gets aggregated log records | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-feature-flag: LOGS_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`logs.read` (Read logs)'
  /metrics:
    get:
      description: "You can narrow down the output by selecting metrics in the **metricSelector**\
        \ field. \n\nYou can additionally limit the output by using pagination: \n\
        \n1. Specify the number of results per page in the **pageSize** query parameter.\
        \ \n\n2. Then use the cursor from the **nextPageKey** field of the response\
        \ in the **nextPageKey** query parameter to obtain subsequent pages. All other\
        \ query parameters must be omitted."
      operationId: allMetrics
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of primary entities in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\
          \n If a value higher than 500 is used, only 500 results per page are returned."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Selects metrics for the query by their keys.\n\n You can specify\
          \ multiple metric keys separated by commas (for example, `metrickey1,metrickey2`).\
          \ To select multiple metrics belonging to the same parent, list the last\
          \ part of the required metric keys in parentheses, separated by commas,\
          \ while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle`\
          \ and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`.\
          \ \n\nYou can select a full set of related metrics by using a trailing asterisk\
          \ (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics\
          \ and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set\
          \ additional transformation operators, separated by a colon (`:`). See [Metrics\
          \ selector transformations](https://dt-url.net/metricSelector) in Dynatrace\
          \ Documentation for additional information on available result transformations.\n\
          \n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations\
          \ are supported by this endpoint.\n\n The length of the string is limited\
          \ to 5,000 characters.\n\n To find metrics based on a search term, rather\
          \ than metricId, use the **text** query parameter instead of this one."
        explode: true
        in: query
        name: metricSelector
        required: false
        schema:
          type: string
        style: form
      - description: Metric registry search term. Only show metrics that contain the
          term in their key, display name, or description. Use the `metricSelector`
          parameter instead of this one to select a complete metric hierarchy instead
          of doing a text-based search.
        explode: true
        in: query
        name: text
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of metric properties included in the response.\
          \ \n\n`metricId` is **always** included in the result. The following additional\
          \ properties are available: \n\n* `displayName`: The name of the metric\
          \ in the user interface. Enabled by default. \n* `description`: A short\
          \ description of the metric. Enabled by default. \n* `unit`: The unit of\
          \ the metric. Enabled by default. \n* `tags`: The tags of the metric. \n\
          + `dduBillable`:  An indicator whether the usage of metric consumes [Davis\
          \ data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC\
          \ milliseconds) when the metrics has been created. \n* `lastWritten`:  The\
          \ timestamp (UTC milliseconds) when metric data points have been written\
          \ for the last time. \n* `aggregationTypes`: The list of allowed aggregations\
          \ for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector)\
          \ is applied. \n* `defaultAggregation`: The default aggregation of the metric.\
          \ It is used when no aggregation is specified or the `:auto` transformation\
          \ is set. \n* `dimensionDefinitions`: The fine metric division (for example,\
          \ process group and process ID for some process-related metric). \n* `transformations`:\
          \ A list of [transformations](https://dt-url.net/metricSelector) that can\
          \ be applied to the metric.\n* `entityType`: A list of entity types supported\
          \ by the metric.\n\nTo add properties, list them with leading plus `+`.\
          \ To exclude default properties, list them with leading minus `-`. \n\n\
          To specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\
          \nIf you specify just one property, the response contains the metric key\
          \ and the specified property. To return metric keys only, specify `metricId`\
          \ here."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulted set of metrics to those that have data\
          \ points within the specified timeframe. \n\nYou can use one of the following\
          \ formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format\
          \ of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC\
          \ is used. You can use a space character instead of the `T`. Seconds and\
          \ fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
        explode: true
        in: query
        name: writtenSince
        required: false
        schema:
          type: string
        style: form
      - description: "The metadata scope of the query. Only metrics with specified\
          \ properties are included to the response. \n\nYou can set one or more of\
          \ the following criteria. Values are case-sensitive and the `EQUALS` operator\
          \ is used. If several values are specified, the **OR** logic applies. \n\
          \n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n\nTo\
          \ set several criteria, separate them with a comma (`,`). For example, `tags(\"\
          feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria\
          \ are included in response. \n\nFor example, to list metrics that have the\
          \ tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte**,\
          \ use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"\
          MegaByte\"),tags(\"cloud\")`."
        explode: true
        in: query
        name: metadataSelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
          description: Success
        "400":
          description: Syntax or validation error. **metricSelector** or **fields**
            have syntactic or semantic errors.
        "404":
          description: Not found. The requested resource is not found or the query
            is incorrect.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      summary: Lists all available metrics
      tags:
      - Metrics
      x-token-scopes:
      - '`metrics.read` (Read metrics)'
  /metrics/{metricId}:
    delete:
      description: Deletion cannot be undone! You can't delete a metric if it has
        data points ingested within the last two hours.
      operationId: delete
      parameters:
      - explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Success. The deletion of the metric has been triggered.
        "400":
          description: Failed. The metric has been written within the last two hours.
        "404":
          description: Failed. The metric cannot be found or the key cannot be parsed.
        "500":
          description: Failed. The deletion of metric dimensions failed.
      summary: Deletes the specified metric
      tags:
      - Metrics
      x-token-scopes:
      - '`metrics.write` (Write metrics)'
    get:
      operationId: metric
      parameters:
      - description: "The key of the required metric. \n\nYou can set additional transformation\
          \ operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector)\
          \ in Dynatrace Documentation for additional information on available result\
          \ transformations.\n\n The length of the string is limited to 5,000 characters."
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
          description: Success
        "404":
          description: Not found. The requested resource is not found or the query
            is incorrect.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      summary: Gets the descriptor of the specified metric
      tags:
      - Metrics
      x-token-scopes:
      - '`metrics.read` (Read metrics)'
  /metrics/query:
    get:
      description: "The following limits apply: \n* The amount of aggregated data\
        \ points in the response is limited to 1,000 \n* The amount of series in the\
        \ response is limited to 1,000 \n   * The amount of data points per series\
        \ is limited to 10,080 (minutes of one week) \n   * The overall amount of\
        \ data points is limited to 100,000 \n"
      operationId: query
      parameters:
      - description: "Selects metrics for the query by their keys. You can select\
          \ up to 10 metrics for one query.\n\n You can specify multiple metric keys\
          \ separated by commas (for example, `metrickey1,metrickey2`). To select\
          \ multiple metrics belonging to the same parent, list the last part of the\
          \ required metric keys in parentheses, separated by commas, while keeping\
          \ the common part untouched. For example, to list the `builtin:host.cpu.idle`\
          \ and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`.\
          \ \n\nYou can set additional transformation operators, separated by a colon\
          \ (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector)\
          \ in Dynatrace Documentation for additional information on available result\
          \ transformations.\n\n If the metric key contains whitespaces, they must\
          \ be escaped with a tilde (`~`). For example, to query the metric with the\
          \ key of **ext:selfmonitoring.jmx.Agents of Type 'APACHE'** you must specify\
          \ this selector: \n\n`ext:selfmonitoring.jmx.Agents~ of~ Type~ 'APACHE'`\n\
          \n The length of the string is limited to 5,000 characters."
        explode: true
        in: query
        name: metricSelector
        required: false
        schema:
          type: string
        style: form
      - description: "The desired resolution of data points. \n\nYou can use one of\
          \ the following options: \n* One aggregated data point of each series. Set\
          \ `Inf` to use this option. \n* The desired amount of data points. This\
          \ is the default option. This is a reference number of points, which is\
          \ not necessarily equal to the number of the returned data points. \n* The\
          \ desired timespan between data points. This is a reference timespan, which\
          \ is not necessarily equal to the returned timespan. To use this option,\
          \ specify the unit of the timespan. \n\nValid units for the timespan are:\
          \ \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`:\
          \ months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\
          \nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m`\
          \ \n* Get data points which are 3 weeks apart: `resolution=3w`"
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the entity scope of the query. Only data points delivered\
          \ by matched entities are included in response. \n\nYou must set one of\
          \ these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity\
          \ ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma\
          \ (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the\
          \ following criteria. Values are case-sensitive and the `EQUALS` operator\
          \ is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags\
          \ in `[context]key:value`, `key:value`, and `value` formats are detected\
          \ and parsed automatically. Any colons (`:`) that are part of the key or\
          \ value must be escaped with a backslash(`\\`), otherwise, it will be interpreted\
          \ as the separator between the key and the value. All tag values are case-sensitive.\
          \ \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"\
          value\")`\n* Entity name: `entityName(\"value\")`. By default this filters\
          \ for entities, whose name **contains** the given value and is **not** case\
          \ sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`:\
          \ changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes\
          \ the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide\
          \ multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"\
          value\"))`: takes any entity name criterion as an arguments and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET all entity\
          \ types](https://dt-url.net/dw03s7h) and check the **properties** field.\
          \ \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ The criterion takes an entity selector as an attribute. To fetch the list\
          \ of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\nUse the [`GET\
          \ /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list\
          \ of possible entity types for your metric. \n\nTo set a universal scope\
          \ matching all entities, omit this parameter."
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
          description: Success
        "400":
          description: Syntax or validation error. From and to parameters, scope or
            resolution are incorrect individually or in their combined meaning.
        "403":
          description: Failed. The request is valid but the response is too big to
            process. Split your query into several queries with limited scopes.
        "404":
          description: Not found. The requested resource is not found or the query
            is incorrect.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      summary: Gets data points of the specified metrics
      tags:
      - Metrics
      x-token-scopes:
      - '`metrics.read` (Read metrics)'
  /networkZones:
    get:
      operationId: getAllNetworkZones
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneList'
          description: Success
      summary: Lists all existing network zones | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.read` (Read network zones)'
      x-supports-personal-access-token: true
  /networkZones/{id}:
    delete:
      description: "You can only delete an empty network zone (a zone that no ActiveGate\
        \ or OneAgent is using). \n\n If the network zone is used as an alternative\
        \ zone for any OneAgent, it will be automatically removed from the list of\
        \ possible alternatives."
      operationId: deleteNetworkZone
      parameters:
      - description: The ID of the network zone to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See error message in the response body for details.
      summary: Deletes the specified network zone | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.write` (Write network zones)'
      x-supports-personal-access-token: true
    get:
      operationId: getSingleNetworkZone
      parameters:
      - description: The ID of the required network zone.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      summary: Gets parameters of the specified network zone | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.read` (Read network zones)'
      x-supports-personal-access-token: true
    put:
      description: "If the network zone with the specified ID does not exist, a new\
        \ network zone is created. \n\n The ID is not case sensitive. Dynatrace stores\
        \ the ID in lowercase."
      operationId: createOrUpdateNetworkZone
      parameters:
      - description: "The ID of the network zone to be updated. \n\n If you set the\
          \ ID in the body as well, it must match this ID. \n\n The ID is not case\
          \ sensitive. Dynatrace stores the ID in lowercase."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        description: The JSON body of the request. Contains parameters of the network
          zone.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new network zone has been created. The response
            body contains the ID of the new network zone.
        "204":
          description: Success. The network zone has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.write` (Write network zones)'
      x-supports-personal-access-token: true
  /networkZoneSettings:
    get:
      operationId: getNetworkZoneSettings
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneSettings'
          description: Success
      summary: Gets the global configuration of network zones | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.read` (Read network zones)'
      x-supports-personal-access-token: true
    put:
      operationId: updateNetworkZoneSettings
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetworkZoneSettings'
        description: The JSON body of the request. Contains global configuration of
          network zones.
        required: true
      responses:
        "204":
          description: Success. The global network zones configuration has been updated.
            Response doesn't have a body.
      summary: Updates the global configuration of network zones | maturity=EARLY_ADOPTER
      tags:
      - Network zones
      x-feature-flag: NETWORK_ZONE_REST_API_RESOURCE
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`networkZones.write` (Write network zones)'
      x-supports-personal-access-token: true
  /tags:
    delete:
      operationId: deleteTags
      parameters:
      - description: The tag to be deleted.
        explode: true
        in: query
        name: key
        required: true
        schema:
          minLength: 1
          type: string
        style: form
      - description: The tag to be deleted.
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: The tag to be deleted.
        explode: true
        in: query
        name: deleteAllWithKey
        required: false
        schema:
          type: boolean
        style: form
      - description: "Specifies the entities where you want to delete tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add\
          \ one or several of the following criteria. Values are case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"\
          value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats\
          \ are detected and parsed automatically. Any colons (`:`) that are part\
          \ of the key or value must be escaped with a backslash(`\\`), otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"\
          value\")`. By default this filters for entities, whose name **contains**\
          \ the given value and is **not** case sensitive. \n\tThe following modifications\
          \ are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`.\
          \ \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`.\
          \ \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS`\
          \ operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes\
          \ any entity name criterion as an arguments and makes the value case-sensitive.\n\
          * Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First\
          \ seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format\
          \ from the **from**/**to** parameters. \n\tThe following operators are available:\n\
          \t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than\
          \ the specified time\n\t* `gte`: later than or at the specified time\n\t\
          * `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"\
          value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available\
          \ attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()`\
          \ and `toRelationships.<relationshipName>()`. The criterion takes an entity\
          \ selector as an attribute. To fetch the list of available relationships,\
          \ execute the [GET all entity types](https://dt-url.net/dw03s7h) and check\
          \ the **fromRelationships** and **toRelationships** fields.\n* Negation:\
          \ `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor\
          \ more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DeletedEntityTags'
          description: Success
      summary: Deletes the specified tag from the specified entities
      tags:
      - Monitored entities - Custom tags
      x-token-scopes:
      - '`entities.write` (Write entities)'
      x-supports-personal-access-token: true
    get:
      description: Automatically applied tags and imported tags are not included.
      operationId: getTags
      parameters:
      - description: "Specifies the entities where you want to read tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add\
          \ one or several of the following criteria. Values are case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"\
          value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats\
          \ are detected and parsed automatically. Any colons (`:`) that are part\
          \ of the key or value must be escaped with a backslash(`\\`), otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"\
          value\")`. By default this filters for entities, whose name **contains**\
          \ the given value and is **not** case sensitive. \n\tThe following modifications\
          \ are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`.\
          \ \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`.\
          \ \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS`\
          \ operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes\
          \ any entity name criterion as an arguments and makes the value case-sensitive.\n\
          * Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First\
          \ seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format\
          \ from the **from**/**to** parameters. \n\tThe following operators are available:\n\
          \t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than\
          \ the specified time\n\t* `gte`: later than or at the specified time\n\t\
          * `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"\
          value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available\
          \ attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()`\
          \ and `toRelationships.<relationshipName>()`. The criterion takes an entity\
          \ selector as an attribute. To fetch the list of available relationships,\
          \ execute the [GET all entity types](https://dt-url.net/dw03s7h) and check\
          \ the **fromRelationships** and **toRelationships** fields.\n* Negation:\
          \ `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor\
          \ more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomEntityTags'
          description: Success
      summary: Gets a list of custom tags applied to the specified entities
      tags:
      - Monitored entities - Custom tags
      x-token-scopes:
      - '`entities.read` (Read entities)'
      x-supports-personal-access-token: true
    post:
      description: All existing tags remain unaffected.
      operationId: postTags
      parameters:
      - description: "Specifies the entities where you want to update tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add\
          \ one or several of the following criteria. Values are case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"\
          value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats\
          \ are detected and parsed automatically. Any colons (`:`) that are part\
          \ of the key or value must be escaped with a backslash(`\\`), otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"\
          value\")`. By default this filters for entities, whose name **contains**\
          \ the given value and is **not** case sensitive. \n\tThe following modifications\
          \ are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`.\
          \ \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`.\
          \ \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS`\
          \ operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes\
          \ any entity name criterion as an arguments and makes the value case-sensitive.\n\
          * Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First\
          \ seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format\
          \ from the **from**/**to** parameters. \n\tThe following operators are available:\n\
          \t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than\
          \ the specified time\n\t* `gte`: later than or at the specified time\n\t\
          * `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"\
          value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available\
          \ attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()`\
          \ and `toRelationships.<relationshipName>()`. The criterion takes an entity\
          \ selector as an attribute. To fetch the list of available relationships,\
          \ execute the [GET all entity types](https://dt-url.net/dw03s7h) and check\
          \ the **fromRelationships** and **toRelationships** fields.\n* Negation:\
          \ `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor\
          \ more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddEntityTags'
        description: The JSON body of the request. Contains tags to be added to the
          matching entities.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AddedEntityTags'
          description: Success
      summary: Adds custom tags to the specified entities
      tags:
      - Monitored entities - Custom tags
      x-token-scopes:
      - '`entities.write` (Write entities)'
      x-supports-personal-access-token: true
  /apiTokens:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: listApiTokens
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of API tokens in a single response payload. \n\n\
          The maximal allowed page size is 10000 and the minimal allowed page size\
          \ is 100. \n\nIf not set, 200 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          maximum: 10000
          type: integer
        style: form
      - description: "Filters the resulting sets of tokens. Only tokens matching the\
          \ specified criteria are included into response. \n\nYou can set one or\
          \ more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user\
          \ that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`.\
          \ Set to `true` to include only personal access tokens or to `false` to\
          \ include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\"\
          )`. If several values are specified, the **OR** logic applies. \n\nTo set\
          \ multiple criteria, separate them with commas (`,`). Only results matching\
          \ **all** criteria are included into response."
        explode: true
        in: query
        name: apiTokenSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the fields to be included in the response.\n\nThe\
          \ following fields are included by default: \n\n* `id` \n* `name` \n* `enabled`\
          \ \n* `owner` \n* `creationDate` \n\nTo remove fields from the response,\
          \ specify them with the minus (`-`) operator as a comma-separated list (for\
          \ example, `-creationDate,-owner`). \n\nYou can include additional fields:\
          \ \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n\
          * `lastUsedIpAddress` \n* `scopes` \n\nTo add fields to the response, specify\
          \ them with the plus (`+`) operator as a comma-separated list (for example,\
          \ `+expirationDate,+scopes`). You can combine adding and removing of fields\
          \ (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define\
          \ the desired set of fields in the response. Specify the required fields\
          \ as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`).\
          \ The ID is always included in the response. \n\nThe **fields** string must\
          \ be URL-encoded."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Filters tokens based on the last usage time. \nThe start of\
          \ the requested timeframe. \n\nYou can use one of the following formats:\
          \ \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\n"
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "Filters tokens based on the last usage time. \nThe end of the\
          \ requested timeframe. \n\nYou can use one of the following formats: \n\
          * Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The sort order of the token list. \n\nYou can sort by the following\
          \ properties with a sign prefix for the sort order: \n\n * `name`: token\
          \ name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never\
          \ used tokens first `-` most recently used tokens first) \n * `creationDate`\
          \ (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate`\
          \ (`+` tokens that expire soon first `-` unlimited tokens first) \n\nIf\
          \ no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation\
          \ date with newest first."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -creationDate
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiTokenList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Lists all available API tokens
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - '`apiTokens.read` (Read API tokens)'
      x-supports-personal-access-token: true
    post:
      description: The newly created token will be owned by the same user who owns
        the token used for authentication of the call.
      operationId: createApiToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenCreate'
        description: The JSON body of the request. Contains parameters of the new
          API token.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiTokenCreated'
          description: Success. The token has been created. The body of the response
            contains the token secret.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Creates a new API token
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - '`apiTokens.write` (Write API tokens)'
      x-supports-personal-access-token: true
  /apiTokens/{id}:
    delete:
      operationId: deleteApiToken
      parameters:
      - description: "The ID of the token to be deleted. \n\nYou can specify either\
          \ the ID or the secret of the token. \n\nYou can't delete the token you're\
          \ using for authentication of the request."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. You can't delete the token you're using for authentication
            of the request.
        "404":
          description: Failed. The requested resource doesn't exist.
      summary: Deletes an API token
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - '`apiTokens.write` (Write API tokens)'
      x-supports-personal-access-token: true
    get:
      description: The token secret is **not** exposed.
      operationId: getApiToken
      parameters:
      - description: The ID of the token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          description: Failed. The requested resource doesn't exist.
      summary: Gets API token metadata by token ID
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - '`apiTokens.read` (Read API tokens)'
      x-supports-personal-access-token: true
    put:
      operationId: updateApiToken
      parameters:
      - description: "The ID of the token to be updated. \n\n You can't disable the\
          \ token you're using for authentication of the request."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the API token.
        required: true
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Updates an API token
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - '`apiTokens.write` (Write API tokens)'
      x-supports-personal-access-token: true
  /apiTokens/lookup:
    post:
      operationId: lookupApiToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenSecret'
        description: The JSON body of the request. Contains the required token.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: Success
        "404":
          description: Failed. The requested resource doesn't exist.
      summary: Gets API token metadata by token secret
      tags:
      - Access Tokens - API tokens
      x-token-scopes:
      - Any Api-Token scope
  /auditlogs:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: getLogs
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of log entries in a single response payload. \n\n\
          The maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filters the audit log. You can use the following criteria: \n\
          * User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n\
          * Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n\
          * Category of a logged operation: `category(\"value\")`. The `EQUALS` operator\
          \ applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies.\
          \ \n\nFor each criterion, you can specify multiple alternatives with comma-separated\
          \ values. In this case, the OR logic applies. For example, `eventType(\"\
          CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\
          \nYou can specify multiple comma-separated criteria, such as `eventType(\"\
          CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all**\
          \ criteria are included in response. \n\nSpecify the value of a criterion\
          \ as a quoted string. The following special characters must be escaped with\
          \ a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The sorting of audit log entries: \n* `timestamp`: Oldest first.\
          \ \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting\
          \ is applied."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -timestamp
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: Success
      summary: Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER
      tags:
      - Audit Logs
      x-feature-flag: AUDIT_LOG_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`auditLogs.read` (Read audit logs)'
  /auditlogs/{id}:
    get:
      operationId: getLog
      parameters:
      - description: The ID of the required log entry.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 19
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuditLogEntry'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Invalid ID format.
      summary: Gets the specified entry of the audit log | maturity=EARLY_ADOPTER
      tags:
      - Audit Logs
      x-feature-flag: AUDIT_LOG_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`auditLogs.read` (Read audit logs)'
  /davis/securityAdvices:
    get:
      description: You can narrow down the output by providing the management zone
        and pagination. If you specify a management zone, only problems originating
        from that zone are included to the request.
      operationId: getAdviceForSecurityProblems
      parameters:
      - description: "To specify management zones, use one of the options listed below.\
          \ For each option you can specify multiple comma-separated values. If several\
          \ values are specified, the **OR** logic applies. All values are case-sensitive\
          \ and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"\
          ). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify\
          \ several comma-separated criteria (for example, `names(\"myMz\"),ids(\"\
          9130632296508575249\")`)."
        explode: true
        in: query
        name: managementZoneFilter
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of security advices in a single response payload.\
          \ \n\nThe maximal allowed page size is 50. \n\nIf not set, 5 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DavisSecurityAdviceList'
          description: Success
      summary: Provides advice for security problems. | maturity=EARLY_ADOPTER
      tags:
      - Davis security advisor
      x-feature-flag: ENABLE_CASP_DAVIS_SECURITY_ADVISOR_REST_API
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`securityProblems.read` (Read security problems)'
      x-supports-personal-access-token: true
  /securityProblems/{id}/mute:
    post:
      operationId: muteSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Mute'
        description: The JSON body of the request. Contains the muting information.
      responses:
        "200":
          description: Success. The security problem has been muted.
        "204":
          description: Not executed. The security problem is already muted.
      summary: Mutes the specified security problem. | maturity=EARLY_ADOPTER
      tags:
      - Security problems
      x-feature-flag: CASP_SECURITY_PROBLEM_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`securityProblems.write` (Write security problems)'
      x-supports-personal-access-token: true
  /securityProblems/{id}/unmute:
    post:
      operationId: unmuteSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Unmute'
        description: The JSON body of the request. Contains the un-muting information.
      responses:
        "200":
          description: Success. The security problem has been un-muted.
        "204":
          description: Not executed. The security problem is already un-muted.
      summary: Un-mutes the specified security problem. | maturity=EARLY_ADOPTER
      tags:
      - Security problems
      x-feature-flag: CASP_SECURITY_PROBLEM_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`securityProblems.write` (Write security problems)'
      x-supports-personal-access-token: true
  /securityProblems:
    get:
      operationId: getSecurityProblems
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of security problems in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Defines the scope of the query. Only security problems matching\
          \ the specified criteria are included in the response.\n\nYou can add one\
          \ or more of the following criteria. Values are *not* case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified.\n\n* Status:\
          \ `status(\"value\")`. Find the possible values in the description of the\
          \ **status** field of the response. If not set, all security problems are\
          \ returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or\
          \ `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis Risk Level.\
          \ Find the possible values in the description of the **riskLevel** field\
          \ of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis\
          \ minimum Risk Score. The `GREATER THAN OR EQUAL TO` operator is used. Specify\
          \ a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"\
          5.5\")`. The Davis maximum Risk Score. The `LESS THAN` operator is used.\
          \ Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"\
          value\")`. The Base Risk Level from the CVSS. Find the possible values in\
          \ the description of the **riskLevel** field of the response.\n* Minimum\
          \ base risk score: `minBaseRiskScore(\"5.5\")`. The Base minimum Risk Score\
          \ from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify\
          \ a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"\
          5.5\")`. The Base maximum Risk Score from the CVSS. The `LESS THAN` operator\
          \ is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability\
          \ ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS`\
          \ operator is used.\n* External vulnerability ID: `externalVulnerabilityId(\"\
          id-1\",\"id-2\")`. Case insensitive `EQUALS` operator is used.\n* CVE ID:\
          \ `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\"\
          )` Possible values are `EXPOSED`, `SENSITIVE`, and `EXPLOIT`.\n* Related\
          \ host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace\
          \ entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\",\
          \ \"value-2\")`. Values are case-sensitive.\n* Related host name contains:\
          \ `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\
          * Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\"\
          , \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes\
          \ cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\"\
          )`. Values are case-sensitive.\n* Related Kubernetes cluster name contains:\
          \ `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator\
          \ is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"\
          value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related\
          \ Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\"\
          , \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload\
          \ name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The\
          \ `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"\
          mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\"\
          ,\"name-2\")`. Values are case-sensitive.\n* Affected process group ID:\
          \ `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs\
          \ here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"\
          name-2\")`. Values are case-sensitive.\n* Affected process group name contains:\
          \ `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\
          * Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"\
          componentId-2\")`. Specify component IDs here.\n* Vulnerable component name:\
          \ `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n\
          * Vulnerable component name contains: `vulnerableComponentNameContains(\"\
          name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"\
          hostTag-1\")`. The `CONTAINS` operator is used.\n* Process group tags: `pgTags(\"\
          pgTag-1\")`. The `CONTAINS` operator is used.\n* Process group instance\
          \ tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used.\n* Tags:\
          \ `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks\
          \ hosts, process groups, and process group instances at the same time.\n\
          * Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator\
          \ is used.\n* Technology: `technology(\"technology-1\",\"technology-2\"\
          )`. Find the possible values in the description of the **technology** field\
          \ of the response. The `EQUALS` operator is used.\n\nRisk score and risk\
          \ category are mutually exclusive (cannot be used at the same time).\n\n\
          To set several criteria, separate them with a comma (`,`). Only results\
          \ matching (**all** criteria are included in the response.\n\nSpecify the\
          \ value of a criterion as a quoted string. The following special characters\
          \ must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote\
          \ `\"`"
        explode: true
        in: query
        name: securityProblemSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies a field for sorting the security problem list.\n\n\
          You can sort by the following properties with a sign prefix for the sorting\
          \ order. \n\n* `status`: The security problem status (`+` open first or\
          \ `-` resolved first) \n* `muted`: The security problem mute state (`+`\
          \ muted first or `-` unmuted first) \n* `technology`: The security problem\
          \ technology (`+` ascending or `-` descending) \n* `firstSeenTimestamp`:\
          \ The timestamp of the first occurrence of the security problem (`+` new\
          \ problems first or `-` old problems first) \n* `securityProblemId`: The\
          \ auto-generated ID of the security problem (`+` lower number first or `-`\
          \ higher number first) \n* `externalVulnerabilityId`: The ID of the external\
          \ vulnerability (`+` lower number first or `-` higher number first) \n*\
          \ `displayId`: The display ID (`+` lower number first or `-` higher number\
          \ first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower\
          \ score first or `-` higher score first) \n* `riskAssessment.riskLevel`:\
          \ The Davis security level (`+` lower level first or `-` higher level first)\
          \ \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet\
          \ (`+` unexposed first or `-` exposed first) \n* `riskAssessment.dataAssets`:\
          \ Whether data assets are affected (`+` not affected first or `-` affected\
          \ first) \n\nIf no prefix is set, `+` is used."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of problem properties to be added to the response.\n\
          \n`securityProblemId`, `displayId`, `status`, `muted`, `externalVulnerabilityId`,\
          \ `vulnerabilityType`, `title`, `packageName`, `url`, `technology`, `firstSeenTimestamp`,\
          \ `lastUpdateTimestamp`, `cveIds` are **always** included in the result.\
          \ To add more properties, list them with a leading plus `+`. Available fields\
          \ are listed below. You can specify several properties, separated by a comma\
          \ (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`:\
          \ A risk assessment of the security problem.\n* `managementZones`: The management\
          \ zone where the security problem occurred.\n"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of thirty days is used (`now-30d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemList'
          description: Success
      summary: Lists all security problems | maturity=EARLY_ADOPTER
      tags:
      - Security problems
      x-feature-flag: CASP_SECURITY_PROBLEM_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`securityProblems.read` (Read security problems)'
      x-supports-personal-access-token: true
  /securityProblems/{id}:
    get:
      operationId: getSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines the list of problem properties to be added to the response.\n\
          \n`securityProblemId`, `displayId`, `status`, `muted`, `externalVulnerabilityId`,\
          \ `vulnerabilityType`, `title`, `packageName`, `url`, `technology`, `firstSeenTimestamp`,\
          \ `lastUpdateTimestamp`, `cveIds` are **always** included in the result.\
          \ To add more properties, list them with a leading plus `+`. Available fields\
          \ are listed below. You can specify several properties, separated by a comma\
          \ (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`:\
          \ A risk assessment of the security problem.\n* `managementZones`: The management\
          \ zone where the security problem occurred.\n* `description`: The description\
          \ of the vulnerability.\n* `events`: A list of events of the security problem.\n\
          * `vulnerableComponents`: A list of vulnerable components of the security\
          \ problem. \n* `affectedEntities`: A list of affected entities of the security\
          \ problem. \n* `exposedEntities`: A list of exposed entities of the security\
          \ problem. \n* `reachableDataAssets`: A list of data assets reachable by\
          \ affected entities of the security problem. \n* `relatedEntities`: A list\
          \ of related entities of the security problem. \n* `relatedContainerImages`:\
          \ A list of related container images of the security problem. \n"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemDetails'
          description: Success
      summary: Gets the specified security problem | maturity=EARLY_ADOPTER
      tags:
      - Security problems
      x-feature-flag: CASP_SECURITY_PROBLEM_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`securityProblems.read` (Read security problems)'
      x-supports-personal-access-token: true
  /extensions/schemas:
    get:
      operationId: listSchemas
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemasList'
          description: Success
      summary: Lists all the extension 2.0 schemas versions available in your environment
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
  /extensions/{extensionName}/monitoringConfigurations:
    get:
      operationId: extensionMonitoringConfigurations
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: Filters the resulting set of configurations by extension 2.0
          version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of configurations by the active state.
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionMonitoringConfigurationsList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Lists all the monitoring configurations of the specified extension
        2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.read` (Read extension monitoring configurations)'
    post:
      operationId: createMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/MonitoringConfigurationDto'
              type: array
        description: JSON body of the request, containing monitoring configuration
          parameters.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/MonitoringConfigurationResponse'
                type: array
          description: Success
        "207":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/MonitoringConfigurationResponse'
                  - $ref: '#/components/schemas/ErrorEnvelope'
                  type: string
                type: array
          description: Multi-Status, if not all requests resulted in the same status
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Creates new monitoring configuration for the specified extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.write` (Write extension monitoring configurations)'
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}:
    delete:
      operationId: removeMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Deletes the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.write` (Write extension monitoring configurations)'
    get:
      operationId: monitoringConfigurationDetails
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionMonitoringConfiguration'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the details of the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.read` (Read extension monitoring configurations)'
    put:
      operationId: updateMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MonitoringConfigurationUpdateDto'
        description: JSON body of the request, containing monitoring configuration
          parameters.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitoringConfigurationResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Updates the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.write` (Write extension monitoring configurations)'
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}/events:
    get:
      operationId: getExtensionMonitoringConfigurationEvents
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEventsList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the list of the events linked to specific monitoring configuration
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.read` (Read extension monitoring configurations)'
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}/status:
    get:
      operationId: getExtensionMonitoringConfigurationStatus
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionStatusDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the most recent status of the execution of given monitoring configuration
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.read` (Read extension monitoring configurations)'
  /extensions/schemas/{schemaVersion}:
    get:
      operationId: listSchemaFiles
      parameters:
      - description: The version of the schema.
        explode: false
        in: path
        name: schemaVersion
        required: true
        schema:
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaFiles'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Lists all the files available for the specified extension 2.0 schema
        version
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
  /extensions/schemas/{schemaVersion}/{fileName}:
    get:
      operationId: getSchemaFile
      parameters:
      - description: The version of the schema.
        explode: false
        in: path
        name: schemaVersion
        required: true
        schema:
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        style: simple
      - description: The name of the schema file.
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JsonNode'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the extension 2.0 schema file in the specified version
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
  /extensions:
    get:
      operationId: listExtensions
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters the resulting set of extensions 2.0 by name. You can
          specify a partial name. In that case, the CONTAINS operator is used.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionList'
          description: Success
      summary: Lists all the extensions 2.0 available in your environment
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
    post:
      operationId: uploadExtension
      parameters:
      - description: Only run validation but do not persist the extension even if
          validation was successful.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
          description: The extension is valid
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success. The extension 2.0 has been uploaded.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input file is invalid.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Upload not possible yet, please try again in a few seconds.
      summary: Uploads or verifies a new extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.write` (Write extensions)'
  /extensions/{extensionName}:
    get:
      operationId: listExtensionVersions
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Lists all versions of the extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
  /extensions/{extensionName}/{extensionVersion}:
    delete:
      operationId: removeExtension
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success. The extension 2.0 version has been deleted.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Deletes the specified version of the extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.write` (Write extensions)'
    get:
      operationId: extensionDetails
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        style: simple
      - description: "Accept header. Specifies part of the extension 2.0 that will\
          \ be returned: \n* application/json; charset=utf-8 - returns extension 2.0\
          \ metadata in JSON \n* application/octet-stream - returns extension 2.0\
          \ zip package stored on the server."
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "406":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not acceptable
      summary: Gets details of the specified version of the extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensions.read` (Read extensions)'
  /extensions/{extensionName}/{extensionVersion}/schema:
    get:
      operationId: extensionConfigurationSchema
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaDefinitionRestDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the configuration schema of the specified version of the extension
        2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionConfigurations.read` (Read extension monitoring configurations)'
  /extensions/{extensionName}/environmentConfiguration:
    delete:
      operationId: deleteEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration deactivated.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Deactivates the environment configuration of the specified extension
        2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionEnvironment.write` (Write extension environment configurations)'
    get:
      operationId: getActiveEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets the active environment configuration version of the specified
        extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionEnvironment.read` (Read extension environment configurations)'
    post:
      operationId: activateExtensionEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
        description: The version of the requested environment configuration.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Activates the environment configuration from the specified version
        of the extension 2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionEnvironment.write` (Write extension environment configurations)'
    put:
      operationId: updateExtensionEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
        description: The version of the requested environment configuration.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Updates the active environment configuration version of the extension
        2.0
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionEnvironment.write` (Write extension environment configurations)'
  /extensions/{extensionName}/environmentConfiguration/events:
    get:
      operationId: getEnvironmentConfigurationEvents
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEventsList'
          description: List of the latest extension environment configuration events
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: List of the latest extension environment configuration events
      tags:
      - Extensions 2.0
      x-token-scopes:
      - '`extensionEnvironment.read` (Read extension environment configurations)'
  /problems/{problemId}/close:
    post:
      operationId: closeProblem
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ClosingComment'
        description: The JSON body of the request. Contains the closing comment on
          the problem.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemCloseResult'
          description: Success
        "204":
          description: The problem is closed already the request hasn't been executed.
      summary: Closes the specified problem and adds a closing comment on it | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.write` (Write problems)'
      x-supports-personal-access-token: true
  /problems/{problemId}/comments/{commentId}:
    delete:
      operationId: deleteComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The comment has been deleted.
      summary: Deletes the specified comment from a problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.write` (Write problems)'
      x-supports-personal-access-token: true
    get:
      operationId: getComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
      summary: Gets the specified comment on a problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.read` (Read problems)'
      x-supports-personal-access-token: true
    put:
      operationId: updateComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CommentRequestDtoImpl'
        description: The JSON body of the request. Contains the updated comment.
      responses:
        "204":
          description: Success. The comment has been updated.
      summary: Updates the specified comment on a problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.write` (Write problems)'
      x-supports-personal-access-token: true
  /problems/{problemId}/comments:
    get:
      operationId: getComments
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters except the optional **fields** parameter.\
          \ \n"
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of comments in a single response payload. \n\nThe\
          \ maximal allowed page size is 500. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CommentsList'
          description: Success
      summary: Gets all comments on the specified problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.read` (Read problems)'
      x-supports-personal-access-token: true
    post:
      operationId: createComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CommentRequestDtoImpl'
        description: The JSON body of the request. Contains the comment to be added.
      responses:
        "201":
          description: Success. The comment has been added.
      summary: Adds a new comment on the specified problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.write` (Write problems)'
      x-supports-personal-access-token: true
  /problems:
    get:
      operationId: getProblems
      parameters:
      - description: "A list of additional problem properties you can add to the response.\
          \ \n\nThe following properties are available (all other properties are always\
          \ included and you can't remove them from the response): \n\n* `evidenceDetails`:\
          \ The details of the root cause.\n* `impactAnalysis`: The impact analysis\
          \ of the problem on other entities/users.\n* `recentComments`: A list of\
          \ the most recent comments to the problem.\n\nTo add properties, specify\
          \ them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\
          \n The field is valid only for the current page of results. You must set\
          \ it for each page you're requesting."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters except the optional **fields** parameter.\
          \ \n"
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of problems in a single response payload. \n\nThe\
          \ maximal allowed page size is 500. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the scope of the query. Only problems matching the specified\
          \ criteria are included into response. \n\nYou can add one or several of\
          \ the criteria listed below. For each criterion you can specify multiple\
          \ comma-separated values, unless stated otherwise. If several values are\
          \ specified, the **OR** logic applies. All values must be quoted. \n* Status:\
          \ `status(\"open\")` or `status(\"closed\")`. You can specify only one status.\
          \ \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the\
          \ possible values in the description of the **severityLevel** field of the\
          \ response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find\
          \ the possible values in the description of the **impactLevel** field of\
          \ the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\"\
          )`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`.\
          \ \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`.\
          \ \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected\
          \ entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected\
          \ entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem\
          \ ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"\
          id-1\", \"id-2\")`. \n* Alerting profile name: `problemFilterNames(\"value-1\"\
          ,\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\"\
          )`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected\
          \ and parsed automatically. If a value-only tag has a colon (`:`) in it,\
          \ you must escape the colon with a backslash(`\\`). Otherwise, the tag will\
          \ be parsed as a `key:value tag`. All tag values are case-sensitive.\n*\
          \ Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under\
          \ maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false)\
          \ all problems created during maintenance mode.\n* Text search: `text(\"\
          value\")`. Text search on the following fields: problem title, event titles,\
          \ displayId and the id of affected and impacted entities. The text search\
          \ is case insensitive, partial matching and based on a relevance score.\
          \ Therefore the `relevance` sort option should be used to get the most relevant\
          \ problems first. The special characters `~` and `\"` need to be escaped\
          \ using a `~` (e.g. double quote search `text(\"~\"\")`). \n\nTo set several\
          \ criteria, separate them with a comma (`,`). Only results matching **all**\
          \ criteria are included in the response. \n\n"
        explode: true
        in: query
        name: problemSelector
        required: false
        schema:
          type: string
        style: form
      - description: "The entity scope of the query. You must set one of these criteria:\
          \ \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"\
          id\")`. You can specify several IDs, separated by a comma (`entityId(\"\
          id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria.\
          \ Values are case-sensitive and the `EQUALS` operator is used unless otherwise\
          \ specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`), otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: `entityName(\"value\")`. By default this filters for\
          \ entities, whose name **contains** the given value and is **not** case\
          \ sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`:\
          \ changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes\
          \ the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide\
          \ multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"\
          value\"))`: takes any entity name criterion as an arguments and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET all entity\
          \ types](https://dt-url.net/dw03s7h) and check the **properties** field.\
          \ \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ The criterion takes an entity selector as an attribute. To fetch the list\
          \ of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h)\
          \ and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in response. \n\n\
          The length of the string is limited to 10,000 characters. \n\nThe maximum\
          \ number of entities that may be selected is limited to 10000.\n\n"
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies a set of comma-separated (`,`) fields for sorting\
          \ in the problem list.\n\nYou can sort by the following properties with\
          \ a sign prefix for the sorting order. \n\n * `status`: problem status (`+`\
          \ open problems first or `-` closed problems first)\n * `startTime`: problem\
          \ start time (`+` old problems first or `-` new problems first) \n * `relevance`:\
          \ problem relevance (`+` least relevant problems first or `-` most relevant\
          \ problems first) - can be used only in combination with text search \n\n\
          If no prefix is set, `+` is used. \n\nYou can specify several levels of\
          \ sorting. For example, `+status,-startTime` sorts problems by status, open\
          \ problems first. Within the status, problems are sorted by start time,\
          \ oldest first."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problems'
          description: Success
      summary: Lists problems observed within the specified timeframe | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.read` (Read problems)'
      x-supports-personal-access-token: true
  /problems/{problemId}:
    get:
      operationId: getProblem
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: "A list of additional problem properties you can add to the response.\
          \ \n\nThe following properties are available (all other properties are always\
          \ included and you can't remove them from the response): \n\n* `evidenceDetails`:\
          \ The details of the root cause.\n* `impactAnalysis`: The impact analysis\
          \ of the problem on other entities/users.\n* `recentComments`: A list of\
          \ the most recent comments to the problem.\n\nTo add properties, specify\
          \ them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Success
      summary: Gets the properties of the specified problem | maturity=EARLY_ADOPTER
      tags:
      - Problems
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`problems.read` (Read problems)'
      x-supports-personal-access-token: true
  /logs/ingest:
    post:
      description: "Ingested logs are stored in the indexed log storage. \n\nThis\
        \ endpoint requires an Environment or Cluster ActiveGate with the **Log Analytics\
        \ Collector** module enabled."
      operationId: storeLog
      requestBody:
        content:
          application/json; charset=utf-8:
            examples:
              JSON array representing two events.:
                description: JSON array representing two events.
                summary: JSON format
                value:
                - content: example log content 1
                  log.source: /var/log/syslog
                - content: example log content 2
            schema:
              $ref: '#/components/schemas/LogMessageJson'
          text/plain; charset=utf-8:
            examples:
              Plain text message representing a single log event:
                description: Plain text message representing a single log event
                summary: Plain text format
                value: example log content
            schema:
              $ref: '#/components/schemas/LogMessagePlain'
        description: "The body of the request. Contains one or more log events to\
          \ be ingested. \n\nThe endpoint accepts one of the following payload types,\
          \ defined by the **Accept** header: \n\n* `text/plain`: supports only one\
          \ log event. \n* `application/json`: supports multiple log events in a single\
          \ payload."
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SuccessEnvelope'
          description: Success. Some log events were limited.
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist. This may happen
            when no Environment or Cluster ActiveGate is available with Log Analytics
            Collector module enabled.
      summary: Pushes log records to Dynatrace | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`logs.ingest` (Ingest logs)'
      x-active-gate-module: LOG_ANALYTICS_COLLECTOR
  /metrics/ingest:
    post:
      operationId: ingest
      requestBody:
        content:
          text/plain; charset=utf-8:
            example: server.cpu.temperature,cpu.id=0 42
            schema:
              type: string
        description: Data points, provided in the [line protocol](https://dt-url.net/5d63ic1).
          Each line represents a single data point.
        required: true
      responses:
        "202":
          description: The provided metric data points are accepted and will be processed
            in the background.
        "400":
          description: Some data points are invalid. Valid data points are accepted
            and will be processed in the background.
      summary: Pushes metric data points to Dynatrace
      tags:
      - Metrics
      x-token-scopes:
      - '`metrics.ingest` (Ingest metrics)'
      x-active-gate-module: METRICS_INGEST
  /releases:
    get:
      operationId: getReleases
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of Releases in a single response payload. \n\nThe\
          \ maximal allowed page size is 1000. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Get your Releases (`false`) or a set of demo Releases (`true`).
        explode: true
        in: query
        name: demo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Defines the scope of the query. Only Releases matching the provided\
          \ criteria are included in the response.\n\nYou can add one or several of\
          \ the criteria listed below.\n* Monitoring state: monitoringState(\"Active\"\
          ) or monitoringState(\"Inactive\"). You can specify only one monitoring\
          \ state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"\
          ). You can specify only one health state.\n* Name: entityName(\"name\").\
          \ Filters for all releases that contain the given value in their name. The\
          \ filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product:\
          \ releasesProduct(\"product\"). Filters for all releases that contain the\
          \ given value in their product. The filter is case-insensitive.\n* Stage:\
          \ releasesStage(\"stage\"). Filters for all releases that contain the given\
          \ value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"\
          version\"). Filters for all releases that contain the given value in their\
          \ version. The filter is case-insensitive.\n\nTo set several criteria, separate\
          \ them with comma (,). Only results matching all criteria are included in\
          \ the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"\
          ),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"\
          1.0.7\")."
        explode: true
        in: query
        name: releasesSelector
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: |-
          Specifies the field that is used for sorting the releases list.
          The field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:
          * 'product': Product name
          * 'name': Release name
          * 'stage': Stage name
          * 'version': Version
          * 'instances': Instances
          * 'traffic': Traffic

          If not set, the ascending order sorting for name is applied.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Releases'
          description: Success
      summary: Returns all releases | maturity=EARLY_ADOPTER
      tags:
      - Releases
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`releases.read` (Read releases)'
      x-supports-personal-access-token: true
  /settings/objects:
    get:
      operationId: getSettingsObjects
      parameters:
      - description: "A list of comma-separated schema IDs to which the requested\
          \ objects belong. \n\nTo load the first page, when the **nextPageKey** is\
          \ not set, this parameter is required. "
        explode: true
        in: query
        name: schemaIds
        required: false
        schema:
          type: string
        style: form
      - description: "A list of comma-separated scopes, that the requested objects\
          \ target. \n\nThe selection only matches objects directly targeting the\
          \ specified scopes. For example, `environment` will not match objects that\
          \ target a host within environment. \n\nTo load the first page, when the\
          \ **nextPageKey** is not set, this parameter is required. "
        explode: true
        in: query
        name: scopes
        required: false
        schema:
          type: string
        style: form
      - description: "A list of fields to be included to the response. The provided\
          \ set of fields replaces the default set. \n\n Specify the required top-level\
          \ fields, separated by commas (for example, `objectId,value`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: objectId,value
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of settings objects in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ObjectsList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema or scope is not found.
      summary: Lists available settings objects | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
      x-supports-personal-access-token: true
    post:
      description: You can upload several objects at once. In that case each object
        returns its own response code. Check the response body for details.
      operationId: postSettingsObjects
      parameters:
      - description: If `true`, the request runs only validation of the submitted
          settings objects, without saving them.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/SettingsObjectCreate'
              type: array
        description: The JSON body of the request. Contains the settings objects.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Success
        "207":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: 'Multi-status: different objects in the payload resulted in
            different statuses.'
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. Conflicting resource.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. Schema validation failed.
      summary: Creates a new settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
      x-supports-personal-access-token: true
  /settings/objects/{objectId}:
    delete:
      operationId: deleteSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: "The update token of the object. You can use it to detect simultaneous\
          \ modifications by different users. \n\nIt is generated upon retrieval (GET\
          \ requests). If set on update (PUT request) or deletion, the update/deletion\
          \ will be allowed only if there wasn't any change between the retrieval\
          \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
          \ the current value or deletes it without any checks."
        explode: true
        in: query
        name: updateToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Conflicting resource.
      summary: Deletes the specified settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
      x-supports-personal-access-token: true
    get:
      operationId: getSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObject'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: No object available for the given objectId
      summary: Gets the specified settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
      x-supports-personal-access-token: true
    put:
      operationId: putSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SettingsObjectUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the settings object.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Conflicting resource.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Schema validation failed.
      summary: Updates an existing settings object | maturity=EARLY_ADOPTER
      tags:
      - Settings - Objects
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.write` (Write settings)'
      x-supports-personal-access-token: true
  /settings/schemas:
    get:
      operationId: getAvailableSchemaDefinitions
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaList'
          description: Success
      summary: Lists available settings schemas | maturity=EARLY_ADOPTER
      tags:
      - Settings - Schemas
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
      x-supports-personal-access-token: true
  /settings/schemas/{schemaId}:
    get:
      operationId: getSchemaDefinition
      parameters:
      - description: The ID of the required schema.
        explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      - description: "The version of the required schema. \n\n If not set, the most\
          \ recent version is returned."
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaDefinitionRestDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema doesn't exist.
      summary: Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER
      tags:
      - Settings - Schemas
      x-feature-flag: SETTINGS_PUBLIC_REST_API_V2
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`settings.read` (Read settings)'
      x-supports-personal-access-token: true
  /slo:
    get:
      description: "By default the values are calculated for the SLO's own timeframe.\
        \ You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to\
        \ `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
      operationId: getSlo
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of SLOs in a single response payload. \n\nThe maximal\
          \ allowed page size is 10000. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The scope of the query. Only SLOs matching the provided criteria\
          \ are included in the response. \n\nYou can add one or several of the criteria\
          \ listed below.\n* ID: id(\"id\"). Filters for an SLO with the given ID.\n\
          * Name: name(\"name\"). Filters for an SLO with the given name. The filter\
          \ is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"\
          UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"\
          ). Filters for all SLOs that contain the given value in their name or description.\
          \ The filter is case-insensitive.\n\nTo set several criteria, separate them\
          \ with comma (,). Only results matching all criteria are included in the\
          \ response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"\
          ), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"\
          Description\"),healthState(\"HEALTHY\")."
        explode: true
        in: query
        name: sloSelector
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "The sorting of SLO entries: \n* `name`: Names in ascending order.\
          \ \n* `-name`: Names in descending order. \n\nIf not set, the ascending\
          \ order is used."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          type: string
        style: form
      - description: "The timeframe to calculate the SLO values: \n\n* `CURRENT`:\
          \ SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to**\
          \ parameters. \n\nIf not set, the `CURRENT` value is used."
        explode: true
        in: query
        name: timeFrame
        required: false
        schema:
          default: CURRENT
          enum:
          - CURRENT
          - GTF
          type: string
        style: form
      - description: Only SLOs on the given page are included in the response. The
          first page has the index '1'.
        explode: true
        in: query
        name: pageIdx
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Get your SLOs (`false`) or a set of demo SLOs (`true`).
        explode: true
        in: query
        name: demo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Get your SLOs without them being evaluated (`false`) or with
          evaluations (`true`).
        explode: true
        in: query
        name: evaluate
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SLOs'
          description: Success. The response contains the parameters and calculated
            values of the requested SLO.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      summary: Lists all available SLOs along with calculated values
      tags:
      - Service-level objectives
      x-token-scopes:
      - '`slo.read` (Read SLO)'
      x-supports-personal-access-token: true
    post:
      operationId: createSlo
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SloCreate'
        description: The JSON body of the request. Contains the parameters of the
          new SLO.
        required: true
      responses:
        "201":
          description: Success. The new SLO has been created. Response doesn't have
            a body. The **location** response header contains the ID of the new SLO.
          headers:
            location:
              description: The location of the new resource created by this request.
              explode: false
              style: simple
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Conflicting resource.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      summary: Creates a new SLO
      tags:
      - Service-level objectives
      x-token-scopes:
      - '`slo.write` (Write SLO)'
      x-supports-personal-access-token: true
  /slo/{id}:
    delete:
      operationId: deleteSlo
      parameters:
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The SLO has been deleted. Response doesn't have a
            body.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Conflicting resource.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      summary: Deletes an SLO
      tags:
      - Service-level objectives
      x-token-scopes:
      - '`slo.read` (Read SLO)'
      - '`slo.write` (Write SLO)'
      x-supports-personal-access-token: true
    get:
      description: If **from** and **to** parameters are provided, the SLO is calculated
        for that timeframe; otherwise the SLO's own timeframe is used.
      operationId: getSloById
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The timeframe to calculate the SLO values: \n\n* `CURRENT`:\
          \ SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to**\
          \ parameters. \n\nIf not set, the `CURRENT` value is used."
        explode: true
        in: query
        name: timeFrame
        required: false
        schema:
          default: CURRENT
          enum:
          - CURRENT
          - GTF
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SLO'
          description: Success. The response contains the parameters and calculated
            values of the requested SLO.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      summary: Gets parameters and the calculated value of an SLO
      tags:
      - Service-level objectives
      x-token-scopes:
      - '`slo.read` (Read SLO)'
      x-supports-personal-access-token: true
    put:
      operationId: updateSloById
      parameters:
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SloCreate'
        description: The JSON body of the request. Contains the updated parameters
          of the SLO.
        required: true
      responses:
        "200":
          description: Success
        "404":
          description: Failed. The requested resource doesn't exist.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      summary: Updates an existing SLO
      tags:
      - Service-level objectives
      x-token-scopes:
      - '`slo.write` (Write SLO)'
      x-supports-personal-access-token: true
  /synthetic/execution/{monitorId}/{resultType}:
    get:
      operationId: getExecutionResult
      parameters:
      - description: Identifier of the HTTP monitor for which last execution result
          is returned.
        explode: false
        in: path
        name: monitorId
        required: true
        schema:
          type: string
        style: simple
      - description: Defines the result type of the last HTTP monitor's execution.
        explode: false
        in: path
        name: resultType
        required: true
        schema:
          enum:
          - SUCCESS
          - FAILED
          type: string
        style: simple
      - description: Filters the results to those executed by specified Synthetic
          location. Specify the ID of the location.
        explode: true
        in: query
        name: locationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitorExecutionResults'
          description: Success. The response contains detailed data.
      summary: Returns detailed information about last HTTP monitor execution. | maturity=EARLY_ADOPTER
      tags:
      - Synthetic - HTTP monitor execution
      x-feature-flag: SYNTHETIC_TENANT_PROTO_VERSION_3
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - '`DataExport` (Access problem and event feed, metrics, and topology)'
      - '`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations,
        and nodes)'
      - '`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)'
  /synthetic/locations/status:
    get:
      operationId: getLocationsStatus
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticPublicLocationsStatus'
          description: Success. The response contains the public locations status.
      summary: Checks the status of public synthetic locations
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.read` (Read synthetic locations)'
    put:
      operationId: updateLocationsStatus
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticPublicLocationsStatus'
        description: The new status of public synthetic locations.
      responses:
        "204":
          description: Success. Locations status has been updated.
        "409":
          description: Conflict. Public locations couldn't be disabled because there
            are monitors assigned to them.
      summary: Changes the status of public synthetic locations
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.write` (Write synthetic locations)'
  /synthetic/locations:
    get:
      operationId: getLocations
      parameters:
      - description: Filters the resulting set of locations to those which are hosted
          on a specific cloud platform.
        explode: true
        in: query
        name: cloudPlatform
        required: false
        schema:
          enum:
          - AWS
          - AZURE
          - ALIBABA
          - GOOGLE_CLOUD
          - OTHER
          type: string
        style: form
      - description: Filters the resulting set of locations to those of a specific
          type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocations'
          description: Success
      summary: Lists all synthetic locations (both public and private) available for
        your environment
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.read` (Read synthetic locations)'
    post:
      operationId: addLocation
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PrivateSyntheticLocation'
        description: The JSON body of the request. Contains parameters of the new
          private synthetic location.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocationIdsDto'
          description: Success. The private location has been created. The response
            contains the ID of the new location.
      summary: Creates a new private synthetic location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.write` (Write synthetic locations)'
  /synthetic/locations/{locationId}:
    delete:
      operationId: removeLocation
      parameters:
      - description: The Dynatrace entity ID of the private synthetic location to
          be deleted.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The location has been deleted. Response doesn't have
            a body.
      summary: Deletes the specified private synthetic location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.write` (Write synthetic locations)'
    get:
      operationId: getLocation
      parameters:
      - description: The Dynatrace entity ID of the required location.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocation'
          description: Success. The response contains parameters of the synthetic
            location.
      summary: Gets properties of the specified location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.read` (Read synthetic locations)'
    put:
      description: For public locations you can only change the location status.
      operationId: updateLocation
      parameters:
      - description: The Dynatrace entity ID of the synthetic location to be updated.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticLocationUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the location.
      responses:
        "204":
          description: Success. The location has been updated. Response doesn't have
            a body.
      summary: Updates the specified synthetic location
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.write` (Write synthetic locations)'
  /synthetic/nodes/{nodeId}:
    get:
      operationId: getNode
      parameters:
      - description: The ID of the required synthetic node.
        explode: false
        in: path
        name: nodeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Node'
          description: Success
      summary: Lists properties of the specified synthetic node
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.read` (Read synthetic locations)'
  /synthetic/nodes:
    get:
      operationId: getNodes
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Nodes'
          description: Success
      summary: Lists all synthetic nodes available in your environment
      tags:
      - Synthetic - Locations and nodes
      x-token-scopes:
      - '`syntheticLocations.read` (Read synthetic locations)'
  /tenantTokenRotation/cancel:
    post:
      description: To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)
        in Dynatrace Documentation.
      operationId: cancelRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. Rotation process has been cancelled. The current tenant
            token remains valid.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. There is no ongoing rotation process.
      summary: Cancels tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - '`tenantTokenRotation.write` (Tenant token rotation)'
  /tenantTokenRotation/finish:
    post:
      description: To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)
        in Dynatrace Documentation.
      operationId: finishRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. The rotation process is completed. The **active**
            field of the response contains the new tenant token.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: No ongoing rotation process.
      summary: Finishes tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - '`tenantTokenRotation.write` (Tenant token rotation)'
  /tenantTokenRotation/start:
    post:
      description: To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)
        in Dynatrace Documentation.
      operationId: startRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. The new tenant token is created and will replace the
            old one. The **active** field of the response contains the new tenant
            token.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Another rotation process is already in progress.
      summary: Starts tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - '`tenantTokenRotation.write` (Tenant token rotation)'
components:
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
  schemas:
    ConstraintViolation:
      description: A list of constraint violations
      example:
        path: path
        location: location
        parameterLocation: PATH
        message: message
      properties:
        parameterLocation:
          enum:
          - PATH
          - PAYLOAD_BODY
          - QUERY
          type: string
        location:
          type: string
        message:
          type: string
        path:
          type: string
      type: object
    Error:
      example:
        constraintViolations:
        - path: path
          location: location
          parameterLocation: PATH
          message: message
        - path: path
          location: location
          parameterLocation: PATH
          message: message
        code: 6
        message: message
      properties:
        constraintViolations:
          description: A list of constraint violations
          items:
            $ref: '#/components/schemas/ConstraintViolation'
          type: array
        message:
          description: The error message
          type: string
        code:
          description: The HTTP status code
          format: int32
          type: integer
      type: object
    ErrorEnvelope:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    ActiveGateAutoUpdateConfig:
      description: Configuration of the ActiveGate auto-updates.
      example:
        effectiveSetting: ENABLED
        setting: INHERITED
      properties:
        setting:
          description: "The state of the ActiveGate auto-update: enabled, disabled,\
            \ or inherited. \n\nIf set to `INHERITED`, the setting is inherited from\
            \ the global configuration set on the environment or Managed cluster level."
          enum:
          - DISABLED
          - ENABLED
          - INHERITED
          example: INHERITED
          type: string
        effectiveSetting:
          description: "The actual state of the ActiveGate auto-update. \n\nApplicable\
            \ only if the **setting** parameter is set to `INHERITED`. In that case,\
            \ the value is taken from the parent setting. Otherwise, it's just a duplicate\
            \ of the **setting** value."
          enum:
          - ENABLED
          - DISABLED
          example: ENABLED
          readOnly: true
          type: string
      readOnly: true
      required:
      - setting
      type: object
    ActiveGateGlobalAutoUpdateConfig:
      description: Global configuration of ActiveGates auto-update.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        globalSetting: ENABLED
      properties:
        globalSetting:
          description: "The state of auto-updates for all ActiveGates connected to\
            \ the environment or Managed cluster. \n\nThis setting is inherited by\
            \ all ActiveGates that have the `INHERITED` setting."
          enum:
          - ENABLED
          - DISABLED
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
      required:
      - globalSetting
      type: object
    ConfigurationMetadata:
      description: Metadata useful for debugging
      example:
        currentConfigurationVersions:
        - 1.0.4
        - "1.23"
        configurationVersions:
        - 4
        - 2
        clusterVersion: 1.192.1
      properties:
        configurationVersions:
          description: A sorted list of the version numbers of the configuration.
          example:
          - 4
          - 2
          items:
            format: int64
            type: integer
          type: array
        currentConfigurationVersions:
          description: A sorted list of version numbers of the configuration.
          example:
          - 1.0.4
          - "1.23"
          items:
            type: string
          type: array
        clusterVersion:
          description: Dynatrace version.
          example: 1.192.1
          type: string
      readOnly: true
      type: object
    UpdateJob:
      description: Configuration of the ActiveGate update job.
      example:
        duration: 3608000
        jobId: -3524498778810258605
        cancelable: false
        environments:
        - environments
        - environments
        jobState: SUCCEED
        startVersion: 1.185.0.20200201-120000
        agType: ENVIRONMENT
        error: error
        updateMethod: AUTOMATIC
        updateType: ACTIVE_GATE
        timestamp: 1582031917814
        targetVersion: 1.190.0.20200301-130000
      properties:
        jobState:
          description: The status of the update job.
          enum:
          - FAILED
          - IN_PROGRESS
          - PENDING
          - ROLLBACK
          - SCHEDULED
          - SKIPPED
          - SUCCEED
          example: SUCCEED
          readOnly: true
          type: string
        updateMethod:
          description: The method of updating the ActiveGate or its component.
          enum:
          - AUTOMATIC
          - MANUAL_INSTALLATION
          - ON_DEMAND
          example: AUTOMATIC
          readOnly: true
          type: string
        updateType:
          description: The component to be updated.
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          example: ACTIVE_GATE
          readOnly: true
          type: string
        agType:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        startVersion:
          description: The initial version of the ActiveGate.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        cancelable:
          description: The job can (`true`) or can't (`false`) be cancelled at the
            moment.
          example: false
          readOnly: true
          type: boolean
        jobId:
          description: The ID of the update job.
          example: -3524498778810258605
          readOnly: true
          type: string
        timestamp:
          description: "The timestamp of the update job completion. \n\n The `null`\
            \ value means the job is still running."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        duration:
          description: The duration of the update, in milliseconds.
          example: 3608000
          format: int64
          readOnly: true
          type: integer
        error:
          description: The information about update error.
          readOnly: true
          type: string
        targetVersion:
          description: "The target version of the update. \n\nSpecify the version\
            \ in the `<major>.<minor>.<revision>.<timestamp>` format. \n\nTo update\
            \ to the latest available version, use the `latest` value."
          example: 1.190.0.20200301-130000
          type: string
      required:
      - targetVersion
      type: object
    UpdateJobList:
      description: A list of update jobs of the ActiveGate.
      example:
        updateJobs:
        - duration: 3608000
          jobId: -3524498778810258605
          cancelable: false
          environments:
          - environments
          - environments
          jobState: SUCCEED
          startVersion: 1.185.0.20200201-120000
          agType: ENVIRONMENT
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 1582031917814
          targetVersion: 1.190.0.20200301-130000
        - duration: 3608000
          jobId: -3524498778810258605
          cancelable: false
          environments:
          - environments
          - environments
          jobState: SUCCEED
          startVersion: 1.185.0.20200201-120000
          agType: ENVIRONMENT
          error: error
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
          timestamp: 1582031917814
          targetVersion: 1.190.0.20200301-130000
        agId: 0x3efdd092
      properties:
        agId:
          description: The ID of the ActiveGate.
          example: 0x3efdd092
          readOnly: true
          type: string
        updateJobs:
          description: A list of update jobs of the ActiveGate.
          items:
            $ref: '#/components/schemas/UpdateJob'
          readOnly: true
          type: array
      type: object
    UpdateJobsAll:
      description: A list of ActiveGates with update jobs.
      example:
        allUpdateJobs:
        - updateJobs:
          - duration: 3608000
            jobId: -3524498778810258605
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 1582031917814
            targetVersion: 1.190.0.20200301-130000
          - duration: 3608000
            jobId: -3524498778810258605
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 1582031917814
            targetVersion: 1.190.0.20200301-130000
          agId: 0x3efdd092
        - updateJobs:
          - duration: 3608000
            jobId: -3524498778810258605
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 1582031917814
            targetVersion: 1.190.0.20200301-130000
          - duration: 3608000
            jobId: -3524498778810258605
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
            timestamp: 1582031917814
            targetVersion: 1.190.0.20200301-130000
          agId: 0x3efdd092
      properties:
        allUpdateJobs:
          description: A list of ActiveGates with update jobs.
          items:
            $ref: '#/components/schemas/UpdateJobList'
          readOnly: true
          type: array
      type: object
    ActiveGate:
      description: Parameters of the ActiveGate.
      example:
        environments:
        - environments
        - environments
        mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
        loadBalancerAddresses:
        - loadBalancerAddresses
        - loadBalancerAddresses
        type: ENVIRONMENT
        version: 1.185.0.20200201-120000
        networkZone: exampleNetworkZone
        modules:
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        hostname: exampleHostname
        autoUpdateSettings:
          effectiveSetting: ENABLED
          setting: INHERITED
        containerized: true
        osType: WINDOWS
        offlineSince: 1582031917814
        id: 0x3efdd091
        networkAddresses:
        - networkAddresses
        - networkAddresses
        autoUpdateStatus: OUTDATED
        group: default
      properties:
        id:
          description: The ID of the ActiveGate.
          example: 0x3efdd091
          readOnly: true
          type: string
        networkAddresses:
          description: A list of network addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        loadBalancerAddresses:
          description: A list of Load Balancer addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        osType:
          description: The OS type that the ActiveGate is running on.
          enum:
          - LINUX
          - WINDOWS
          example: WINDOWS
          readOnly: true
          type: string
        autoUpdateStatus:
          description: The current status of auto-updates of the ActiveGate.
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          example: OUTDATED
          readOnly: true
          type: string
        offlineSince:
          description: "The timestamp since when the ActiveGate is offline. \n\n The\
            \ `null` value means the ActiveGate is online."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        version:
          description: The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>`
            format.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
        type:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        hostname:
          description: The name of the host the ActiveGate is running on.
          example: exampleHostname
          readOnly: true
          type: string
        mainEnvironment:
          description: The ID of the main environment for a multi-environment ActiveGate.
          example: d1bf4a7e-666b-43af-9f45-718g98372e2f
          readOnly: true
          type: string
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        autoUpdateSettings:
          $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        networkZone:
          description: The network zone of the ActiveGate.
          example: exampleNetworkZone
          readOnly: true
          type: string
        group:
          description: The group of the ActiveGate.
          example: default
          readOnly: true
          type: string
        modules:
          description: A list of modules of the ActiveGate.
          items:
            $ref: '#/components/schemas/ActiveGateModule'
          readOnly: true
          type: array
        containerized:
          description: ActiveGate is deployed in container (`true`) or not (`false`).
          readOnly: true
          type: boolean
      type: object
    ActiveGateList:
      description: A list of ActiveGates.
      example:
        activeGates:
        - environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          version: 1.185.0.20200201-120000
          networkZone: exampleNetworkZone
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
        - environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          version: 1.185.0.20200201-120000
          networkZone: exampleNetworkZone
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
      properties:
        activeGates:
          description: A list of ActiveGates.
          items:
            $ref: '#/components/schemas/ActiveGate'
          readOnly: true
          type: array
      type: object
    ActiveGateModule:
      description: Information about ActiveGate module
      example:
        misconfigured: true
        attributes:
          key: attributes
        type: KUBERNETES
        version: version
        enabled: true
      properties:
        misconfigured:
          description: The module is misconfigured (`true`) or not (`false`).
          readOnly: true
          type: boolean
        type:
          description: The type of ActiveGate module.
          enum:
          - AWS
          - AZURE
          - BEACON_FORWARDER
          - CLOUD_FOUNDRY
          - DB_INSIGHT
          - EXTENSIONS_V1
          - EXTENSIONS_V2
          - KUBERNETES
          - LOGS
          - MEMORY_DUMPS
          - METRIC_API
          - ONE_AGENT_ROUTING
          - OTLP_INGEST
          - REST_API
          - SYNTHETIC
          - VMWARE
          - Z_OS
          example: KUBERNETES
          readOnly: true
          type: string
        attributes:
          additionalProperties:
            description: The attributes of the ActiveGate module.
            readOnly: true
            type: string
          description: The attributes of the ActiveGate module.
          readOnly: true
          type: object
        version:
          description: The version of the ActiveGate module.
          readOnly: true
          type: string
        enabled:
          description: The module is enabled (`true`) or disabled (`false`).
          readOnly: true
          type: boolean
      type: object
    EntityType:
      description: A list of properties of the monitored entity type.
      example:
        type: HOST
        entityLimitExceeded: "false"
        properties:
        - id: BITNESS
          type: Enum
        - id: CPU_CORES
          type: Number
        tags: placeholder for tags
        managementZones: placeholder for management zones
        fromRelationships:
        - id: RUNS_ON_RESOURCE
          toTypes:
          - CUSTOM_DEVICE
        - id: IS_NETWORK_CLIENT_OF_HOST
          toTypes:
          - HOST
          - CUSTOM_DEVICE
        toRelationships:
        - id: IS_DISK_OF
          fromTypes:
          - DISK
        - id: IS_SITE_OF
          fromTypes:
          - VMWARE_DATACENTER
          - GEOLOC_SITE
      properties:
        dimensionKey:
          description: The dimension key used within metrics for this monitored entity.
          type: string
        entityLimitExceeded:
          description: Whether the entity creation limit for the given type has been
            exceeded
          type: boolean
        managementZones:
          description: The placeholder for the list of management zones of an actual
            entity.
          type: string
        fromRelationships:
          description: A list of possible relationships where the monitored entity
            type occupies the FROM position
          items:
            $ref: '#/components/schemas/ToPosition'
          type: array
        toRelationships:
          description: A list of possible relationships where the monitored entity
            type occupies the TO position.
          items:
            $ref: '#/components/schemas/FromPosition'
          type: array
        properties:
          description: A list of additional properties of the monitored entity type.
          items:
            $ref: '#/components/schemas/EntityTypePropertyDto'
          type: array
        type:
          description: The type of the monitored entity.
          type: string
        displayName:
          description: The display name of the monitored entity.
          type: string
        tags:
          description: The placeholder for the list of tags of an actual entity.
          type: string
      type: object
    EntityTypeList:
      description: A list of properties of all available entity types.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        types:
        - type: HOST
          entityLimitExceeded: "false"
          properties:
          - id: BITNESS
            type: Enum
          - id: CPU_CORES
            type: Number
          tags: placeholder for tags
          managementZones: placeholder for management zones
          fromRelationships:
          - id: RUNS_ON_RESOURCE
            toTypes:
            - CUSTOM_DEVICE
          - id: IS_NETWORK_CLIENT_OF_HOST
            toTypes:
            - HOST
            - CUSTOM_DEVICE
          toRelationships:
          - id: IS_DISK_OF
            fromTypes:
            - DISK
          - id: IS_SITE_OF
            fromTypes:
            - VMWARE_DATACENTER
            - GEOLOC_SITE
        - type: HOST
          entityLimitExceeded: "false"
          properties:
          - id: BITNESS
            type: Enum
          - id: CPU_CORES
            type: Number
          tags: placeholder for tags
          managementZones: placeholder for management zones
          fromRelationships:
          - id: RUNS_ON_RESOURCE
            toTypes:
            - CUSTOM_DEVICE
          - id: IS_NETWORK_CLIENT_OF_HOST
            toTypes:
            - HOST
            - CUSTOM_DEVICE
          toRelationships:
          - id: IS_DISK_OF
            fromTypes:
            - DISK
          - id: IS_SITE_OF
            fromTypes:
            - VMWARE_DATACENTER
            - GEOLOC_SITE
        pageSize: 6
        totalCount: 0
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        types:
          description: The list of meta information for all available entity-types
          items:
            $ref: '#/components/schemas/EntityType'
          type: array
      required:
      - totalCount
      type: object
    EntityTypePropertyDto:
      description: The property of a monitored entity.
      properties:
        id:
          description: The ID of the property.
          example: cpuCores
          type: string
        type:
          description: The type of the property.
          example: Number
          type: string
        displayName:
          description: The display-name of the property.
          example: cpu cores
          type: string
      type: object
    FromPosition:
      description: The FROM position of a relationship.
      properties:
        fromTypes:
          description: A list of monitored entity types that can occupy the FROM position.
          items:
            type: string
          type: array
        id:
          description: The ID of the relationship.
          type: string
      type: object
    ToPosition:
      description: The TO position of a relationship.
      properties:
        toTypes:
          description: A list of monitored entity types that can occupy the TO position.
          items:
            type: string
          type: array
        id:
          description: The ID of the relationship.
          type: string
      type: object
    CustomDeviceCreationResult:
      description: The short representation of a newly created custom device.
      example:
        groupId: groupId
        entityId: entityId
      properties:
        entityId:
          description: The Dynatrace entity ID of the custom device.
          type: string
        groupId:
          description: The Dynatrace entity ID of the custom device group.
          type: string
      type: object
    CustomDeviceCreation:
      description: Configuration of a custom device.
      example:
        customDeviceId: customDeviceId
        displayName: coffeeMachine
        group: myCustomDeviceGroup
        ipAddresses:
        - 10.0.0.1
        listenPorts:
        - 80
        faviconUrl: https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png
        configUrl: http://coffee-machine.dynatrace.internal.com/coffeemachine/manage
        type: coffee machine
        properties: {}
        dnsNames:
        - coffee-machine.dynatrace.internal.com
      properties:
        customDeviceId:
          description: "The internal ID of the custom device. \n\n If you use the\
            \ ID of an existing device, the respective parameters will be updated."
          maxLength: 512
          minLength: 0
          type: string
        displayName:
          description: The name of the custom device to be displayed in the user interface.
          maxLength: 1024
          minLength: 0
          type: string
        group:
          description: "User defined group ID of entity. \n\nThe group ID helps to\
            \ keep a consistent picture of device-group relations. One of many cases\
            \ where a proper group is important is service detection: you can define\
            \ which custom devices should lead to the same service by defining the\
            \ same group ID for them. \n\nIf you set a group ID, it will be hashed\
            \ into the Dynatrace entity ID of the custom device. In that case the\
            \ custom device can only be part of one custom device group. \n\nIf you\
            \ don't set the group ID, Dynatrace will create it based on the ID or\
            \ type of the custom device. Also, the group will not be hashed into the\
            \ device ID which means the device may switch groups."
          maxLength: 512
          minLength: 0
          type: string
        ipAddresses:
          description: "The list of IP addresses that belong to the custom device.\
            \ \n\nThese addresses are used to automatically discover the horizontal\
            \ communication relationship between this component and all other observed\
            \ components within Smartscape. Once a connection is discovered, it is\
            \ automatically mapped and shown within Smartscape. \n\nIf you send a\
            \ value (including an empty value), the existing values will be overwritten.\
            \ \n\nIf you send `null` or omit this field, the existing values will\
            \ be kept."
          items:
            type: string
          maxItems: 100
          minItems: 0
          type: array
          uniqueItems: true
        listenPorts:
          description: "The list of ports the custom devices listens to. \n\nThese\
            \ ports are used to discover the horizontal communication relationship\
            \ between this component and all other observed components within Smartscape.\
            \ \n\nOnce a connection is discovered, it is automatically mapped and\
            \ shown within Smartscape. \n\nIf ports are specified, you should also\
            \ add at least one IP address or a DNS name for the custom device. \n\n\
            If you send a value, the existing values will be overwritten. \n\nIf you\
            \ send `null`, or an empty value, or omit this field, the existing values\
            \ will be kept."
          items:
            format: int32
            type: integer
          maxItems: 100
          minItems: 0
          type: array
          uniqueItems: true
        type:
          description: "The technology type definition of the custom device. \n\n\
            It must be the same technology type of the metric you're reporting. \n\
            \nIf you send a value, the existing value will be overwritten. \n\nIf\
            \ you send `null`, empty or omit this field, the existing value will be\
            \ kept."
          maxLength: 128
          minLength: 0
          type: string
        faviconUrl:
          description: The icon to be displayed for your custom component within Smartscape.
            Provide the full URL of the icon file.
          maxLength: 2048
          minLength: 0
          type: string
        configUrl:
          description: The URL of a configuration web page for the custom device,
            such as a login page for a firewall or router.
          maxLength: 2048
          minLength: 0
          type: string
        properties:
          additionalProperties:
            description: The list of key-value pair properties that will be shown
              beneath the infographics of your custom device.
            type: string
          description: The list of key-value pair properties that will be shown beneath
            the infographics of your custom device.
          type: object
        dnsNames:
          description: "The list of DNS names related to the custom device. \n\nThese\
            \ names are used to automatically discover the horizontal communication\
            \ relationship between this component and all other observed components\
            \ within Smartscape. Once a connection is discovered, it is automatically\
            \ mapped and shown within Smartscape. \n\nIf you send a value, the existing\
            \ values will be overwritten. \n\nIf you send `null` or an empty value;\
            \ or omit this field, the existing values will be kept."
          items:
            type: string
          maxItems: 20
          minItems: 0
          type: array
          uniqueItems: true
        messageType:
          enum:
          - CUSTOM_DEVICE
          - DELETE_ENTITY_PER_TYPE
          - FILTER_VALUE_SUGGESTIONS
          - MULTI
          - MULTI_TYPE
          - SINGLE
          - SINGLE_TYPE
          type: string
      required:
      - customDeviceId
      - displayName
      type: object
    EntitiesList:
      description: A list of monitored entities along with their properties.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        entities:
        - entityId: HOST-06F288EE2A930951
          displayName: my host
          icon:
            primaryIconType: linux
            secondaryIconType: microsoft-azure-signet
            customIconPath: host
          firstSeenTms: 1574697667547
          lastSeenTms: 1588242361417
          properties:
            bitness: 64
            monitoringMode: FULL_STACK
            osType: LINUX
            osArchitecture: X86
            networkZoneId: aws.us.east01
            cpuCores: 8
          tags:
          - context: CONTEXTLESS
            key: architecture
            value: x86
            stringRepresentation: architecture:x86
          - context: ENVIRONMENT
            key: Infrastructure
            value: Linux
            stringRepresentation: '[ENVIRONMENT]Infrastructure:Linux'
          managementZones:
          - id: "6239538939987181652"
            name: main app
          fromRelationships:
            isInstanceOf:
            - id: HOST_GROUP-0E489369D663A4BF
              type: HOST_GROUP
          toRelationships:
            isDiskOf:
            - id: DISK-0393340DCA3853B0
              type: DISK
        - entityId: HOST-06F288EE2A930951
          displayName: my host
          icon:
            primaryIconType: linux
            secondaryIconType: microsoft-azure-signet
            customIconPath: host
          firstSeenTms: 1574697667547
          lastSeenTms: 1588242361417
          properties:
            bitness: 64
            monitoringMode: FULL_STACK
            osType: LINUX
            osArchitecture: X86
            networkZoneId: aws.us.east01
            cpuCores: 8
          tags:
          - context: CONTEXTLESS
            key: architecture
            value: x86
            stringRepresentation: architecture:x86
          - context: ENVIRONMENT
            key: Infrastructure
            value: Linux
            stringRepresentation: '[ENVIRONMENT]Infrastructure:Linux'
          managementZones:
          - id: "6239538939987181652"
            name: main app
          fromRelationships:
            isInstanceOf:
            - id: HOST_GROUP-0E489369D663A4BF
              type: HOST_GROUP
          toRelationships:
            isDiskOf:
            - id: DISK-0393340DCA3853B0
              type: DISK
        pageSize: 6
        totalCount: 0
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        entities:
          description: A list of monitored entities.
          items:
            $ref: '#/components/schemas/Entity'
          type: array
      required:
      - totalCount
      type: object
    Entity:
      description: The properties of a monitored entity.
      example:
        entityId: HOST-06F288EE2A930951
        displayName: my host
        icon:
          primaryIconType: linux
          secondaryIconType: microsoft-azure-signet
          customIconPath: host
        firstSeenTms: 1574697667547
        lastSeenTms: 1588242361417
        properties:
          bitness: 64
          monitoringMode: FULL_STACK
          osType: LINUX
          osArchitecture: X86
          networkZoneId: aws.us.east01
          cpuCores: 8
        tags:
        - context: CONTEXTLESS
          key: architecture
          value: x86
          stringRepresentation: architecture:x86
        - context: ENVIRONMENT
          key: Infrastructure
          value: Linux
          stringRepresentation: '[ENVIRONMENT]Infrastructure:Linux'
        managementZones:
        - id: "6239538939987181652"
          name: main app
        fromRelationships:
          isInstanceOf:
          - id: HOST_GROUP-0E489369D663A4BF
            type: HOST_GROUP
        toRelationships:
          isDiskOf:
          - id: DISK-0393340DCA3853B0
            type: DISK
      properties:
        managementZones:
          description: A set of management zones to which the entity belongs.
          items:
            $ref: '#/components/schemas/ManagementZone'
          type: array
          uniqueItems: true
        fromRelationships:
          additionalProperties:
            description: A list of relationships where the entity occupies the FROM
              position.
            items:
              $ref: '#/components/schemas/EntityId'
            type: array
          description: A list of relationships where the entity occupies the FROM
            position.
          type: object
        toRelationships:
          additionalProperties:
            description: A list of relationships where the entity occupies the TO
              position.
            items:
              $ref: '#/components/schemas/EntityId'
            type: array
          description: A list of relationships where the entity occupies the TO position.
          type: object
        entityId:
          description: The ID of the entity.
          type: string
        lastSeenTms:
          description: The timestamp at which the entity was last seen, in UTC milliseconds.
          format: int64
          type: integer
        firstSeenTms:
          description: The timestamp at which the entity was first seen, in UTC milliseconds.
          format: int64
          type: integer
        icon:
          $ref: '#/components/schemas/EntityIcon'
        properties:
          additionalProperties:
            description: A list of additional properties of the entity.
            type: object
          description: A list of additional properties of the entity.
          type: object
        displayName:
          description: The name of the entity, displayed in the UI.
          type: string
        tags:
          description: A set of tags assigned to the entity.
          items:
            $ref: '#/components/schemas/METag'
          type: array
          uniqueItems: true
      type: object
    EntityIcon:
      description: The icon of a monitored entity.
      properties:
        primaryIconType:
          description: "The primary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon."
          readOnly: true
          type: string
        secondaryIconType:
          description: "The secondary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon."
          readOnly: true
          type: string
        customIconPath:
          description: "The user-defined icon of the entity. \n\nSpecify the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon or a URL of your own icon."
          type: string
      type: object
    EntityId:
      description: A short representation of a monitored entity.
      example:
        id: id
        type: type
      properties:
        id:
          description: The ID of the entity.
          type: string
        type:
          description: The type of the entity.
          type: string
      type: object
    METag:
      description: The tag of a monitored entity.
      example:
        stringRepresentation: stringRepresentation
        context: context
        value: value
        key: key
      properties:
        stringRepresentation:
          description: The string representation of the tag.
          type: string
        value:
          description: The value of the tag.
          type: string
        key:
          description: The key of the tag.
          type: string
        context:
          description: "The origin of the tag, such as AWS or Cloud Foundry. \n\n\
            \ Custom tags use the `CONTEXTLESS` value."
          type: string
      type: object
    ManagementZone:
      description: A short representation of a management zone.
      example:
        name: name
        id: id
      properties:
        name:
          description: The name of the management zone.
          type: string
        id:
          description: The ID of the management zone.
          type: string
      type: object
    EntityStub:
      description: A short representation of a monitored entity.
      example:
        name: name
        entityId:
          id: id
          type: type
      properties:
        entityId:
          $ref: '#/components/schemas/EntityId'
        name:
          description: "The name of the entity. \n\n Not included in the response\
            \ in case no entity with the relevant ID was found."
          type: string
      type: object
    LogRecord:
      description: A single log record.
      example:
        timestamp: 2020-02-06 08:56:13 GMT+01:00
        status: ERROR
        content: example log content
        log.source: /var/log/syslog
        event.type: LOG
        additionalColumns:
          loglevel: SEVERE
      properties:
        eventType:
          description: Type of event
          enum:
          - K8S
          - LOG
          - SFM
          type: string
        additionalColumns:
          additionalProperties:
            description: Additional columns of the log record.
            type: string
          description: Additional columns of the log record.
          type: object
        timestamp:
          description: The timestamp of the log record.
          format: date-time
          type: string
        content:
          description: The content of the log record.
          type: string
        status:
          description: The log status (based on the log level).
          enum:
          - ERROR
          - INFO
          - NONE
          - WARN
          type: string
      type: object
    LogRecordsList:
      description: A list of retrieved log records.
      example:
        results:
        - timestamp: 2020-02-06 08:56:13 GMT+01:00
          status: ERROR
          content: example log content
          log.source: /var/log/syslog
          event.type: LOG
          additionalColumns:
            loglevel: SEVERE
        sliceSize: 100
        nextSliceKey: ___-2hI03q0AAAAAAAAAAAAAA-gAAAAAAAAH0P____8AAABkAAAACXRpbWVzdGFtcAD___7aEjTerQ
      properties:
        results:
          description: A list of retrieved log records.
          items:
            $ref: '#/components/schemas/LogRecord'
          type: array
        sliceSize:
          description: The total number of records in a slice.
          format: int64
          type: integer
        nextSliceKey:
          description: The cursor for the next slice of log records.
          type: string
      type: object
    AggregatedLog:
      description: Aggregated log records.
      example:
        aggregationResult:
          processId:
            "1597835271":
              cassandra: "6"
            "1597835331":
              apache: "12"
              cassandra: "60"
          hostId:
            "1597835271":
              localhost: "12"
            "1597835331":
              remotehost: "6"
          logLevel:
            "1597835271":
              ERROR: "1"
              INFO: "2"
            "1597835331":
              INFO: "17"
          logPath:
            "1597835271":
              /var/log/messages: "15"
              /var/log/syslog: "3"
            "1597835331":
              /var/log/messages: "15"
              /var/log/syslog: "3"
      properties:
        aggregationResult:
          additionalProperties:
            additionalProperties:
              additionalProperties:
                description: Aggregated log records.
                format: int64
                type: integer
              description: Aggregated log records.
              type: object
            description: Aggregated log records.
            type: object
          description: Aggregated log records.
          type: object
      type: object
    MetricDefaultAggregation:
      description: The default aggregation of a metric.
      properties:
        type:
          description: The type of default aggregation.
          enum:
          - auto
          - avg
          - count
          - max
          - median
          - min
          - percentile
          - sum
          - value
          type: string
        parameter:
          description: "The percentile to be delivered. Valid values are between `0`\
            \ and `100`. \n\nApplicable only to the `percentile` aggregation type."
          format: double
          type: number
      type: object
    MetricDescriptor:
      description: The descriptor of a metric.
      example:
        metricId: builtin:host.cpu.user:splitBy("dt.entity.host"):max:fold
        displayName: CPU user
        description: Percentage of user-space CPU time currently utilized, per host.
        unit: Percent
        dduBillable: false
        created: 1597400123451
        lastWritten: 1597400717783
        entityType:
        - HOST
        aggregationTypes:
        - auto
        - value
        transformations:
        - filter
        - fold
        - limit
        - merge
        - names
        - parents
        - timeshift
        - rate
        - sort
        - last
        - splitBy
        defaultAggregation:
          type: value
        dimensionDefinitions:
        - key: dt.entity.host
          name: Host
          displayName: Host
          index: 0
          type: ENTITY
        tags: []
        metricValueType:
          type: unknown
        latency: 1
      properties:
        entityType:
          description: List of admissible primary entity types for this metric. Can
            be used for the `type` predicate in the `entitySelector`.
          items:
            type: string
          type: array
          uniqueItems: true
        metricId:
          description: "The fully qualified key of the metric. \n\nIf a transformation\
            \ has been used it is reflected in the metric key."
          type: string
        dduBillable:
          description: "If `true` the usage of metric consumes [Davis data units](https://dt-url.net/ddu).\
            \ \n\n Metric expressions don't return this field."
          type: boolean
        aggregationTypes:
          description: The list of allowed aggregations for this metric.
          items:
            enum:
            - auto
            - avg
            - count
            - max
            - median
            - min
            - percentile
            - sum
            - value
            type: string
          type: array
          uniqueItems: true
        defaultAggregation:
          $ref: '#/components/schemas/MetricDefaultAggregation'
        dimensionDefinitions:
          description: "The fine metric division (for example, process group and process\
            \ ID for some process-related metric). \n\nFor [ingested metrics](https://dt-url.net/5d63ic1),\
            \ dimensions that doesn't have have any data within the last 15 days are\
            \ omitted. "
          items:
            $ref: '#/components/schemas/MetricDimensionDefinition'
          type: array
        minimumValue:
          description: |-
            The minimum value of the metric.

             Metric expressions don't return this field.
          format: double
          type: number
        rootCauseRelevant:
          description: |-
            The metric is (`true`) or is not (`false`) root cause relevant.

             Metric expressions don't return this field.
          type: boolean
        lastWritten:
          description: "The timestamp when the metric was last written. \n\nHas the\
            \ value of `null` for metric expressions or if the data has never been\
            \ written."
          format: int64
          type: integer
        metricValueType:
          $ref: '#/components/schemas/MetricValueType'
        maximumValue:
          description: |-
            The maximum value of the metric.

             Metric expressions don't return this field.
          format: double
          type: number
        latency:
          description: |-
            The latency (in minutes) to how long it takes before a new metric data point is available in Monitoring after it is written.

             Metric expressions don't return this field.
          format: int64
          type: integer
        impactRelevant:
          description: |-
            The metric is (`true`) or is not (`false`) impact relevant.

             Metric expressions don't return this field.
          type: boolean
        created:
          description: "The timestamp of metric creation. \n\nBuilt-in metrics and\
            \ metric expressions have the value of `null`."
          format: int64
          type: integer
        warnings:
          description: A list of potential warnings that affect this ID. For example
            deprecated feature usage etc.
          items:
            type: string
          type: array
        displayName:
          description: The name of the metric in the user interface.
          type: string
        description:
          description: A short description of the metric.
          type: string
        transformations:
          description: Transform operators that could be appended to the current transformation
            list. Must be enabled with the "fields" parameter on `/metrics` and is
            always present on `/metrics/{metricId}`.
          items:
            enum:
            - default
            - delta
            - filter
            - fold
            - last
            - limit
            - merge
            - names
            - parents
            - rate
            - sort
            - splitBy
            - timeshift
            type: string
          type: array
          uniqueItems: true
        unit:
          description: The unit of the metric.
          enum:
          - Bit
          - BitPerHour
          - BitPerMinute
          - BitPerSecond
          - Byte
          - BytePerHour
          - BytePerMinute
          - BytePerSecond
          - Cores
          - Count
          - Day
          - DecibelMilliWatt
          - GibiByte
          - Giga
          - GigaByte
          - Hour
          - KibiByte
          - KibiBytePerHour
          - KibiBytePerMinute
          - KibiBytePerSecond
          - Kilo
          - KiloByte
          - KiloBytePerHour
          - KiloBytePerMinute
          - KiloBytePerSecond
          - MSU
          - MebiByte
          - MebiBytePerHour
          - MebiBytePerMinute
          - MebiBytePerSecond
          - Mega
          - MegaByte
          - MegaBytePerHour
          - MegaBytePerMinute
          - MegaBytePerSecond
          - MicroSecond
          - MilliCores
          - MilliSecond
          - MilliSecondPerMinute
          - Minute
          - Month
          - NanoSecond
          - NanoSecondPerMinute
          - NotApplicable
          - PerHour
          - PerMinute
          - PerSecond
          - Percent
          - Pixel
          - Promille
          - Ratio
          - Second
          - State
          - Unspecified
          - Week
          - Year
          type: string
        tags:
          description: "The tags applied to the metric. \n\n Metric expressions don't\
            \ return this field."
          items:
            description: "The tags applied to the metric. \n\n Metric expressions\
              \ don't return this field."
            type: string
          type: array
          uniqueItems: true
      required:
      - metricId
      type: object
    MetricDescriptorCollection:
      description: A list of metrics along with their descriptors.
      example:
        totalCount: 3
        nextPageKey: ABCDEFABCDEFABCDEF_
        metrics:
        - metricId: builtin:host.cpu.user:splitBy("dt.entity.host"):max:fold
          displayName: CPU user
          description: Percentage of user-space CPU time currently utilized, per host.
          unit: Percent
          dduBillable: false
          created: 1597400123451
          lastWritten: 1597400717783
          entityType:
          - HOST
          aggregationTypes:
          - auto
          - value
          transformations:
          - filter
          - fold
          - limit
          - merge
          - names
          - parents
          - timeshift
          - rate
          - sort
          - last
          - splitBy
          defaultAggregation:
            type: value
          dimensionDefinitions:
          - key: dt.entity.host
            name: Host
            displayName: Host
            index: 0
            type: ENTITY
          tags: []
          metricValueType:
            type: unknown
        - metricId: builtin:host.cpu.user:splitBy()
          displayName: CPU user
          description: Percentage of user-space CPU time currently utilized, per host.
          unit: Percent
          dduBillable: false
          created: 1597400123451
          lastWritten: 1597400717783
          entityType:
          - HOST
          aggregationTypes:
          - auto
          - value
          transformations:
          - filter
          - fold
          - limit
          - merge
          - names
          - parents
          - timeshift
          - rate
          - sort
          - last
          - splitBy
          defaultAggregation:
            type: value
          dimensionDefinitions:
          - key: dt.entity.host
            name: Host
            displayName: Host
            index: 0
            type: ENTITY
          tags: []
          metricValueType:
            type: unknown
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          type: string
        totalCount:
          description: The estimated number of metrics in the result.
          format: int64
          type: integer
        warnings:
          description: A list of potential warnings about the query. For example deprecated
            feature usage etc.
          items:
            type: string
          type: array
        metrics:
          description: A list of metric along with their descriptors
          items:
            $ref: '#/components/schemas/MetricDescriptor'
          type: array
      required:
      - nextPageKey
      - totalCount
      type: object
    MetricDimensionDefinition:
      description: The dimension of a metric.
      properties:
        index:
          description: "The unique 0-based index of the dimension. \n\n Appending\
            \ transformations such as :names or :parents may change the indexes of\
            \ dimensions. `null` is used for the dimensions of a metric with flexible\
            \ dimensions, which can be referenced with their dimension key, but do\
            \ not have an intrinsic order that could be used for the index."
          format: int32
          type: integer
        name:
          description: The name of the dimension.
          type: string
        key:
          description: "The key of the dimension. \n\n It must be unique within the\
            \ metric."
          type: string
        type:
          description: The type of the dimension.
          enum:
          - ENTITY
          - NUMBER
          - OTHER
          - STRING
          - VOID
          type: string
        displayName:
          description: The display name of the dimension.
          type: string
      required:
      - displayName
      - index
      - key
      - name
      - type
      type: object
    MetricValueType:
      description: The value type for the metric.
      properties:
        type:
          description: The metric value type
          enum:
          - error
          - score
          - unknown
          type: string
      required:
      - type
      type: object
    MetricData:
      description: A list of metrics and their data points.
      example:
        totalCount: 3
        nextPageKey: ABCDEFABCDEFABCDEF_
        result:
        - metricId: builtin:host.disk.avail
          data:
          - dimensions:
            - HOST-F1266E1D0AAC2C3C
            - DISK-F1266E1D0AAC2C3F
            timestamps:
            - 3151435100000
            - 3151438700000
            - 3151442300000
            values:
            - 11.1
            - 22.2
            - 33.3
          - dimensions:
            - HOST-F1266E1D0AAC2C3C
            - DISK-F1266E1D0AAC2C3D
            timestamps:
            - 3151435100000
            - 3151438700000
            - 3151442300000
            values:
            - 111.1
            - 222.2
            - 333.3
        - metricId: builtin:host.cpu.idle
          data:
          - dimensions:
            - HOST-F1266E1D0AAC2C3C
            timestamps:
            - 3151435100000
            - 3151438700000
            - 3151442300000
            values:
            - 1.1
            - 2.2
            - 3.3
        warnings:
        - The contains filter transformation is deprecated and will be removed in
          a future release.
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          type: string
        totalCount:
          description: "The total number of primary entities in the result. \n\nHas\
            \ the `0` value if none of the requested metrics is suitable for pagination."
          format: int64
          type: integer
        warnings:
          description: A list of warnings
          items:
            type: string
          type: array
        result:
          description: A list of metrics and their data points.
          items:
            $ref: '#/components/schemas/MetricSeriesCollection'
          type: array
      required:
      - nextPageKey
      - totalCount
      type: object
    MetricSeries:
      description: "Data points per dimension of a metric. \n\nThe data is represented\
        \ by two arrays of the same length: **timestamps** and **values**. Entries\
        \ of the same index from both arrays form a timestamped data point."
      example:
        dimensions:
        - HOST-F1266E1D0AAC2C3C
        timestamps:
        - 3151435100000
        - 3151438700000
        - 3151442300000
        values:
        - 1.1
        - 2.2
        - 3.3
      properties:
        dimensionMap:
          additionalProperties:
            type: string
          type: object
        timestamps:
          description: "A list of timestamps of data points. \n\nThe value of data\
            \ point for each time from this array is located in **values** array at\
            \ the same index."
          items:
            format: int64
            type: integer
          type: array
        dimensions:
          description: "The ordered list of dimensions to which the data point list\
            \ belongs. \n\n Each metric can have a certain number of dimensions. Dimensions\
            \ exceeding this number are aggregated into one, which is shown as `null`\
            \ here."
          items:
            type: string
          type: array
        values:
          description: "A list of values of data points. \n\nThe timestamp of data\
            \ point for each value from this array is located in **timestamps** array\
            \ at the same index."
          items:
            format: double
            type: number
          type: array
      required:
      - dimensionMap
      type: object
    MetricSeriesCollection:
      description: Data points of a metric.
      example:
        metricId: builtin:host.disk.avail
        data:
        - dimensions:
          - HOST-F1266E1D0AAC2C3C
          - DISK-F1266E1D0AAC2C3F
          timestamps:
          - 3151435100000
          - 3151438700000
          - 3151442300000
          values:
          - 11.1
          - 22.2
          - 33.3
        - dimensions:
          - HOST-F1266E1D0AAC2C3C
          - DISK-F1266E1D0AAC2C3D
          timestamps:
          - 3151435100000
          - 3151438700000
          - 3151442300000
          values:
          - 111.1
          - 222.2
          - 333.3
      properties:
        metricId:
          description: "The key of the metric. \n\nIf any transformation is applied,\
            \ it is included here."
          type: string
        data:
          description: Data points of the metric.
          items:
            $ref: '#/components/schemas/MetricSeries'
          type: array
        warnings:
          description: A list of potential warnings that affect this ID. For example
            deprecated feature usage etc.
          items:
            type: string
          type: array
      required:
      - metricId
      type: object
    NetworkZone:
      description: Configuration of a network zone.
      example:
        numOfOneAgentsUsing: 0
        numOfConfiguredOneAgents: 6
        alternativeZones:
        - alternativeZones
        - alternativeZones
        numOfConfiguredActiveGates: 5
        description: description
        id: id
        numOfOneAgentsFromOtherZones: 1
      properties:
        alternativeZones:
          description: A list of alternative network zones.
          items:
            type: string
          type: array
          uniqueItems: true
        numOfOneAgentsUsing:
          description: The number of OneAgents that are using ActiveGates in the network
            zone.
          format: int32
          readOnly: true
          type: integer
        numOfConfiguredOneAgents:
          description: The number of OneAgents that are configured to use the network
            zone as primary.
          format: int32
          readOnly: true
          type: integer
        numOfOneAgentsFromOtherZones:
          description: "The number of OneAgents from other network zones that are\
            \ using ActiveGates in the network zone. \n\n This is a fraction of\_\
            **numOfOneAgentsUsing**. \n\nOne possible reason for switching to another\
            \ zone is that a firewall is preventing a OneAgent from connecting to\
            \ any ActiveGate in the preferred network zone.\n\n"
          format: int32
          readOnly: true
          type: integer
        numOfConfiguredActiveGates:
          description: The number of ActiveGates in the network zone.
          format: int32
          readOnly: true
          type: integer
        id:
          description: The ID of the network zone
          readOnly: true
          type: string
        description:
          description: A short description of the network zone
          type: string
      type: object
    NetworkZoneList:
      description: A list of network zones.
      example:
        networkZones:
        - numOfOneAgentsUsing: 0
          numOfConfiguredOneAgents: 6
          alternativeZones:
          - alternativeZones
          - alternativeZones
          numOfConfiguredActiveGates: 5
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 1
        - numOfOneAgentsUsing: 0
          numOfConfiguredOneAgents: 6
          alternativeZones:
          - alternativeZones
          - alternativeZones
          numOfConfiguredActiveGates: 5
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 1
      properties:
        networkZones:
          description: A list of network zones.
          items:
            $ref: '#/components/schemas/NetworkZone'
          type: array
      required:
      - networkZones
      type: object
    EntityShortRepresentation:
      description: The short representation of a Dynatrace entity.
      example:
        id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
        name: Dynatrace entity
        description: Dynatrace entity for the REST API example
      properties:
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
      required:
      - id
      type: object
    NetworkZoneSettings:
      description: Global network zone configuration.
      example:
        networkZonesEnabled: true
      properties:
        networkZonesEnabled:
          description: Network zones feature is enabled (`true`) or disabled (`false`).
          type: boolean
      type: object
    AddedEntityTags:
      description: A list of custom tags added to monitored entities.
      example:
        appliedTags:
        - context: CONTEXTLESS
          key: mainApp
          stringRepresentation: mainApp
        - context: CONTEXTLESS
          key: booking
          stringRepresentation: booking
        matchedEntitiesCount: 2
      properties:
        appliedTags:
          description: A list of added custom tags.
          items:
            $ref: '#/components/schemas/METag'
          properties:
            empty:
              type: boolean
          type: array
        matchedEntitiesCount:
          description: The number of monitored entities where the tags have been added.
          format: int64
          type: integer
      type: object
    AddEntityTag:
      description: The custom tag to be added to monitored entities.
      properties:
        value:
          description: The value of the custom tag to be added to monitored entities.
            May be null
          type: string
        key:
          description: The key of the custom tag to be added to monitored entities.
          minLength: 1
          type: string
      required:
      - key
      type: object
    AddEntityTags:
      description: A list of tags to be added to monitored entities.
      example:
        tags:
        - key: mainApp
        - key: bookings
          value: "42"
      properties:
        tags:
          description: A list of tags to be added to monitored entities.
          items:
            $ref: '#/components/schemas/AddEntityTag'
          maxItems: 1000
          minItems: 0
          type: array
      required:
      - tags
      type: object
    DeletedEntityTags:
      description: Deleted custom tag.
      example:
        matchedEntitiesCount: 2
      properties:
        matchedEntitiesCount:
          description: The number of monitored entities where the tag has been deleted.
          format: int64
          type: integer
      type: object
    CustomEntityTags:
      description: A list of custom tags.
      example:
        totalCount: 2
        tags:
        - context: CONTEXTLESS
          key: mainApp
          stringRepresentation: mainApp
        - context: CONTEXTLESS
          key: bookings
          stringRepresentation: bookings
      properties:
        totalCount:
          description: The total number of tags in the response.
          format: int64
          type: integer
        tags:
          description: A list of custom tags.
          items:
            $ref: '#/components/schemas/METag'
          properties:
            empty:
              type: boolean
          type: array
          uniqueItems: true
      required:
      - tags
      type: object
    ApiTokenCreated:
      description: The newly created token.
      example:
        id: dt0c01.ST2EY72KQINMH574WMNVI7YN
        token: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
        expirationDate: 2020-11-12T08:15:30.144Z
      properties:
        token:
          description: The secret of the token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
          type: string
        expirationDate:
          description: The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).
          example: 2020-11-12T08:15:30.144Z
          type: string
        id:
          description: The ID of the token, consisting of prefix and public part of
            the token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN
          type: string
      type: object
    ApiTokenCreate:
      description: Parameters of a new API token.
      example:
        name: tokenName
        personalAccessToken: false
        scopes:
        - metrics.read
        - metrics.read
        expirationDate: now+14d
      properties:
        personalAccessToken:
          description: "The token is a personal access token (`true`) or an API token\
            \ (`false`). \n\n Personal access tokens are tied to the permissions of\
            \ their owner."
          example: false
          type: boolean
        expirationDate:
          description: "The expiration date of the token. \n\nYou can use one of the\
            \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
            \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
            \ UTC is used. You can use a space character instead of the `T`. Seconds\
            \ and fractions of a second are optional. \n* Relative timeframe, back\
            \ from now. The format is `now-NU/A`, where `N` is the amount of time,\
            \ `U` is the unit of time, and `A` is an alignment. The alignment rounds\
            \ all the smaller values to the nearest zero in the past. For example,\
            \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
            \ relative timeframe without an alignment: `now-NU`. \nSupported time\
            \ units for the relative timeframe are: \n   * `m`: minutes \n   * `h`:\
            \ hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`:\
            \ years \n\n"
          example: now+14d
          type: string
        scopes:
          description: "A list of the scopes to be assigned to the token.\n\n* `InstallerDownload`:\
            \ PaaS integration - Installer download. \n* `DataExport`: Access problem\
            \ and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension.\
            \ \n* `SupportAlert`: PaaS integration - Support alert. \n* `DcrumIntegration`:\
            \ Dynatrace module integration - NAM. \n* `AdvancedSyntheticIntegration`:\
            \ Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`:\
            \ Create and read synthetic monitors, locations, and nodes. \n* `AppMonIntegration`:\
            \ Dynatrace module integration - AppMon. \n* `RumBrowserExtension`: RUM\
            \ Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read\
            \ configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`:\
            \ User sessions. \n* `UserSessionAnonymization`: Anonymize user session\
            \ data for data privacy reasons. \n* `DataPrivacy`: Change data privacy\
            \ settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`:\
            \ Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile\
            \ symbolication file management. \n* `RumJavaScriptTagManagement`: Real\
            \ user monitoring JavaScript tag management. \n* `TenantTokenManagement`:\
            \ Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate\
            \ management. \n* `RestRequestForwarding`: Fetch data from a remote environment.\
            \ \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes.\
            \ \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `auditLogs.read`:\
            \ Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`:\
            \ Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`:\
            \ Write entities. \n* `problems.read`: Read problems. \n* `problems.write`:\
            \ Write problems. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`:\
            \ Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`:\
            \ Write ActiveGates. \n* `credentialVault.read`: Read credential vault\
            \ entries. \n* `credentialVault.write`: Write credential vault entries.\
            \ \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write\
            \ extensions. \n* `extensionConfigurations.read`: Read extension monitoring\
            \ configurations. \n* `extensionConfigurations.write`: Write extension\
            \ monitoring configurations. \n* `extensionEnvironment.read`: Read extension\
            \ environment configurations. \n* `extensionEnvironment.write`: Write\
            \ extension environment configurations. \n* `metrics.ingest`: Ingest metrics.\
            \ \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`:\
            \ Write security problems. \n* `syntheticLocations.read`: Read synthetic\
            \ locations. \n* `syntheticLocations.write`: Write synthetic locations.\
            \ \n* `settings.read`: Read settings. \n* `settings.write`: Write settings.\
            \ \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`:\
            \ Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases.\
            \ \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write\
            \ API tokens. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs.\
            \ \n"
          items:
            enum:
            - InstallerDownload
            - DataExport
            - PluginUpload
            - SupportAlert
            - DcrumIntegration
            - AdvancedSyntheticIntegration
            - ExternalSyntheticIntegration
            - AppMonIntegration
            - RumBrowserExtension
            - LogExport
            - ReadConfig
            - WriteConfig
            - DTAQLAccess
            - UserSessionAnonymization
            - DataPrivacy
            - CaptureRequestData
            - Davis
            - DssFileManagement
            - RumJavaScriptTagManagement
            - TenantTokenManagement
            - ActiveGateCertManagement
            - RestRequestForwarding
            - ReadSyntheticData
            - DataImport
            - auditLogs.read
            - metrics.read
            - metrics.write
            - entities.read
            - entities.write
            - problems.read
            - problems.write
            - networkZones.read
            - networkZones.write
            - activeGates.read
            - activeGates.write
            - credentialVault.read
            - credentialVault.write
            - extensions.read
            - extensions.write
            - extensionConfigurations.read
            - extensionConfigurations.write
            - extensionEnvironment.read
            - extensionEnvironment.write
            - metrics.ingest
            - securityProblems.read
            - securityProblems.write
            - syntheticLocations.read
            - syntheticLocations.write
            - settings.read
            - settings.write
            - tenantTokenRotation.write
            - slo.read
            - slo.write
            - releases.read
            - apiTokens.read
            - apiTokens.write
            - logs.read
            - logs.ingest
            example: metrics.read
            type: string
          minItems: 1
          type: array
        name:
          description: The name of the token.
          example: tokenName
          minLength: 1
          type: string
      required:
      - name
      - scopes
      type: object
    ApiToken:
      description: Metadata of an API token.
      example:
        owner: john.smith
        lastUsedDate: 2020-11-12T08:15:30.144Z
        lastUsedIpAddress: 34.197.2.44
        name: myToken
        personalAccessToken: true
        scopes:
        - metrics.read
        - metrics.read
        id: dt0c01.ST2EY72KQINMH574WMNVI7YN
        creationDate: 2020-11-05T08:15:30.144Z
        enabled: true
        expirationDate: 2020-11-12T08:15:30.144Z
      properties:
        personalAccessToken:
          description: The token is a [personal access token](https://dt-url.net/wm03sop)
            (`true`) or an API token (`false`).
          example: true
          type: boolean
        lastUsedDate:
          description: Token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)
          example: 2020-11-12T08:15:30.144Z
          type: string
        lastUsedIpAddress:
          description: Token last used IP address.
          example: 34.197.2.44
          type: string
        expirationDate:
          description: Token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)
          example: 2020-11-12T08:15:30.144Z
          type: string
        creationDate:
          description: Token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)
          example: 2020-11-05T08:15:30.144Z
          type: string
        scopes:
          description: A list of scopes assigned to the token.
          items:
            enum:
            - ActiveGateCertManagement
            - AdvancedSyntheticIntegration
            - AppMonIntegration
            - CaptureRequestData
            - DTAQLAccess
            - DataExport
            - DataImport
            - DataPrivacy
            - Davis
            - DcrumIntegration
            - DiagnosticExport
            - DssFileManagement
            - ExternalSyntheticIntegration
            - InstallerDownload
            - LogExport
            - MemoryDump
            - Mobile
            - PluginUpload
            - ReadConfig
            - ReadSyntheticData
            - RestRequestForwarding
            - RumBrowserExtension
            - RumJavaScriptTagManagement
            - SupportAlert
            - TenantTokenManagement
            - UserSessionAnonymization
            - ViewDashboard
            - ViewReport
            - WriteConfig
            - WriteSyntheticData
            - activeGates.read
            - activeGates.write
            - apiTokens.read
            - apiTokens.write
            - auditLogs.read
            - credentialVault.read
            - credentialVault.write
            - entities.read
            - entities.write
            - extensionConfigurations.read
            - extensionConfigurations.write
            - extensionEnvironment.read
            - extensionEnvironment.write
            - extensions.read
            - extensions.write
            - logs.ingest
            - logs.read
            - metrics.ingest
            - metrics.read
            - metrics.write
            - networkZones.read
            - networkZones.write
            - problems.read
            - problems.write
            - releases.read
            - securityProblems.read
            - securityProblems.write
            - settings.read
            - settings.write
            - slo.read
            - slo.write
            - syntheticLocations.read
            - syntheticLocations.write
            - tenantTokenRotation.write
            example: metrics.read
            type: string
          type: array
        name:
          description: The name of the token.
          example: myToken
          type: string
        id:
          description: The ID of the token, consisting of prefix and public part of
            the token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN
          type: string
        owner:
          description: The owner of the token.
          example: john.smith
          type: string
        enabled:
          description: The token is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
      type: object
    ApiTokenUpdate:
      description: The update of the API token.
      example:
        name: myToken
        enabled: true
      properties:
        name:
          description: The name of the token.
          example: myToken
          type: string
        enabled:
          description: The token is enabled (`true`) or disabled (`false`)
          example: true
          type: boolean
      type: object
    ApiTokenSecret:
      example:
        token: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
      properties:
        token:
          description: The API token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
          type: string
      required:
      - token
      type: object
    ApiTokenList:
      description: A list of API tokens.
      example:
        pageSize: "1"
        totalCount: "1"
        apiTokens:
          id: dt0c01.ST2EY72KQINMH574WMNVI7YN
          name: tokenName
          revoked: "false"
          personalAccessToken: "true"
          owner: john.smith
          creationDate: 2020-11-05T08:15:30.144Z
          expirationDate: 2020-11-12T08:15:30.144Z
          lastUsedDate: 2020-11-12T08:15:30.144Z
          lastUsedIpAddress: 34.197.2.44
          scopes:
          - metrics.read
      properties:
        apiTokens:
          description: A list of API tokens.
          items:
            $ref: '#/components/schemas/ApiToken'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    AuditLog:
      description: The audit log of your environment.
      example:
        totalCount: 10
        pageSize: 5
        nextPageKey: ___a7acX3q0AAAAAACJidWlsdGluOnNlcnZpY2lUVEJCUzBaNVIxVjJOSGt6Y3oyLTcwMUZWRkxlclH__9rtpxferQ
        auditLogs:
        - logId: "197425568800060000"
          eventType: UPDATE
          category: CONFIG
          entityId: 'MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2'
          environmentId: prod-env-13
          user: test.user@company.com
          userType: USER_NAME
          userOrigin: webui (192.168.0.2)
          timestamp: 1974255688445
          success: true
          patch:
          - op: replace
            path: /refreshTimeIntervalMillis
            value: 30000
            oldValue: 20000
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        auditLogs:
          description: A list of audit log entries ordered by the creation timestamp.
          items:
            $ref: '#/components/schemas/AuditLogEntry'
          type: array
      required:
      - totalCount
      type: object
    AuditLogEntry:
      description: An entry of the audit log.
      example:
        logId: "197425568800060000"
        eventType: UPDATE
        category: CONFIG
        entityId: 'MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2'
        environmentId: prod-env-13
        user: test.user@company.com
        userType: USER_NAME
        userOrigin: webui (192.168.0.2)
        timestamp: 1974255688445
        success: true
        patch:
        - op: replace
          path: /refreshTimeIntervalMillis
          value: 30000
          oldValue: 20000
      properties:
        logId:
          description: The ID of the log entry.
          maxLength: 19
          minLength: 0
          readOnly: true
          type: string
        eventType:
          description: The type of the recorded operation.
          enum:
          - CREATE
          - DELETE
          - GENERAL
          - GET
          - LOGIN
          - LOGOUT
          - PATCH
          - POST
          - PUT
          - READ
          - REVOKE
          - UPDATE
          readOnly: true
          type: string
        category:
          description: The category of the recorded operation.
          enum:
          - CONFIG
          - DEBUG_UI
          - TOKEN
          - WEB_UI
          readOnly: true
          type: string
        entityId:
          description: "The ID of an entity from the **category**. \n\nFor example,\
            \ it can be config ID for the `CONFIG` category or token ID for the `TOKEN`\
            \ category."
          readOnly: true
          type: string
        environmentId:
          description: The ID of the Dynatrace environment where the recorded operation
            occurred.
          readOnly: true
          type: string
        user:
          description: The ID of the user who performed the recorded operation.
          readOnly: true
          type: string
        userType:
          description: The type of the authentication of the **user**.
          enum:
          - PUBLIC_TOKEN_IDENTIFIER
          - REQUEST_ID
          - SERVICE_NAME
          - TOKEN_HASH
          - USER_NAME
          readOnly: true
          type: string
        userOrigin:
          description: The origin and the IP address of the **user**.
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the record creation, in UTC milliseconds.
          format: int64
          readOnly: true
          type: integer
        success:
          description: The recorded operation is successful (`true`) or failed (`false`).
          readOnly: true
          type: boolean
        message:
          description: The logged message.
          readOnly: true
          type: string
        patch:
          description: "The patch of the recorded operation as the JSON representation.\
            \ \n\nThe format is an enhanced RFC 6902. The patch also carries the previous\
            \ value in the **oldValue** field."
          readOnly: true
          type: object
      required:
      - category
      - environmentId
      - eventType
      - logId
      - success
      - timestamp
      - user
      - userType
      type: object
    DavisSecurityAdvice:
      description: Security advice from the Davis security advisor.
      example:
        high:
        - high
        - high
        critical:
        - critical
        - critical
        low:
        - low
        - low
        name: name
        vulnerableComponent: vulnerableComponent
        technology: DOTNET
        medium:
        - medium
        - medium
        none:
        - none
        - none
        adviceType: UPGRADE
      properties:
        name:
          description: The name of the advice.
          readOnly: true
          type: string
        vulnerableComponent:
          description: The vulnerable component to which advice applies.
          readOnly: true
          type: string
        technology:
          description: The technology of the vulnerable component.
          enum:
          - DOTNET
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        adviceType:
          description: The type of the advice.
          enum:
          - UPGRADE
          readOnly: true
          type: string
        critical:
          description: IDs of `critical` level [security problems](https://dt-url.net/p103u1h)
            caused by vulnerable component.
          items:
            description: IDs of `critical` level [security problems](https://dt-url.net/p103u1h)
              caused by vulnerable component.
            readOnly: true
            type: string
          readOnly: true
          type: array
        high:
          description: IDs of `high` level [security problems](https://dt-url.net/p103u1h)
            caused by vulnerable component.
          items:
            description: IDs of `high` level [security problems](https://dt-url.net/p103u1h)
              caused by vulnerable component.
            readOnly: true
            type: string
          readOnly: true
          type: array
        medium:
          description: IDs of `medium` level [security problems](https://dt-url.net/p103u1h)
            caused by vulnerable component.
          items:
            description: IDs of `medium` level [security problems](https://dt-url.net/p103u1h)
              caused by vulnerable component.
            readOnly: true
            type: string
          readOnly: true
          type: array
        low:
          description: IDs of `low` level [security problems](https://dt-url.net/p103u1h)
            caused by vulnerable component.
          items:
            description: IDs of `low` level [security problems](https://dt-url.net/p103u1h)
              caused by vulnerable component.
            readOnly: true
            type: string
          readOnly: true
          type: array
        none:
          description: IDs of `none` level [security problems](https://dt-url.net/p103u1h)
            caused by vulnerable component.
          items:
            description: IDs of `none` level [security problems](https://dt-url.net/p103u1h)
              caused by vulnerable component.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    DavisSecurityAdviceList:
      description: A list of advice from the Davis security advisor.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 6
        advices:
        - high:
          - high
          - high
          critical:
          - critical
          - critical
          low:
          - low
          - low
          name: name
          vulnerableComponent: vulnerableComponent
          technology: DOTNET
          medium:
          - medium
          - medium
          none:
          - none
          - none
          adviceType: UPGRADE
        - high:
          - high
          - high
          critical:
          - critical
          - critical
          low:
          - low
          - low
          name: name
          vulnerableComponent: vulnerableComponent
          technology: DOTNET
          medium:
          - medium
          - medium
          none:
          - none
          - none
          adviceType: UPGRADE
        totalCount: 0
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        advices:
          items:
            $ref: '#/components/schemas/DavisSecurityAdvice'
          type: array
      required:
      - totalCount
      type: object
    Mute:
      description: Information on muting a security problem.
      example:
        reason: CONFIGURATION_NOT_AFFECTED
        comment: comment
      properties:
        reason:
          description: The reason for muting a security problem.
          enum:
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          type: string
          writeOnly: true
        comment:
          description: A comment about the muting reason.
          type: string
          writeOnly: true
      required:
      - comment
      - reason
      type: object
    Unmute:
      description: Information on un-muting a security problem.
      example:
        reason: AFFECTED
        comment: comment
      properties:
        reason:
          description: The reason for un-muting a security problem.
          enum:
          - AFFECTED
          - INITIAL_STATE
          type: string
          writeOnly: true
        comment:
          description: A comment about the un-muting reason.
          type: string
          writeOnly: true
      required:
      - comment
      - reason
      type: object
    MuteState:
      description: information on the muted state of a security problem in relation
        to an event.
      example:
        reason: AFFECTED
        comment: comment
        user: user
      properties:
        user:
          description: The user who has muted or unmuted the problem.
          readOnly: true
          type: string
        reason:
          description: The reason for the mute state change.
          enum:
          - AFFECTED
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - INITIAL_STATE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          readOnly: true
          type: string
        comment:
          description: A comment by the user.
          readOnly: true
          type: string
      readOnly: true
      type: object
    RiskAssessmentSnapshot:
      description: A snapshot of the risk assessment of a security problem.
      example:
        publicExploit: AVAILABLE
        exposure: NOT_AVAILABLE
        numberOfReachableDataAssets: 5
        numberOfAffectedEntities: 5
      properties:
        numberOfAffectedEntities:
          description: The number of currently affected entities.
          format: int32
          readOnly: true
          type: integer
        numberOfReachableDataAssets:
          description: The number of currently reachable data assets by affected entities.
          format: int32
          readOnly: true
          type: integer
        publicExploit:
          description: The availability status of public exploits.
          enum:
          - AVAILABLE
          - NOT_AVAILABLE
          readOnly: true
          type: string
        exposure:
          description: The level of exposure of affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
      readOnly: true
      type: object
    SecurityProblemEvent:
      description: The event of a security problem.
      example:
        reason: SECURITY_PROBLEM_CREATED
        riskAssessmentSnapshot:
          publicExploit: AVAILABLE
          exposure: NOT_AVAILABLE
          numberOfReachableDataAssets: 5
          numberOfAffectedEntities: 5
        muteState:
          reason: AFFECTED
          comment: comment
          user: user
        timestamp: 1
      properties:
        timestamp:
          description: The timestamp when the event occurred.
          format: int64
          readOnly: true
          type: integer
        reason:
          description: The reason of the event creation.
          enum:
          - SECURITY_PROBLEM_CREATED
          - SECURITY_PROBLEM_MUTED
          - SECURITY_PROBLEM_REOPENED
          - SECURITY_PROBLEM_RESOLVED
          - SECURITY_PROBLEM_UNMUTED
          readOnly: true
          type: string
        riskAssessmentSnapshot:
          $ref: '#/components/schemas/RiskAssessmentSnapshot'
        muteState:
          $ref: '#/components/schemas/MuteState'
      type: object
    RiskAssessment:
      description: Risk assessment of a security problem.
      example:
        publicExploit: AVAILABLE
        baseRiskLevel: CRITICAL
        riskLevel: CRITICAL
        riskVector: riskVector
        exposure: NOT_AVAILABLE
        dataAssets: NOT_AVAILABLE
        baseRiskScore: 2.302136
        riskScore: 5.637377
        baseRiskVector: baseRiskVector
      properties:
        riskLevel:
          description: "The Davis risk level. \n\n It is calculated by Dynatrace on\
            \ the basis of CVSS score."
          enum:
          - CRITICAL
          - HIGH
          - LOW
          - MEDIUM
          - NONE
          readOnly: true
          type: string
        riskScore:
          description: "The Davis risk score (1-10). \n\n It is calculated by Dynatrace\
            \ on the basis of CVSS score."
          format: float
          readOnly: true
          type: number
        riskVector:
          description: The attack vector calculated by DT based on the CVSS attack
            vector.
          readOnly: true
          type: string
        baseRiskLevel:
          description: The risk level from the CVSS score.
          enum:
          - CRITICAL
          - HIGH
          - LOW
          - MEDIUM
          - NONE
          readOnly: true
          type: string
        baseRiskScore:
          description: The risk score (1-10) from the CVSS score.
          format: float
          readOnly: true
          type: number
        baseRiskVector:
          description: The original attack vector of the CVSS assessment.
          readOnly: true
          type: string
        exposure:
          description: The level of exposure of affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        dataAssets:
          description: The reachability of related data assets by affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - REACHABLE
          readOnly: true
          type: string
        publicExploit:
          description: The availability status of public exploits.
          enum:
          - AVAILABLE
          - NOT_AVAILABLE
          readOnly: true
          type: string
      readOnly: true
      type: object
    SecurityProblem:
      description: Parameters of a security problem
      example:
        lastUpdatedTimestamp: 5
        securityProblemId: securityProblemId
        technology: DOTNET
        title: title
        firstSeenTimestamp: 1
        url: url
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        externalVulnerabilityId: externalVulnerabilityId
        packageName: packageName
        riskAssessment:
          publicExploit: AVAILABLE
          baseRiskLevel: CRITICAL
          riskLevel: CRITICAL
          riskVector: riskVector
          exposure: NOT_AVAILABLE
          dataAssets: NOT_AVAILABLE
          baseRiskScore: 2.302136
          riskScore: 5.637377
          baseRiskVector: baseRiskVector
        cveIds:
        - cveIds
        - cveIds
        displayId: displayId
        muted: true
        vulnerabilityType: RUNTIME
        status: OPEN
      properties:
        securityProblemId:
          description: The ID of the security problem.
          readOnly: true
          type: string
        displayId:
          description: The displayId of the security problem.
          readOnly: true
          type: string
        status:
          description: The status of the security problem.
          enum:
          - OPEN
          - RESOLVED
          readOnly: true
          type: string
        muted:
          description: Indicates if a security problem is muted.
          readOnly: true
          type: boolean
        externalVulnerabilityId:
          description: The external vulnerability ID of the security problem.
          readOnly: true
          type: string
        vulnerabilityType:
          description: The type of the vulnerability.
          enum:
          - RUNTIME
          - THIRD_PARTY
          readOnly: true
          type: string
        title:
          description: The title of the security problem.
          readOnly: true
          type: string
        packageName:
          description: The package name of the security problem.
          readOnly: true
          type: string
        url:
          description: The URL to the security problem details page.
          readOnly: true
          type: string
        technology:
          description: The technology of the security problem.
          enum:
          - DOTNET
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        firstSeenTimestamp:
          description: The timestamp of the first occurrence of the security problem.
          format: int64
          readOnly: true
          type: integer
        lastUpdatedTimestamp:
          description: The timestamp of the most recent security problem change.
          format: int64
          readOnly: true
          type: integer
        riskAssessment:
          $ref: '#/components/schemas/RiskAssessment'
        managementZones:
          description: Management zones to which the affected entities belong.
          items:
            $ref: '#/components/schemas/ManagementZone'
          readOnly: true
          type: array
        cveIds:
          description: CVE IDs of the security problem.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    SecurityProblemList:
      description: A list of security problems.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 6
        securityProblems:
        - lastUpdatedTimestamp: 5
          securityProblemId: securityProblemId
          technology: DOTNET
          title: title
          firstSeenTimestamp: 1
          url: url
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          externalVulnerabilityId: externalVulnerabilityId
          packageName: packageName
          riskAssessment:
            publicExploit: AVAILABLE
            baseRiskLevel: CRITICAL
            riskLevel: CRITICAL
            riskVector: riskVector
            exposure: NOT_AVAILABLE
            dataAssets: NOT_AVAILABLE
            baseRiskScore: 2.302136
            riskScore: 5.637377
            baseRiskVector: baseRiskVector
          cveIds:
          - cveIds
          - cveIds
          displayId: displayId
          muted: true
          vulnerabilityType: RUNTIME
          status: OPEN
        - lastUpdatedTimestamp: 5
          securityProblemId: securityProblemId
          technology: DOTNET
          title: title
          firstSeenTimestamp: 1
          url: url
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          externalVulnerabilityId: externalVulnerabilityId
          packageName: packageName
          riskAssessment:
            publicExploit: AVAILABLE
            baseRiskLevel: CRITICAL
            riskLevel: CRITICAL
            riskVector: riskVector
            exposure: NOT_AVAILABLE
            dataAssets: NOT_AVAILABLE
            baseRiskScore: 2.302136
            riskScore: 5.637377
            baseRiskVector: baseRiskVector
          cveIds:
          - cveIds
          - cveIds
          displayId: displayId
          muted: true
          vulnerabilityType: RUNTIME
          status: OPEN
        totalCount: 0
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        securityProblems:
          description: A list of security problems.
          items:
            $ref: '#/components/schemas/SecurityProblem'
          readOnly: true
          type: array
      required:
      - totalCount
      type: object
    RelatedContainerImage:
      description: Related container image of a security problem.
      example:
        imageId: imageId
        imageName: imageName
        numberOfAffectedEntities: 3
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        imageId:
          description: The image ID of the related container image.
          readOnly: true
          type: string
        imageName:
          description: The image name of the related container image.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities.
          format: int32
          readOnly: true
          type: integer
        affectedEntities:
          description: A list of affected entities.
          items:
            description: A list of affected entities.
            readOnly: true
            type: string
          readOnly: true
          type: array
      readOnly: true
      type: object
    RelatedEntitiesList:
      description: "A list of related entities of the security problem. \n\nA related\
        \ entity is a monitored entity that is directly or indirectly related to an\
        \ *affected entity* (for example, it could be a host where an affected process\
        \ runs). \n\nEach related entity contains a list of corresponding affected\
        \ entities (for example, an affected process running on this host)."
      example:
        databases:
        - databases
        - databases
        hosts:
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        services:
        - exposure: NOT_AVAILABLE
          id: id
          numberOfAffectedEntities: 9
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - exposure: NOT_AVAILABLE
          id: id
          numberOfAffectedEntities: 9
          affectedEntities:
          - affectedEntities
          - affectedEntities
        kubernetesClusters:
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        kubernetesWorkloads:
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        applications:
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 7
          affectedEntities:
          - affectedEntities
          - affectedEntities
      properties:
        applications:
          description: A list of related applications.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        services:
          description: A list of related services.
          items:
            $ref: '#/components/schemas/RelatedService'
          readOnly: true
          type: array
        hosts:
          description: A list of related hosts.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        databases:
          description: A list of related databases.
          items:
            type: string
          readOnly: true
          type: array
        kubernetesWorkloads:
          description: A list of related Kubernetes workloads.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        kubernetesClusters:
          description: A list of related Kubernetes clusters.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
      readOnly: true
      type: object
    RelatedEntity:
      description: An entity related to a security problem.
      example:
        id: id
        numberOfAffectedEntities: 7
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        id:
          description: The Dynatrace entity ID of the entity.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities related to the entity.
          format: int64
          readOnly: true
          type: integer
        affectedEntities:
          description: A list of affected entities related to the entity.
          items:
            description: A list of affected entities related to the entity.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    RelatedService:
      description: A service related to a security problem.
      example:
        exposure: NOT_AVAILABLE
        id: id
        numberOfAffectedEntities: 9
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        id:
          description: The Dynatrace entity ID of the entity.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities related to the entity.
          format: int64
          readOnly: true
          type: integer
        affectedEntities:
          description: A list of affected entities related to the entity.
          items:
            description: A list of affected entities related to the entity.
            readOnly: true
            type: string
          readOnly: true
          type: array
        exposure:
          description: The level of exposure of the service.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
      type: object
    SecurityProblemDetails:
      description: Parameters of a security problem
      example:
        lastUpdatedTimestamp: 6
        exposedEntities:
        - exposedEntities
        - exposedEntities
        securityProblemId: securityProblemId
        reachableDataAssets:
        - reachableDataAssets
        - reachableDataAssets
        description: description
        technology: DOTNET
        title: title
        firstSeenTimestamp: 0
        affectedEntities:
        - affectedEntities
        - affectedEntities
        relatedContainerImages:
        - containerImages:
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 3
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 3
            affectedEntities:
            - affectedEntities
            - affectedEntities
        - containerImages:
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 3
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 3
            affectedEntities:
            - affectedEntities
            - affectedEntities
        url: url
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        vulnerableComponents:
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 2
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 2
          affectedEntities:
          - affectedEntities
          - affectedEntities
        externalVulnerabilityId: externalVulnerabilityId
        packageName: packageName
        riskAssessment:
          publicExploit: AVAILABLE
          baseRiskLevel: CRITICAL
          riskLevel: CRITICAL
          riskVector: riskVector
          exposure: NOT_AVAILABLE
          dataAssets: NOT_AVAILABLE
          baseRiskScore: 2.302136
          riskScore: 5.637377
          baseRiskVector: baseRiskVector
        cveIds:
        - cveIds
        - cveIds
        displayId: displayId
        relatedEntities:
          databases:
          - databases
          - databases
          hosts:
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          services:
          - exposure: NOT_AVAILABLE
            id: id
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - exposure: NOT_AVAILABLE
            id: id
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
          kubernetesClusters:
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          kubernetesWorkloads:
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          applications:
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 7
            affectedEntities:
            - affectedEntities
            - affectedEntities
        muted: true
        vulnerabilityType: RUNTIME
        events:
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 5
            numberOfAffectedEntities: 5
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 1
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 5
            numberOfAffectedEntities: 5
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 1
        status: OPEN
      properties:
        securityProblemId:
          description: The ID of the security problem.
          readOnly: true
          type: string
        displayId:
          description: The displayId of the security problem.
          readOnly: true
          type: string
        status:
          description: The status of the security problem.
          enum:
          - OPEN
          - RESOLVED
          readOnly: true
          type: string
        muted:
          description: Indicates if a security problem is muted.
          readOnly: true
          type: boolean
        externalVulnerabilityId:
          description: The external vulnerability ID of the security problem.
          readOnly: true
          type: string
        vulnerabilityType:
          description: The type of the vulnerability.
          enum:
          - RUNTIME
          - THIRD_PARTY
          readOnly: true
          type: string
        title:
          description: The title of the security problem.
          readOnly: true
          type: string
        packageName:
          description: The package name of the security problem.
          readOnly: true
          type: string
        url:
          description: The URL to the security problem details page.
          readOnly: true
          type: string
        description:
          description: The description of the security problem.
          readOnly: true
          type: string
        technology:
          description: The technology of the security problem.
          enum:
          - DOTNET
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        firstSeenTimestamp:
          description: The timestamp of the first occurrence of the security problem.
          format: int64
          readOnly: true
          type: integer
        lastUpdatedTimestamp:
          description: The timestamp of the most recent security problem change.
          format: int64
          readOnly: true
          type: integer
        riskAssessment:
          $ref: '#/components/schemas/RiskAssessment'
        managementZones:
          description: Management zones to which the affected entities belong.
          items:
            $ref: '#/components/schemas/ManagementZone'
          readOnly: true
          type: array
        cveIds:
          description: CVE IDs of the security problem.
          items:
            type: string
          readOnly: true
          type: array
        events:
          description: An ordered (newest first) list of events of the security problem.
          items:
            $ref: '#/components/schemas/SecurityProblemEvent'
          type: array
        vulnerableComponents:
          description: "A list of vulnerable components of the security problem. \n\
            \nA vulnerable component is what causes the security problem."
          items:
            $ref: '#/components/schemas/VulnerableComponent'
          readOnly: true
          type: array
        affectedEntities:
          description: "A list of affected entities of the security problem. \n\n\
            An affected entity is an entity where a vulnerable component runs."
          items:
            type: string
          readOnly: true
          type: array
        exposedEntities:
          description: "A list of exposed entities of the security problem. \n\nAn\
            \ exposed entity is an affected entity that is exposed to the internet."
          items:
            type: string
          readOnly: true
          type: array
        reachableDataAssets:
          description: "A list of data assets reachable by affected entities of the\
            \ security problem. \n\nA data asset is a service that has database access."
          items:
            type: string
          readOnly: true
          type: array
        relatedEntities:
          $ref: '#/components/schemas/RelatedEntitiesList'
        relatedContainerImages:
          description: "A list of related container images of the security problem.\
            \ \n\nA related container image is a container image that contains at\
            \ least one *affected entity*."
          items:
            $ref: '#/components/schemas/SecurityProblemDetails_relatedContainerImages'
          readOnly: true
          type: array
      type: object
    VulnerableComponent:
      description: Vulnerable component of a security problem.
      example:
        fileName: fileName
        displayName: displayName
        id: id
        numberOfAffectedEntities: 2
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        id:
          description: The Dynatrace entity ID of the vulnerable component.
          readOnly: true
          type: string
        displayName:
          description: The display name of the vulnerable component.
          readOnly: true
          type: string
        fileName:
          description: The file name of the vulnerable component.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities.
          format: int32
          readOnly: true
          type: integer
        affectedEntities:
          description: The list of affected entities.
          items:
            description: The list of affected entities.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    SchemasList:
      example:
        versions:
        - 1.2.3
        - 1.2.3
      properties:
        versions:
          description: A list of schema versions.
          items:
            description: Extension version
            example: 1.2.3
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
            type: string
          type: array
      type: object
    ExtensionMonitoringConfiguration:
      example:
        scope: scope
        value: value
        objectId: objectId
      properties:
        objectId:
          description: Configuration id
          type: string
        scope:
          description: Configuration scope
          type: string
        value:
          description: Configuration
          type: string
      type: object
    ExtensionMonitoringConfigurationsList:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 6
        totalCount: 0
        items:
        - scope: scope
          value: value
          objectId: objectId
        - scope: scope
          value: value
          objectId: objectId
      properties:
        items:
          description: A list of extension monitoring configurations.
          items:
            $ref: '#/components/schemas/ExtensionMonitoringConfiguration'
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
      required:
      - totalCount
      type: object
    MonitoringConfigurationResponse:
      example:
        code: 0
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        objectId:
          description: The identifier of the new configuration
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        code:
          description: The HTTP Status code
          format: int32
          type: integer
      type: object
    JsonNode:
      description: The monitoring configuration
      type: object
    MonitoringConfigurationUpdateDto:
      example:
        value: '{}'
      properties:
        value:
          description: The monitoring configuration
          type: object
      type: object
    ExtensionEventDto:
      description: A list of extension events.
      example:
        severity: severity
        content: content
        timestamp: timestamp
      properties:
        timestamp:
          description: Timestamp of the latest event
          type: string
        severity:
          description: Severity of the latest event
          type: string
        content:
          description: Content
          type: string
      type: object
    ExtensionEventsList:
      example:
        extensionEvents:
        - severity: severity
          content: content
          timestamp: timestamp
        - severity: severity
          content: content
          timestamp: timestamp
      properties:
        extensionEvents:
          description: A list of extension events.
          items:
            $ref: '#/components/schemas/ExtensionEventDto'
          type: array
      type: object
    ExtensionStatusDto:
      example:
        timestamp: 0
        status: status
      properties:
        timestamp:
          description: Timestamp of the latest status of given configuration.
          format: int64
          type: integer
        status:
          description: Latest status of given configuration.
          type: string
      type: object
    SchemaFiles:
      example:
        files:
        - files
        - files
      properties:
        files:
          description: A list of schema files.
          items:
            description: A list of schema files.
            type: string
          type: array
      type: object
    ExtensionList:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        extensions:
        - extensionName: extensionName
          version: 1.2.3
        - extensionName: extensionName
          version: 1.2.3
        pageSize: 6
        totalCount: 0
      properties:
        extensions:
          description: A list of extensions.
          items:
            $ref: '#/components/schemas/MinimalExtension'
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
      required:
      - totalCount
      type: object
    MinimalExtension:
      description: A list of extensions.
      example:
        extensionName: extensionName
        version: 1.2.3
      properties:
        extensionName:
          description: Extension name
          type: string
        version:
          description: Extension version
          example: 1.2.3
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
      type: object
    AuthorDto:
      description: Extension author
      example:
        name: name
      properties:
        name:
          description: Author name
          type: string
      type: object
    Extension:
      example:
        featureSets:
        - featureSets
        - featureSets
        extensionName: extensionName
        variables:
        - variables
        - variables
        author:
          name: name
        minDynatraceVersion: minDynatraceVersion
        fileHash: fileHash
        version: 1.2.3
        dataSources:
        - dataSources
        - dataSources
      properties:
        extensionName:
          description: Extension name
          type: string
        version:
          description: Extension version
          example: 1.2.3
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
        author:
          $ref: '#/components/schemas/AuthorDto'
        dataSources:
          description: Data sources that extension uses to gather data
          items:
            description: Data sources that extension uses to gather data
            type: string
          type: array
        variables:
          description: Custom variables used in extension configuration
          items:
            description: Custom variables used in extension configuration
            type: string
          type: array
        featureSets:
          description: Available feature sets
          items:
            description: Available feature sets
            type: string
          type: array
          uniqueItems: true
        minDynatraceVersion:
          description: Minimal Dynatrace version that works with the extension
          type: string
        fileHash:
          description: SHA-256 hash of uploaded Extension file
          type: string
      type: object
    ComplexConstraint:
      description: A constraint on the values accepted for a complex settings property.
      example:
        customValidatorId: my-min-max
        customMessage: customMessage
        minimumPropertyCount: 1
        type: CUSTOM_VALIDATOR_REF
        maximumPropertyCount: 2
        properties:
        - properties
        - properties
      properties:
        maximumPropertyCount:
          description: The maximum number of properties that can be set.
          example: 2
          format: int32
          type: integer
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        minimumPropertyCount:
          description: The minimum number of properties that must be set.
          example: 1
          format: int32
          type: integer
        customMessage:
          description: A custom message for invalid values.
          type: string
        properties:
          description: A list of properties (defined by IDs) that are used to check
            the constraint.
          items:
            description: A list of properties (defined by IDs) that are used to check
              the constraint.
            type: string
          type: array
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LESS_THAN
          - LESS_THAN_OR_EQUAL
          - PROPERTY_COUNT_RANGE
          - UNKNOWN
          type: string
      type: object
    Constraint:
      description: A constraint on the values accepted for a settings property.
      example:
        customValidatorId: my-min-max
        minLength: 7
        pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
        customMessage: customConstraintMessage
        maximum: 200
        type: UNKNOWN
        minimum: 3
        maxLength: 20
        uniqueProperties:
        - my-prop-1
        - my-prop-2
      properties:
        maxLength:
          description: The maximum allowed length of string values.
          example: 20
          format: int32
          type: integer
        minLength:
          description: The minimum required length of string values.
          example: 7
          format: int32
          type: integer
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        uniqueProperties:
          description: A list of properties for which the combination of values must
            be unique.
          example:
          - my-prop-1
          - my-prop-2
          items:
            description: A list of properties for which the combination of values
              must be unique.
            example: '["my-prop-1","my-prop-2"]'
            type: string
          type: array
        customMessage:
          description: A custom message for invalid values.
          example: customConstraintMessage
          type: string
        maximum:
          description: The maximum allowed value.
          example: 200
          type: number
        minimum:
          description: The minimum allowed value.
          example: 3
          type: number
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - LENGTH
          - NOT_BLANK
          - NOT_EMPTY
          - NO_WHITESPACE
          - PATTERN
          - RANGE
          - REGEX
          - TRIMMED
          - UNIQUE
          - UNKNOWN
          example: UNKNOWN
          type: string
        pattern:
          description: The regular expression pattern for valid string values.
          example: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          type: string
      type: object
    EnumType:
      description: Definition of an enum property.
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        description: typeDescription
        enumClass: enumClass
        type: enum
        items:
        - displayName: exampleDisplayName
          icon: checkmark
          enumInstance: exampleJavaEnumValue
          description: exampleDescription
          value: exampleValue
        - displayName: exampleDisplayName
          icon: checkmark
          enumInstance: exampleJavaEnumValue
          description: exampleDescription
          value: exampleValue
      properties:
        items:
          description: A list of allowed values of the enum.
          items:
            $ref: '#/components/schemas/EnumValue'
          type: array
        enumClass:
          description: An existing Java enum class that holds the allowed values of
            the enum.
          example: enumClass
          type: string
        type:
          description: The type of the property.
          enum:
          - enum
          example: enum
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
      type: object
    EnumValue:
      description: An allowed value for an enum property.
      example:
        displayName: exampleDisplayName
        icon: checkmark
        enumInstance: exampleJavaEnumValue
        description: exampleDescription
        value: exampleValue
      properties:
        enumInstance:
          description: The name of the value in an existing Java enum class.
          example: exampleJavaEnumValue
          type: string
        icon:
          description: The icon of the value.
          example: checkmark
          type: string
        value:
          description: The allowed value of the enum.
          example: exampleValue
          type: object
        displayName:
          description: The display name of the value.
          example: exampleDisplayName
          type: string
        description:
          description: A short description of the value.
          example: exampleDescription
          type: string
      type: object
    Item:
      description: An item of a collection property.
      example:
        displayName: itemDisplayName
        documentation: propertyDocumentation
        description: itemDescription
        subType: itemSubType
        referencedType: itemReferencedType
        type: '{}'
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
      properties:
        referencedType:
          description: The type referenced by the item's value.
          example: itemReferencedType
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        subType:
          description: The subtype of the item's value.
          example: itemSubType
          type: string
        type:
          description: The type of the item's value.
          type: object
        displayName:
          description: The display name of the item.
          example: itemDisplayName
          type: string
        description:
          description: A short description of the item.
          example: itemDescription
          type: string
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
      type: object
    Precondition:
      description: A precondition for visibility of a property.
      example:
        preconditions:
        - null
        - null
        expectedValue: expectedValue
        property: propertyToEvaluate
        type: "NULL"
        expectedValues: expectedValues
      properties:
        precondition:
          $ref: '#/components/schemas/Precondition'
        expectedValues:
          description: "A list of valid values of the property. \n\nOnly applicable\
            \ to properties of the `IN` type."
          example: expectedValues
          items:
            type: object
          type: array
        preconditions:
          description: "A list of child preconditions to be evaluated. \n\nOnly applicable\
            \ to properties of the `AND` and `OR` types."
          items:
            $ref: '#/components/schemas/Precondition'
          type: array
        expectedValue:
          description: "The expected value of the property. \n\nOnly applicable to\
            \ properties of the `EQUALS` type."
          example: expectedValue
          type: object
        property:
          description: The property to be evaluated.
          example: propertyToEvaluate
          type: string
        type:
          description: The type of the precondition.
          enum:
          - AND
          - EQUALS
          - IN
          - NOT
          - "NULL"
          - OR
          example: "NULL"
          type: string
      type: object
    PropertyDefinition:
      description: Configuration of a property in a settings schema.
      example:
        metadata:
          key: metadata
        nullable: true
        minObjects: 1
        displayName: propertyDisplayName
        documentation: propertyDocumentation
        description: propertyDescription
        referencedType: propertyReferencedType
        precondition:
          preconditions:
          - null
          - null
          expectedValue: expectedValue
          property: propertyToEvaluate
          type: "NULL"
          expectedValues: expectedValues
        type: '{}'
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        default: propertyDefaultValue
        subType: propertySubType
        maxObjects: 0
        items:
          displayName: itemDisplayName
          documentation: propertyDocumentation
          description: itemDescription
          subType: itemSubType
          referencedType: itemReferencedType
          type: '{}'
          constraints:
          - customValidatorId: my-min-max
            minLength: 7
            pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
          - customValidatorId: my-min-max
            minLength: 7
            pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
      properties:
        items:
          $ref: '#/components/schemas/Item'
        referencedType:
          description: The type referenced by the property value
          example: propertyReferencedType
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        maxObjects:
          description: "The maximum number of **objects** in a collection property.\
            \ \n\n Has the value of `1` for singletons."
          format: int32
          type: integer
        precondition:
          $ref: '#/components/schemas/Precondition'
        minObjects:
          description: The minimum number of **objects** in a collection property.
          example: 1
          format: int32
          type: integer
        subType:
          description: The subtype of the property's value.
          example: propertySubType
          type: string
        default:
          description: "The default value to be used when no value is provided. \n\
            \nIf a non-singleton has the value of `null`, it means an empty collection."
          example: propertyDefaultValue
          type: object
        type:
          description: The type of the property's value.
          type: object
        displayName:
          description: The display name of the property.
          example: propertyDisplayName
          type: string
        description:
          description: A short description of the property.
          example: propertyDescription
          type: string
        metadata:
          additionalProperties:
            description: Metadata of the property.
            type: string
          description: Metadata of the property.
          type: object
        nullable:
          description: The value can (`true`) or can't (`false`) be `null`.
          example: true
          type: boolean
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
      type: object
    SchemaDefinitionRestDto:
      example:
        ordered: true
        types:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            description: typeDescription
            versionInfo: Added new property
            version: "0"
            constraints:
            - customValidatorId: my-min-max
              customMessage: customMessage
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            - customValidatorId: my-min-max
              customMessage: customMessage
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            summaryPattern: summaryPatternOfType
            properties:
              key:
                metadata:
                  key: metadata
                nullable: true
                minObjects: 1
                displayName: propertyDisplayName
                documentation: propertyDocumentation
                description: propertyDescription
                referencedType: propertyReferencedType
                precondition:
                  preconditions:
                  - null
                  - null
                  expectedValue: expectedValue
                  property: propertyToEvaluate
                  type: "NULL"
                  expectedValues: expectedValues
                type: '{}'
                constraints:
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                default: propertyDefaultValue
                subType: propertySubType
                maxObjects: 0
                items:
                  displayName: itemDisplayName
                  documentation: propertyDocumentation
                  description: itemDescription
                  subType: itemSubType
                  referencedType: itemReferencedType
                  type: '{}'
                  constraints:
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
        metadata:
          key: metadata
        displayName: Anomaly detection for infrastructure
        documentation: documentation
        dynatrace: "1.0"
        description: Dynatrace automatically detects infrastructure-related performance
          anomalies such as high CPU saturation, memory outages, and low disk-space
          conditions
        version: 1.4.2
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        allowedScopes:
        - host
        - application
        enums:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            description: typeDescription
            enumClass: enumClass
            type: enum
            items:
            - displayName: exampleDisplayName
              icon: checkmark
              enumInstance: exampleJavaEnumValue
              description: exampleDescription
              value: exampleValue
            - displayName: exampleDisplayName
              icon: checkmark
              enumInstance: exampleJavaEnumValue
              description: exampleDescription
              value: exampleValue
        multiObject: true
        schemaId: builtin:anomaly.infrastructure
        maxObjects: 10
        properties:
          key:
            metadata:
              key: metadata
            nullable: true
            minObjects: 1
            displayName: propertyDisplayName
            documentation: propertyDocumentation
            description: propertyDescription
            referencedType: propertyReferencedType
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              property: propertyToEvaluate
              type: "NULL"
              expectedValues: expectedValues
            type: '{}'
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            subType: propertySubType
            maxObjects: 0
            items:
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              referencedType: itemReferencedType
              type: '{}'
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
      properties:
        dynatrace:
          description: The version of the data format.
          example: "1.0"
          type: string
        schemaId:
          description: The ID of the schema.
          example: builtin:anomaly.infrastructure
          type: string
        displayName:
          description: The display name of the schema.
          example: Anomaly detection for infrastructure
          type: string
        description:
          description: A short description of the schema.
          example: Dynatrace automatically detects infrastructure-related performance
            anomalies such as high CPU saturation, memory outages, and low disk-space
            conditions
          type: string
        documentation:
          description: An extended description of the schema and/or links to documentation.
          type: string
        version:
          description: The version of the schema.
          example: 1.4.2
          type: string
        multiObject:
          description: Multiple (`true`) objects per scope are permitted or a single
            (`false`) object per scope is permitted.
          type: boolean
        ordered:
          description: "If `true` the order of objects has semantic significance.\
            \ \n\nOnly applicable when **multiObject** is set to `true`."
          type: boolean
        maxObjects:
          description: "The maximum amount of objects per scope. \n\nOnly applicable\
            \ when **multiObject** is set to `true`."
          example: 10
          format: int32
          type: integer
        allowedScopes:
          description: A list of scopes where the schema can be used.
          example:
          - host
          - application
          items:
            type: string
          type: array
        enums:
          additionalProperties:
            $ref: '#/components/schemas/EnumType'
          description: A list of definitions of enum properties.
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: "A list of definitions of types. \n\n A type is a complex property\
            \ that contains its own set of subproperties."
          type: object
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: A list of schema's properties.
          type: object
        constraints:
          description: A list of constrains limiting the values to be accepted by
            the schema.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        metadata:
          additionalProperties:
            description: Metadata of the setting.
            type: string
          description: Metadata of the setting.
          type: object
      type: object
    SchemaType:
      description: "A list of definitions of types. \n\n A type is a complex property\
        \ that contains its own set of subproperties."
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        description: typeDescription
        versionInfo: Added new property
        version: "0"
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        summaryPattern: summaryPatternOfType
        properties:
          key:
            metadata:
              key: metadata
            nullable: true
            minObjects: 1
            displayName: propertyDisplayName
            documentation: propertyDocumentation
            description: propertyDescription
            referencedType: propertyReferencedType
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              property: propertyToEvaluate
              type: "NULL"
              expectedValues: expectedValues
            type: '{}'
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            subType: propertySubType
            maxObjects: 0
            items:
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              referencedType: itemReferencedType
              type: '{}'
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: ^([a-z]|[0-9]|\-|\_|\+|\.)+\@([a-z]|[0-9]|-){2,}\.([a-z]|[0-9]|-){2,}(\.[a-z]{2,})?$
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
      properties:
        summaryPattern:
          description: The pattern for the summary (for example, "Alert after *X*
            minutes.") of the configuration in the UI.
          example: summaryPatternOfType
          type: string
        versionInfo:
          description: A short description of the version.
          example: Added new property
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: Definition of properties that can be persisted.
          type: object
        version:
          description: The version of the type.
          example: "0"
          type: string
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
      type: object
    ExtensionEnvironmentConfigurationVersion:
      example:
        version: 1.2.3
      properties:
        version:
          description: Extension version
          example: 1.2.3
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*))?(\.(0|[1-9]\d*))?
          type: string
      required:
      - version
      type: object
    MonitoringConfigurationDto:
      example:
        scope: HOST-D3A3C5A146830A79
        value: '{}'
      properties:
        scope:
          description: The scope this monitoring configuration will be defined for
          example: HOST-D3A3C5A146830A79
          minLength: 1
          type: string
        value:
          description: The monitoring configuration
          type: object
      required:
      - scope
      type: object
    Comment:
      description: The comment to a problem.
      example:
        createdAtTimestamp: 6
        authorName: authorName
        context: context
        id: id
        content: content
      properties:
        authorName:
          description: The user who wrote the comment.
          type: string
        createdAtTimestamp:
          description: The timestamp of comment creation, in UTC milliseconds.
          format: int64
          type: integer
        context:
          description: The context of the comment.
          type: string
        id:
          description: The ID of the comment.
          type: string
        content:
          description: The text of the comment.
          type: string
      required:
      - createdAtTimestamp
      type: object
    ProblemCloseResult:
      description: The result of closing a problem.
      example:
        closing: true
        comment:
          createdAtTimestamp: 6
          authorName: authorName
          context: context
          id: id
          content: content
        problemId: problemId
        closeTimestamp: 0
      properties:
        closeTimestamp:
          description: The timestamp when the user triggered the closing.
          format: int64
          type: integer
        problemId:
          description: The ID of the problem.
          type: string
        comment:
          $ref: '#/components/schemas/Comment'
        closing:
          description: True, if the problem is being closed.
          type: boolean
      required:
      - closeTimestamp
      - closing
      - problemId
      type: object
    ClosingComment:
      description: The closing comment on a problem.
      example:
        message: message
      properties:
        message:
          description: The text of the closing comment.
          type: string
      type: object
    CommentRequestDtoImpl:
      example:
        context: context
        message: message
      properties:
        message:
          description: The text of the comment.
          type: string
        context:
          description: The context of the comment.
          type: string
      required:
      - message
      type: object
    AlertingProfileStub:
      description: Short representation of the alerting profile.
      example:
        name: name
        id: id
      properties:
        name:
          description: The name of the alerting profile.
          type: string
        id:
          description: The ID of the alerting profile.
          type: string
      required:
      - id
      type: object
    ApplicationImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to an application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    AvailabilityEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - $ref: '#/components/schemas/AvailabilityEvidence_allOf'
      description: "The availability evidence of the problem. \n\nIndicates an entity\
        \ that has been unavailable during the problem lifespan and that might be\
        \ related to the root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    CommentsList:
      description: A list of comments.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        comments:
        - createdAtTimestamp: 6
          authorName: authorName
          context: context
          id: id
          content: content
        - createdAtTimestamp: 6
          authorName: authorName
          context: context
          id: id
          content: content
        pageSize: 6
        totalCount: 0
      properties:
        comments:
          description: The result entries.
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    CustomApplicationImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to a custom application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    EventEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - $ref: '#/components/schemas/EventEvidence_allOf'
      description: "The event evidence of the problem. \n\nAn event that occurred\
        \ during the problem lifespan that might be related to the root cause."
      required:
      - displayName
      - entity
      - eventId
      - eventType
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    Evidence:
      description: An evidence of a root cause.
      discriminator:
        propertyName: evidenceType
      example:
        displayName: displayName
        evidenceType: AVAILABILITY_EVIDENCE
        startTime: 5
        groupingEntity:
          name: name
          entityId:
            id: id
            type: type
        entity:
          name: name
          entityId:
            id: id
            type: type
        rootCauseRelevant: true
      properties:
        evidenceType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `EVENT` -> EventEvidence \n* `METRIC`\
            \ -> MetricEvidence \n* `TRANSACTIONAL` -> TransactionalEvidence \n* `MAINTENANCE_WINDOW`\
            \ -> MaintenanceWindowEvidence \n* `AVAILABILITY_EVIDENCE` -> AvailabilityEvidence\
            \ \n"
          enum:
          - AVAILABILITY_EVIDENCE
          - EVENT
          - MAINTENANCE_WINDOW
          - METRIC
          - TRANSACTIONAL
          type: string
        displayName:
          description: The display name of the evidence.
          type: string
        entity:
          $ref: '#/components/schemas/EntityStub'
        groupingEntity:
          $ref: '#/components/schemas/EntityStub'
        rootCauseRelevant:
          description: The evidence is (`true`) or is not (`false`) a part of the
            root cause.
          type: boolean
        startTime:
          description: The start time of the evidence, in UTC milliseconds.
          format: int64
          type: integer
      required:
      - displayName
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    EvidenceDetails:
      description: The evidence details of a problem.
      example:
        details:
        - displayName: displayName
          evidenceType: AVAILABILITY_EVIDENCE
          startTime: 5
          groupingEntity:
            name: name
            entityId:
              id: id
              type: type
          entity:
            name: name
            entityId:
              id: id
              type: type
          rootCauseRelevant: true
        - displayName: displayName
          evidenceType: AVAILABILITY_EVIDENCE
          startTime: 5
          groupingEntity:
            name: name
            entityId:
              id: id
              type: type
          entity:
            name: name
            entityId:
              id: id
              type: type
          rootCauseRelevant: true
        totalCount: 5
      properties:
        totalCount:
          description: The total number of evidence of a problem.
          format: int64
          type: integer
        details:
          description: A list of all evidence.
          items:
            $ref: '#/components/schemas/Evidence'
          type: array
      required:
      - totalCount
      type: object
    Impact:
      description: The impact analysis of the problem on other entities/users.
      discriminator:
        propertyName: impactType
      example:
        estimatedAffectedUsers: 1
        impactedEntity:
          name: name
          entityId:
            id: id
            type: type
        impactType: APPLICATION
      properties:
        impactType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `SERVICE` -> ServiceImpact \n* `APPLICATION`\
            \ -> ApplicationImpact \n* `MOBILE` -> MobileImpact \n* `CUSTOM_APPLICATION`\
            \ -> CustomApplicationImpact \n"
          enum:
          - APPLICATION
          - CUSTOM_APPLICATION
          - MOBILE
          - SERVICE
          type: string
        impactedEntity:
          $ref: '#/components/schemas/EntityStub'
        estimatedAffectedUsers:
          description: The estimated number of affected users.
          format: int64
          type: integer
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    ImpactAnalysis:
      description: A list of all impacts of the problem.
      example:
        impacts:
        - estimatedAffectedUsers: 1
          impactedEntity:
            name: name
            entityId:
              id: id
              type: type
          impactType: APPLICATION
        - estimatedAffectedUsers: 1
          impactedEntity:
            name: name
            entityId:
              id: id
              type: type
          impactType: APPLICATION
      properties:
        impacts:
          description: A list of all impacts of the problem.
          items:
            $ref: '#/components/schemas/Impact'
          type: array
      type: object
    LinkedProblem:
      description: The properties of the linked problem.
      example:
        displayId: displayId
        problemId: problemId
      properties:
        displayId:
          description: The display ID of the problem.
          type: string
        problemId:
          description: The ID of the problem.
          type: string
      required:
      - displayId
      - problemId
      type: object
    MaintenanceWindowEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - $ref: '#/components/schemas/MaintenanceWindowEvidence_allOf'
      description: "The  maintenance window evidence of the problem. \n\nThe maintenance\
        \ window during which the problem occurred."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - maintenanceWindowConfigId
      - rootCauseRelevant
      - startTime
      type: object
    MetricEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - $ref: '#/components/schemas/MetricEvidence_allOf'
      description: "The metric evidence of the problem. \n\nA change of metric behavior\
        \ that indicates the problem and/or is its root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - metricId
      - rootCauseRelevant
      - startTime
      - unit
      - valueAfterChangePoint
      - valueBeforeChangePoint
      type: object
    MobileImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to a mobile application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    Problem:
      description: The properties of a problem.
      example:
        linkedProblemInfo:
          displayId: displayId
          problemId: problemId
        impactedEntities:
        - name: name
          entityId:
            id: id
            type: type
        - name: name
          entityId:
            id: id
            type: type
        problemFilters:
        - name: name
          id: id
        - name: name
          id: id
        entityTags:
        - stringRepresentation: stringRepresentation
          context: context
          value: value
          key: key
        - stringRepresentation: stringRepresentation
          context: context
          value: value
          key: key
        rootCauseEntity:
          name: name
          entityId:
            id: id
            type: type
        recentComments:
          nextPageKey: AQAAABQBAAAABQ==
          comments:
          - createdAtTimestamp: 6
            authorName: authorName
            context: context
            id: id
            content: content
          - createdAtTimestamp: 6
            authorName: authorName
            context: context
            id: id
            content: content
          pageSize: 6
          totalCount: 0
        title: title
        affectedEntities:
        - name: name
          entityId:
            id: id
            type: type
        - name: name
          entityId:
            id: id
            type: type
        impactLevel: APPLICATION
        severityLevel: AVAILABILITY
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        impactAnalysis:
          impacts:
          - estimatedAffectedUsers: 1
            impactedEntity:
              name: name
              entityId:
                id: id
                type: type
            impactType: APPLICATION
          - estimatedAffectedUsers: 1
            impactedEntity:
              name: name
              entityId:
                id: id
                type: type
            impactType: APPLICATION
        startTime: 2
        endTime: 7
        displayId: displayId
        problemId: problemId
        evidenceDetails:
          details:
          - displayName: displayName
            evidenceType: AVAILABILITY_EVIDENCE
            startTime: 5
            groupingEntity:
              name: name
              entityId:
                id: id
                type: type
            entity:
              name: name
              entityId:
                id: id
                type: type
            rootCauseRelevant: true
          - displayName: displayName
            evidenceType: AVAILABILITY_EVIDENCE
            startTime: 5
            groupingEntity:
              name: name
              entityId:
                id: id
                type: type
            entity:
              name: name
              entityId:
                id: id
                type: type
            rootCauseRelevant: true
          totalCount: 5
        status: CLOSED
      properties:
        impactLevel:
          description: The impact level of the problem. It shows what is affected
            by the problem.
          enum:
          - APPLICATION
          - ENVIRONMENT
          - INFRASTRUCTURE
          - SERVICES
          type: string
        recentComments:
          $ref: '#/components/schemas/CommentsList'
        rootCauseEntity:
          $ref: '#/components/schemas/EntityStub'
        impactAnalysis:
          $ref: '#/components/schemas/ImpactAnalysis'
        linkedProblemInfo:
          $ref: '#/components/schemas/LinkedProblem'
        problemFilters:
          description: A list of alerting profiles that match the problem.
          items:
            $ref: '#/components/schemas/AlertingProfileStub'
          type: array
          uniqueItems: true
        evidenceDetails:
          $ref: '#/components/schemas/EvidenceDetails'
        impactedEntities:
          description: A list of all entities that are impacted by the problem.
          items:
            $ref: '#/components/schemas/EntityStub'
          type: array
          uniqueItems: true
        managementZones:
          description: A list of all management zones that the problem belongs to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          type: array
          uniqueItems: true
        entityTags:
          description: A list of all entity tags of the problem.
          items:
            $ref: '#/components/schemas/METag'
          type: array
          uniqueItems: true
        affectedEntities:
          description: A list of all entities that are affected by the problem.
          items:
            $ref: '#/components/schemas/EntityStub'
          type: array
          uniqueItems: true
        displayId:
          description: The display ID of the problem.
          type: string
        problemId:
          description: The ID of the problem.
          type: string
        severityLevel:
          description: The severity of the problem.
          enum:
          - AVAILABILITY
          - CUSTOM_ALERT
          - ERROR
          - MONITORING_UNAVAILABLE
          - PERFORMANCE
          - RESOURCE_CONTENTION
          type: string
        title:
          description: The name of the problem, displayed in the UI.
          type: string
        status:
          description: The status of the problem.
          enum:
          - CLOSED
          - OPEN
          type: string
        startTime:
          description: The start timestamp of the problem, in UTC milliseconds.
          format: int64
          type: integer
        endTime:
          description: "The end timestamp of the problem, in UTC milliseconds. \n\n\
            \ Has `-1` value, if the problem is still open."
          format: int64
          type: integer
      required:
      - displayId
      - endTime
      - impactLevel
      - problemId
      - severityLevel
      - startTime
      - status
      - title
      type: object
    Problems:
      description: A list of problems.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        warnings:
        - warnings
        - warnings
        pageSize: 6
        totalCount: 0
        problems:
        - linkedProblemInfo:
            displayId: displayId
            problemId: problemId
          impactedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          problemFilters:
          - name: name
            id: id
          - name: name
            id: id
          entityTags:
          - stringRepresentation: stringRepresentation
            context: context
            value: value
            key: key
          - stringRepresentation: stringRepresentation
            context: context
            value: value
            key: key
          rootCauseEntity:
            name: name
            entityId:
              id: id
              type: type
          recentComments:
            nextPageKey: AQAAABQBAAAABQ==
            comments:
            - createdAtTimestamp: 6
              authorName: authorName
              context: context
              id: id
              content: content
            - createdAtTimestamp: 6
              authorName: authorName
              context: context
              id: id
              content: content
            pageSize: 6
            totalCount: 0
          title: title
          affectedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          impactLevel: APPLICATION
          severityLevel: AVAILABILITY
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          impactAnalysis:
            impacts:
            - estimatedAffectedUsers: 1
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
            - estimatedAffectedUsers: 1
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
          startTime: 2
          endTime: 7
          displayId: displayId
          problemId: problemId
          evidenceDetails:
            details:
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 5
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 5
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            totalCount: 5
          status: CLOSED
        - linkedProblemInfo:
            displayId: displayId
            problemId: problemId
          impactedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          problemFilters:
          - name: name
            id: id
          - name: name
            id: id
          entityTags:
          - stringRepresentation: stringRepresentation
            context: context
            value: value
            key: key
          - stringRepresentation: stringRepresentation
            context: context
            value: value
            key: key
          rootCauseEntity:
            name: name
            entityId:
              id: id
              type: type
          recentComments:
            nextPageKey: AQAAABQBAAAABQ==
            comments:
            - createdAtTimestamp: 6
              authorName: authorName
              context: context
              id: id
              content: content
            - createdAtTimestamp: 6
              authorName: authorName
              context: context
              id: id
              content: content
            pageSize: 6
            totalCount: 0
          title: title
          affectedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          impactLevel: APPLICATION
          severityLevel: AVAILABILITY
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          impactAnalysis:
            impacts:
            - estimatedAffectedUsers: 1
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
            - estimatedAffectedUsers: 1
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
          startTime: 2
          endTime: 7
          displayId: displayId
          problemId: problemId
          evidenceDetails:
            details:
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 5
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 5
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            totalCount: 5
          status: CLOSED
      properties:
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        problems:
          description: The result entries.
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        warnings:
          description: A list of warnings
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - totalCount
      type: object
    ServiceImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      - $ref: '#/components/schemas/ServiceImpact_allOf'
      description: Analysis of problem impact to a service.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      - numberOfPotentiallyAffectedServiceCalls
      type: object
    TransactionalEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - $ref: '#/components/schemas/TransactionalEvidence_allOf'
      description: "The transactional evidence of the problem. \n\nA behavior of a\
        \ metric in an transaction that indicates the problem and/or is its root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      - unit
      - valueAfterChangePoint
      - valueBeforeChangePoint
      type: object
    Success:
      example:
        code: 0
        message: message
      properties:
        message:
          description: Detailed message
          type: string
        code:
          description: The HTTP status code
          format: int32
          type: integer
      type: object
    SuccessEnvelope:
      example:
        details:
          code: 0
          message: message
      properties:
        details:
          $ref: '#/components/schemas/Success'
      type: object
    LogMessageJson:
      description: "The log message in JSON format. Use one object representing a\
        \ single event or an array of objects representing multiple events. \n\nThe\
        \ object might contain the following types of keys (the possible key values\
        \ are listed below): \n\n* Timestamp.  The following formats are supported:\
        \ UTC milliseconds, RFC3339, and RFC3164. If not set, the current timestamp\
        \ is used. \n* Severity. If not set, `NONE` is used. \n* Content. If the content\
        \ key is not set, the whole JSON is parsed as the content. \n* Semantic attribute.\
        \ Only values of the `String` type are supported. Semantic attributes are\
        \ indexed and can be used in queries. These are also displayed in aggregations\
        \ (facets). If an unsupported key occurs it is not indexed and cannot be used\
        \ in indexing and aggregations. \n\nThe length of the value is limited. Any\
        \ content exceeding the limit is trimmed. Default limits:\n\n* Content: 8,192\
        \ characters. \n* Semantic attribute value: 250 characters.\n\nSupported timestamp\
        \ keys:\n * @timestamp\n * Timestamp\n * _timestamp\n * date\n * eventTime\n\
        \ * published_date\n * syslog.timestamp\n * timestamp\n\nSupported content\
        \ keys:\n * body\n * content\n * message\n * payload\n\nSupported severity\
        \ keys:\n * level\n * loglevel\n * severity\n * status\n * syslog.severity\n\
        \nSupported semantic attribute keys:\n * audit.action\n * audit.identity\n\
        \ * audit.result\n * aws.account.id\n * aws.arn\n * aws.log_group\n * aws.log_stream\n\
        \ * aws.region\n * aws.resource.id\n * aws.resource.type\n * aws.service\n\
        \ * azure.location\n * azure.resource.group\n * azure.resource.id\n * azure.resource.name\n\
        \ * azure.resource.type\n * azure.subscription\n * cloud.account.id\n * cloud.provider\n\
        \ * cloud.region\n * cloud.zone\n * container.image.name\n * container.image.tag\n\
        \ * container.name\n * db.cassandra.keyspace\n * db.connection_string\n *\
        \ db.hbase.namespace\n * db.jdbc.driver_classname\n * db.mongodb.collection\n\
        \ * db.mssql.instance_name\n * db.name\n * db.operation\n * db.redis.database_index\n\
        \ * db.statement\n * db.system\n * db.user\n * dt.code.filepath\n * dt.code.func\n\
        \ * dt.code.lineno\n * dt.code.ns\n * dt.ctg.calltype\n * dt.ctg.extendmode\n\
        \ * dt.ctg.gatewayurl\n * dt.ctg.program\n * dt.ctg.rc\n * dt.ctg.requesttype\n\
        \ * dt.ctg.serverid\n * dt.ctg.termid\n * dt.ctg.transid\n * dt.ctg.userid\n\
        \ * dt.entity.cloud_application\n * dt.entity.cloud_application_instance\n\
        \ * dt.entity.cloud_application_namespace\n * dt.entity.custom_device\n *\
        \ dt.entity.host\n * dt.entity.kubernetes_cluster\n * dt.entity.kubernetes_node\n\
        \ * dt.entity.process_group\n * dt.entity.process_group_instance\n * dt.event.group_label\n\
        \ * dt.event.key\n * dt.events.root_cause_relevant\n * dt.exception.messages\n\
        \ * dt.exception.serialized_stacktraces\n * dt.exception.types\n * dt.extension.config.id\n\
        \ * dt.extension.ds\n * dt.extension.name\n * dt.extension.status\n * dt.host.ip\n\
        \ * dt.host.smfid\n * dt.host.snaid\n * dt.host_group.id\n * dt.http.application_id\n\
        \ * dt.http.context_root\n * dt.kubernetes.cluster.name\n * dt.kubernetes.config.id\n\
        \ * dt.kubernetes.event.reason\n * dt.kubernetes.node.name\n * dt.kubernetes.node.system_uuid\n\
        \ * dt.kubernetes.topmost_controller.kind\n * dt.kubernetes.workload.kind\n\
        \ * dt.kubernetes.workload.name\n * dt.network_zone.id\n * dt.os.description\n\
        \ * dt.os.type\n * dt.process.commandline\n * dt.process.executable\n * dt.process.name\n\
        \ * dt.source_entity\n * dt.source_entity_name\n * dt.source_entity_type\n\
        \ * faas.id\n * faas.instance\n * faas.name\n * faas.version\n * gcp.instance.id\n\
        \ * gcp.instance.name\n * gcp.project.id\n * gcp.region\n * gcp.resource.type\n\
        \ * host.hostname\n * host.id\n * host.image.id\n * host.image.name\n * host.image.version\n\
        \ * host.name\n * host.type\n * http.client_ip\n * http.flavor\n * http.host\n\
        \ * http.method\n * http.route\n * http.scheme\n * http.server_name\n * http.status_code\n\
        \ * http.status_text\n * http.target\n * http.url\n * k8s.cluster.name\n *\
        \ k8s.cronjob.name\n * k8s.cronjob.uid\n * k8s.daemonset.name\n * k8s.daemonset.uid\n\
        \ * k8s.deployment.name\n * k8s.deployment.uid\n * k8s.job.name\n * k8s.job.uid\n\
        \ * k8s.namespace.name\n * k8s.pod.name\n * k8s.pod.uid\n * k8s.replicaset.name\n\
        \ * k8s.replicaset.uid\n * k8s.statefulset.name\n * k8s.statefulset.uid\n\
        \ * log.source\n * net.host.ip\n * net.host.name\n * net.host.port\n * net.peer.ip\n\
        \ * net.peer.name\n * net.peer.port\n * net.transport\n * service.instance.id\n\
        \ * service.name\n * service.namespace\n * service.version\n * span.id\n *\
        \ trace.id"
      type: object
    LogMessagePlain:
      description: "The log message in plain text. \n\nThe length of the message is\
        \ limited to 8,192 characters. Any content exceeding the limit is trimmed."
      type: object
    Release:
      description: |-
        Contains data related to a single release of a component.
        A Release is a combination of a component and a version.
        A Component can be any form of deployable that can be associated with a version.
        In the first draft, a Component is always a Service.

        The tuple <name, product, stage, version> is always unique.
      example:
        affectedBySecurityVulnerabilities: true
        releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
        product: Sockshop
        problemCount: 4
        instances:
        - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
        - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
        securityVulnerabilitiesCount: 4
        version: 1.195.34.12341232423-012342
        softwareTechs:
        - technology: JAVA
          edition: OpenJDK
          version: 1.8.0_242
          verbatimType: Java
        running: true
        stage: staging
        name: cluster
        throughput: 923234
        affectedByProblems: true
      properties:
        releaseEntityId:
          description: The entity id of correlating release.
          example: PROCESS_GROUP-DFDBAC9CBF104253
          type: string
        securityVulnerabilitiesCount:
          description: The number of security vulnerabilities of the entity
          example: 4
          format: int32
          minimum: 0
          type: integer
        affectedByProblems:
          description: The entity has one or more problems
          example: true
          type: boolean
        instances:
          description: The instances entityIds included in this release
          example:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          items:
            $ref: '#/components/schemas/ReleaseInstance'
          type: array
        affectedBySecurityVulnerabilities:
          description: The entity has one or more security vulnerabilities
          example: true
          type: boolean
        throughput:
          description: The count of bytes per second of the entity
          example: 923234
          format: double
          minimum: 0
          type: number
        softwareTechs:
          description: The software technologies of the release
          example:
          - technology: JAVA
            edition: OpenJDK
            version: 1.8.0_242
            verbatimType: Java
          items:
            $ref: '#/components/schemas/SoftwareTechs'
          type: array
        product:
          description: The product name
          example: Sockshop
          type: string
        name:
          description: The entity name
          example: cluster
          type: string
        version:
          description: The identified release version
          example: 1.195.34.12341232423-012342
          type: string
        running:
          description: The related PGI is still running/monitored
          example: true
          type: boolean
        problemCount:
          description: The number of problems of the entity
          example: 4
          format: int32
          minimum: 0
          type: integer
        stage:
          description: The stage name
          example: staging
          type: string
      type: object
    ReleaseInstance:
      description: |-
        Contains data related to a single instance of a release.
        An instance is a Process Group Instance and has an optional build version.
      example:
      - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
      - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
      properties:
        entityId:
          description: The entity id of the instance.
          example: PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253
          type: string
        buildVersion:
          description: The build version
          example: "223005"
          type: string
        securityVulnerabilities:
          description: List of Security vulnerabilities Ids
          example:
          - SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567
          items:
            description: List of Security vulnerabilities Ids
            example: '["SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567"]'
            type: string
          type: array
        problems:
          description: List of event Ids of open problems
          example:
          - 573177299181554914_1616573184015V2
          items:
            description: List of event Ids of open problems
            example: '["573177299181554914_1616573184015V2"]'
            type: string
          type: array
      type: object
    Releases:
      description: A list of releases.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        releasesWithProblems: 0
        pageSize: 1
        totalCount: 6
        releases:
        - affectedBySecurityVulnerabilities: true
          releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
          product: Sockshop
          problemCount: 4
          instances:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          securityVulnerabilitiesCount: 4
          version: 1.195.34.12341232423-012342
          softwareTechs:
          - technology: JAVA
            edition: OpenJDK
            version: 1.8.0_242
            verbatimType: Java
          running: true
          stage: staging
          name: cluster
          throughput: 923234
          affectedByProblems: true
        - affectedBySecurityVulnerabilities: true
          releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
          product: Sockshop
          problemCount: 4
          instances:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          securityVulnerabilitiesCount: 4
          version: 1.195.34.12341232423-012342
          softwareTechs:
          - technology: JAVA
            edition: OpenJDK
            version: 1.8.0_242
            verbatimType: Java
          running: true
          stage: staging
          name: cluster
          throughput: 923234
          affectedByProblems: true
      properties:
        releases:
          description: A list of releases.
          items:
            $ref: '#/components/schemas/Release'
          type: array
        releasesWithProblems:
          description: Number of releases with problems.
          format: int64
          type: integer
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    SoftwareTechs:
      description: Contains information about the used software technology.
      example:
      - technology: JAVA
        edition: OpenJDK
        version: 1.8.0_242
        verbatimType: Java
      properties:
        technology:
          description: The type of the technology.
          example: JAVA
          type: string
        verbatimType:
          description: The verbatim type of the technology.
          example: Java
          type: string
        edition:
          description: The edition of the technology.
          example: OpenJDK
          type: string
        version:
          description: The version of the technology.
          example: 11.0.10
          type: string
      type: object
    ObjectsList:
      description: A list of settings objects.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 5
        totalCount: 1
        items:
        - summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          created: 6
          schemaId: builtin:anomaly.infrastructure
          scope: HOST-D3A3C5A146830A79
          modified: 0
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        - summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          created: 6
          schemaId: builtin:anomaly.infrastructure
          scope: HOST-D3A3C5A146830A79
          modified: 0
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        items:
          description: A list of settings objects.
          items:
            $ref: '#/components/schemas/SettingsObject'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    SettingsObject:
      description: A settings object.
      example:
        summary: summary
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        author: john.doe@example.com
        created: 6
        schemaId: builtin:anomaly.infrastructure
        scope: HOST-D3A3C5A146830A79
        modified: 0
        value:
          autoMonitoring: true
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        author:
          description: The user (identified by a user ID or a public token ID) who
            performed that most recent modification.
          example: john.doe@example.com
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        modified:
          description: The timestamp of the last modification.
          format: int64
          type: integer
        objectId:
          description: The ID of the settings object.
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        created:
          description: The timestamp of the creation.
          format: int64
          type: integer
        scope:
          description: The scope that the object targets.
          example: HOST-D3A3C5A146830A79
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:anomaly.infrastructure
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
        summary:
          description: A short summary of settings.
          type: string
      type: object
    SettingsValue:
      description: "The value of the setting. \n\n It defines the actual values of\
        \ settings' parameters. \n\nThe actual content depends on the object's schema."
      example:
        autoMonitoring: true
      type: object
    SettingsObjectResponse:
      description: The response to a creation- or update-request.
      example:
        code: 0
        error:
          constraintViolations:
          - path: path
            location: location
            parameterLocation: PATH
            message: message
          - path: path
            location: location
            parameterLocation: PATH
            message: message
          code: 6
          message: message
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        invalidValue:
          autoMonitoring: true
      properties:
        invalidValue:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
        objectId:
          description: For a successful request, the ID of the created or modified
            settings object.
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        code:
          description: The HTTP status code for the object.
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    SettingsObjectCreate:
      description: Configuration of a new settings object.
      example:
        schemaVersion: 1.0.0
        schemaId: builtin:anomaly.infrastructure
        scope: HOST-D3A3C5A146830A79
        value:
          autoMonitoring: true
        insertAfter: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        insertAfter:
          description: "The position of the new object. The new object will be added\
            \ after the specified one. \n\nIf `null`, the new object will be placed\
            \ in the last position. \n\nIf set to empty string, the new object will\
            \ be placed in the first position. \n\nOnly applicable for objects based\
            \ on schemas with ordered objects (schema's **ordered** parameter is set\
            \ to `true`)."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        scope:
          description: The scope that the object targets.
          example: HOST-D3A3C5A146830A79
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:anomaly.infrastructure
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - schemaId
      - scope
      - value
      type: object
    SettingsObjectUpdate:
      description: An update of a settings object.
      example:
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        value:
          autoMonitoring: true
      properties:
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - value
      type: object
    SchemaList:
      description: The list of available settings schemas.
      example:
        totalCount: 1
        items:
        - latestSchemaVersion: 1.4.2
          schemaId: builtin:anomaly.infrastructure
          displayName: Anomaly Detection for Infrastructure
        - latestSchemaVersion: 1.4.2
          schemaId: builtin:anomaly.infrastructure
          displayName: Anomaly Detection for Infrastructure
      properties:
        items:
          description: A list of settings schemas.
          items:
            $ref: '#/components/schemas/SchemaStub'
          type: array
        totalCount:
          description: The number of schemas in the list.
          example: 1
          format: int64
          type: integer
      type: object
    SchemaStub:
      description: The short representation of the settings schema.
      example:
        latestSchemaVersion: 1.4.2
        schemaId: builtin:anomaly.infrastructure
        displayName: Anomaly Detection for Infrastructure
      properties:
        latestSchemaVersion:
          description: The most recent version of the schema.
          example: 1.4.2
          type: string
        schemaId:
          description: The ID of the schema.
          example: builtin:anomaly.infrastructure
          type: string
        displayName:
          description: The name of the schema.
          example: Anomaly Detection for Infrastructure
          type: string
      type: object
    SLO:
      description: Parameters of a service-level objective (SLO).
      example:
        metricDenominator: builtin:service.requestCount.total
        denominatorValue: 90
        description: Check the SLO for our payment service
        metricRate: builtin:service.successes.server.rate
        metricNumerator: builtin:service.errors.server.successCount
        error: NONE
        enabled: true
        target: 95.0
        evaluationType: AGGREGATE
        filter: type("HOST")
        useRateMetric: true
        timeframe: -1d
        numeratorValue: 80
        relatedOpenProblems: 0
        name: Payment service availability
        warning: 97.5
        id: 123e4567-e89b-42d3-a456-556642440000
        evaluatedPercentage: 96.25
        errorBudget: 1.25
        status: WARNING
      properties:
        relatedOpenProblems:
          description: "Number of OPEN problems related to the SLO. \n\nHas the value\
            \ of `-1` if there's an error with fetching SLO related problems."
          format: int32
          type: integer
        denominatorValue:
          description: The denominator value used to evaluate the SLO when **useRateMetric**
            is set to `false`.
          example: 90
          format: double
          type: number
        evaluatedPercentage:
          description: "The calculated value of the SLO. \n\nHas the value of `-1`\
            \ if there's an error with SLO calculation; in that case check the value\
            \ of the **error** parameter."
          example: 96.25
          format: double
          type: number
        numeratorValue:
          description: The numerator value used to evaluate the SLO when **useRateMetric**
            is set to `false`.
          example: 80
          format: double
          type: number
        useRateMetric:
          description: "The type of the metric to use for SLO calculation: \n\n* `true`:\
            \ An existing percentage-based metric. \n* `false`: A ratio of two metrics.\
            \ \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow)\
            \ or try the [GET metrics](https://dt-url.net/8e43kxf) API call."
          example: true
          type: boolean
        metricRate:
          description: "The percentage-based metric for the calculation of the SLO.\
            \ \n\nRequired when the **useRateMetric** is set to `true`."
          example: builtin:service.successes.server.rate
          type: string
        metricNumerator:
          description: "The metric for the count of successes (the numerator in rate\
            \ calculation). \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.errors.server.successCount
          type: string
        metricDenominator:
          description: "The total count metric (the denominator in rate calculation).\
            \ \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.requestCount.total
          type: string
        evaluationType:
          description: The evaluation type of the SLO.
          enum:
          - AGGREGATE
          example: AGGREGATE
          type: string
        timeframe:
          description: The timeframe for the SLO evaluation. Use the syntax of the
            global timeframe selector.
          example: -1d
          type: string
        errorBudget:
          description: "The error budget of the calculated SLO. \n\nThe error budget\
            \ is the difference between the calculated and target values. A positive\
            \ number means all is good; a negative number means trouble."
          example: 1.25
          format: double
          type: number
        filter:
          description: The entity filter for the SLO evaluation. Use the [syntax of
            entity selector](https://dt-url.net/entityselector).
          example: type("HOST")
          type: string
        name:
          description: The name of the SLO.
          example: Payment service availability
          type: string
        id:
          description: The ID of the SLO
          example: 123e4567-e89b-42d3-a456-556642440000
          format: uuid
          type: string
        target:
          description: The target value of the SLO.
          example: 95.0
          format: double
          type: number
        description:
          description: A short description of the SLO.
          example: Check the SLO for our payment service
          type: string
        enabled:
          description: The SLO is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
        status:
          description: The status of the calculated SLO.
          enum:
          - FAILURE
          - SUCCESS
          - WARNING
          example: WARNING
          type: string
        warning:
          description: "The warning value of the SLO. \n\n At warning state the SLO\
            \ is still fulfilled but is getting close to failure."
          example: 97.5
          format: double
          type: number
        error:
          description: "The error of the SLO calculation. \n\nIf the value differs\
            \ from `NONE` there's something wrong with the SLO calculation."
          enum:
          - DIFFERENT_ENTITY_TYPE_IN_METRICS
          - EVALUATION_TIMEFRAME_OUT_OF_BOUNDS
          - FILTER_MATCHES_IN_CONDITION_LIMIT_EXCEEDED
          - INTERNAL_ERROR
          - INVALID_ENTITY_SELECTOR
          - INVALID_METRIC_DENOMINATOR
          - INVALID_METRIC_NUMERATOR
          - INVALID_METRIC_SELECTOR
          - INVALID_TIMEFRAME
          - METRICS_NOT_RESOLVED
          - METRICS_NO_DATA
          - METRIC_DENOMINATOR_NOT_RESOLVED
          - METRIC_DENOMINATOR_NO_DATA
          - METRIC_DENOMINATOR_NO_DATA_POINTS
          - METRIC_DENOMINATOR_ZERO
          - METRIC_EXPRESSION_NOT_RESOLVED
          - METRIC_EXPRESSION_NO_DATA
          - METRIC_EXPRESSION_NO_DATA_POINTS
          - METRIC_GENERIC_TSM_FAULT
          - METRIC_NUMERATOR_NOT_RESOLVED
          - METRIC_NUMERATOR_NO_DATA
          - METRIC_NUMERATOR_NO_DATA_POINTS
          - METRIC_RATE_NOT_RESOLVED
          - METRIC_RATE_NO_DATA
          - METRIC_RATE_NO_DATA_POINTS
          - METRIC_TOO_MANY_RESULTS
          - NONE
          example: NONE
          type: string
      type: object
    SLOs:
      description: A list of SLOs.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        slo:
        - metricDenominator: builtin:service.requestCount.total
          denominatorValue: 90
          description: Check the SLO for our payment service
          metricRate: builtin:service.successes.server.rate
          metricNumerator: builtin:service.errors.server.successCount
          error: NONE
          enabled: true
          target: 95.0
          evaluationType: AGGREGATE
          filter: type("HOST")
          useRateMetric: true
          timeframe: -1d
          numeratorValue: 80
          relatedOpenProblems: 0
          name: Payment service availability
          warning: 97.5
          id: 123e4567-e89b-42d3-a456-556642440000
          evaluatedPercentage: 96.25
          errorBudget: 1.25
          status: WARNING
        - metricDenominator: builtin:service.requestCount.total
          denominatorValue: 90
          description: Check the SLO for our payment service
          metricRate: builtin:service.successes.server.rate
          metricNumerator: builtin:service.errors.server.successCount
          error: NONE
          enabled: true
          target: 95.0
          evaluationType: AGGREGATE
          filter: type("HOST")
          useRateMetric: true
          timeframe: -1d
          numeratorValue: 80
          relatedOpenProblems: 0
          name: Payment service availability
          warning: 97.5
          id: 123e4567-e89b-42d3-a456-556642440000
          evaluatedPercentage: 96.25
          errorBudget: 1.25
          status: WARNING
        pageSize: 1
        totalCount: 6
      properties:
        slo:
          description: A list of SLOs.
          items:
            $ref: '#/components/schemas/SLO'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    SloCreate:
      description: Parameters of a new SLO.
      example:
        metricDenominator: builtin:service.requestCount.total
        metricExpression: (100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)
        metricRate: builtin:service.successes.server.rate
        metricNumerator: builtin:service.errors.server.successCount
        enabled: true
        target: 95.0
        evaluationType: AGGREGATE
        filter: type("HOST")
        timeframe: -1d
        useRateMetric: true
        customDescription: Rate of successful payments per week
        name: Payment service availability
        warning: 97.5
      properties:
        enabled:
          description: The SLO is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
        name:
          description: The name of the SLO.
          example: Payment service availability
          type: string
        customDescription:
          description: The custom description of the SLO (optional).
          example: Rate of successful payments per week
          type: string
        metricExpression:
          description: The percentage-based metric expression for the calculation
            of the SLO. This is not usable yet as it requires some server-side enablement
            to work.
          example: (100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)
          type: string
        evaluationType:
          description: The evaluation type of the SLO.
          enum:
          - AGGREGATE
          example: AGGREGATE
          type: string
        filter:
          description: The entity filter for the SLO evaluation. Use the [syntax of
            entity selector](https://dt-url.net/entityselector).
          example: type("HOST")
          type: string
        target:
          description: The target value of the SLO.
          example: 95.0
          format: double
          type: number
          writeOnly: true
        warning:
          description: "The warning value of the SLO. \n\n At warning state the SLO\
            \ is still fulfilled but is getting close to failure."
          example: 97.5
          format: double
          type: number
          writeOnly: true
        timeframe:
          description: The timeframe for the SLO evaluation. Use the syntax of the
            global timeframe selector.
          example: -1d
          type: string
          writeOnly: true
        useRateMetric:
          description: "The type of the metric to use for SLO calculation: \n\n* `true`:\
            \ An existing percentage-based metric. \n* `false`: A ratio of two metrics.\
            \ \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow)\
            \ or try the [GET metrics](https://dt-url.net/8e43kxf) API call."
          example: true
          type: boolean
        metricRate:
          description: "The percentage-based metric for the calculation of the SLO.\
            \ \n\nRequired when the **useRateMetric** is set to `true`."
          example: builtin:service.successes.server.rate
          type: string
        metricNumerator:
          description: "The metric for the count of successes (the numerator in rate\
            \ calculation). \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.errors.server.successCount
          type: string
        metricDenominator:
          description: "The total count metric (the denominator in rate calculation).\
            \ \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.requestCount.total
          type: string
      type: object
    LocationExecutionResults:
      description: Results of the execution HTTP monitor's requests at a given location
      properties:
        locationId:
          description: Location id.
          type: string
        executionId:
          description: Execution id.
          type: string
        requestResults:
          description: The list of the monitor's request results executed on this
            location.
          items:
            $ref: '#/components/schemas/MonitorRequestExecutionResult'
          type: array
      type: object
    MonitorExecutionResults:
      description: Results of the execution of all HTTP monitor's requests.
      example:
        monitorId: HTTP_CHECK-12B428F6D37A9197
        locationsExecutionResults:
        - locationId: "7804738439930364165"
          executionId: "6136172183050046113"
          requestResults:
          - requestId: HTTP_CHECK_STEP-53071FC3C4F72E28
            requestName: Request name
            sequenceNumber: 1
            startTimestamp: 1615806570884
            engineId: 338502283
            publicLocation: false
            url: https://www.examplePage.com
            method: GET
            requestBody: ""
            requestHeaders:
            - name: User-Agent
              value: DynatraceSynthetic/1.215.1
            - name: X-Dynatrace-Visit
              value: "6136172183050046113"
            - name: X-Dynatrace-Test
              value: HTTP_CHECK-12B428F6D37A9197
            responseStatusCode: 200
            responseBody: <html><head>Title</head><body>Main Page</body></html>
            responseSize: 1112
            responseBodySizeLimitExceeded: false
            responseHeaders:
            - name: Date
              value: Mon, 15 Mar 2021 11:09:30 GMT
            - name: Content-Language
              value: en
            resolvedIps:
            - 80.252.0.145
            errorCode: 0
            responseMessage: OK
            peerCertificateExpiryDate: 1647302399000
            peerCertificateDetails: '[Certificate details]'
            totalTime: 238
            hostNameResolutionTime: 26
            tcpConnectTime: 15
            tlsHandshakeTime: 8
            timeToFirstByte: 96
            redirectionTime: 70
            waitingTime: 47
            redirectsCount: 1
            failureMessage: ""
      properties:
        monitorId:
          description: Monitor id.
          type: string
        locationsExecutionResults:
          description: The list with the results of the requests executed on assigned
            locations.
          items:
            $ref: '#/components/schemas/LocationExecutionResults'
          type: array
      type: object
    MonitorRequestExecutionResult:
      description: A result of the execution HTTP monitor's request.
      properties:
        requestId:
          description: Request id.
          type: string
        requestName:
          description: Request name.
          type: string
        sequenceNumber:
          description: Request's sequence number.
          format: int32
          type: integer
        startTimestamp:
          description: Request start timestamp.
          format: int64
          type: integer
        engineId:
          description: VUC's id on which monitor's request was executed.
          format: int64
          type: integer
        publicLocation:
          description: Flag informs whether request was executed on public location.
          type: boolean
        url:
          description: Request URL address.
          type: string
        method:
          description: Request method type.
          type: string
        requestBody:
          description: Request's request body.
          type: string
        requestHeaders:
          description: A list of request's headers
          items:
            $ref: '#/components/schemas/MonitorRequestHeader'
          type: array
        responseStatusCode:
          description: Request's response status code.
          format: int32
          type: integer
        responseBody:
          description: Request's response body.
          type: string
        responseSize:
          description: Request's response size in bytes.
          format: int64
          type: integer
        responseBodySizeLimitExceeded:
          description: A flag indicating that the response payload size limit of 10MB
            has been exceeded.
          type: boolean
        responseHeaders:
          description: A list of request's response headers
          items:
            $ref: '#/components/schemas/MonitorRequestHeader'
          type: array
        resolvedIps:
          description: Request's resolved ips.'
          items:
            description: Request's resolved ips.'
            type: string
          type: array
        healthStatusCode:
          description: Request's health status code.
          format: int32
          type: integer
        healthStatus:
          description: Request's health status.
          type: string
        responseMessage:
          description: Request's response message.'
          type: string
        peerCertificateExpiryDate:
          description: An expiry date of the first SSL certificate from the certificate
            chain.
          format: int64
          type: integer
        peerCertificateDetails:
          description: Request's certificate details.
          type: string
        totalTime:
          description: A total request time measured in ms.
          format: int64
          type: integer
        hostNameResolutionTime:
          description: A hostname resolution time measured in ms.
          format: int64
          type: integer
        tcpConnectTime:
          description: A TCP connect time measured in ms.
          format: int64
          type: integer
        tlsHandshakeTime:
          description: A TLS handshake time measured in ms.
          format: int64
          type: integer
        timeToFirstByte:
          description: A time to first byte measured in ms.
          format: int64
          type: integer
        redirectionTime:
          description: Total number of milliseconds spent on handling all redirect
            requests, measured in ms.
          format: int64
          type: integer
        waitingTime:
          description: Waiting time (time to first byte - (DNS lookup time + TCP connect
            time + TLS handshake time), measured in ms.
          format: int64
          type: integer
        redirectsCount:
          description: Number of request's redirects.
          format: int32
          type: integer
        failureMessage:
          description: Request's failure message.
          type: string
      type: object
    MonitorRequestHeader:
      description: A header of the Http request
      properties:
        name:
          description: Header's name.
          type: string
        value:
          description: Header's value.
          type: string
      type: object
    SyntheticPublicLocationsStatus:
      description: The status of public synthetic locations.
      example:
        publicLocationsEnabled: true
      properties:
        publicLocationsEnabled:
          description: Synthetic monitors can (`true`) or can't (`false`) run on public
            synthetic locations.
          type: boolean
      required:
      - publicLocationsEnabled
      type: object
    SyntheticLocationIdsDto:
      description: A DTO for synthetic Location IDs.
      example:
        entityId: entityId
        geoLocationId: geoLocationId
      properties:
        entityId:
          description: Entity ID to be transferred
          type: string
        geoLocationId:
          description: GeoLocation ID to be transferred
          type: string
      required:
      - entityId
      - geoLocationId
      type: object
    PrivateSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - $ref: '#/components/schemas/PrivateSyntheticLocation_allOf'
      description: "Configuration of a private synthetic location. \n\n Some fields\
        \ are inherited from the base *SyntheticLocation* object."
      example:
        type: PRIVATE
        name: Linz Location
        countryCode: AT
        regionCode: "04"
        city: Linz
        latitude: 48.306351
        longitude: 14.287399
        nodes:
        - "93302281"
        status: ENABLED
        availabilityLocationOutage: false
        availabilityNodeOutage: false
        availabilityLocationNodeOutageDelayInMinutes: 5
      required:
      - entityId
      - latitude
      - longitude
      - name
      - nodes
      - type
      type: object
    LocationCollectionElement:
      description: A synthetic location.
      properties:
        name:
          description: The name of the location.
          type: string
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        type:
          description: The type of the location.
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
        cloudPlatform:
          description: "The cloud provider where the location is hosted. \n\n Only\
            \ applicable to `PUBLIC` locations."
          enum:
          - ALIBABA
          - AMAZON_EC2
          - AZURE
          - DYNATRACE_CLOUD
          - GOOGLE_CLOUD
          - INTEROUTE
          - OTHER
          - UNDEFINED
          type: string
        ips:
          description: "The list of IP addresses assigned to the location. \n\n Only\
            \ applicable to `PUBLIC` locations."
          items:
            type: string
          type: array
        stage:
          description: The release stage of the location.
          enum:
          - BETA
          - COMING_SOON
          - GA
          type: string
        status:
          description: The status of the location.
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        geoLocationId:
          description: The Dynatrace GeoLocation ID of the location.
          type: string
      required:
      - entityId
      - geoLocationId
      - name
      - type
      type: object
    SyntheticLocations:
      description: A list of synthetic locations.
      example:
        locations:
        - name: Gdansk
          entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          type: PUBLIC
          cloudPlatform: AMAZON_EC2
          ips:
          - 134.189.153.97
          - 134.189.153.98
          stage: GA
          status: ENABLED
          capabilities:
          - BROWSER
          - HTTP
        - name: My private location
          entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          type: PRIVATE
          status: ENABLED
      properties:
        locations:
          description: A list of synthetic locations.
          items:
            $ref: '#/components/schemas/LocationCollectionElement'
          type: array
      required:
      - locations
      type: object
    SyntheticLocationUpdate:
      description: The synthetic location update. This is a base object, the exact
        type depends on the value of the `type` field.
      discriminator:
        propertyName: type
      example:
        type: PRIVATE
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PUBLIC` -> SyntheticPublicLocationUpdate\
            \ \n* `PRIVATE` -> SyntheticPrivateLocationUpdate \n"
          enum:
          - PRIVATE
          - PUBLIC
          type: string
      type: object
    SyntheticPrivateLocationUpdate:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocationUpdate'
      - $ref: '#/components/schemas/SyntheticPrivateLocationUpdate_allOf'
      description: Configuration of a private synthetic location
      required:
      - latitude
      - longitude
      - name
      - nodes
      type: object
    SyntheticPublicLocationUpdate:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocationUpdate'
      - $ref: '#/components/schemas/SyntheticPublicLocationUpdate_allOf'
      description: The update of a public Synthetic location.
      required:
      - status
      type: object
    PublicSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - $ref: '#/components/schemas/PublicSyntheticLocation_allOf'
      description: "Configuration of a public synthetic location. \n\n Some fields\
        \ are inherited from the base *SyntheticLocation* object."
      example:
        entityId: SYNTHETIC_LOCATION-95196F3C9A4F4215
        geoLocationId: GEOLOCATION-95196F3C9A4F4215
        type: PUBLIC
        name: Amazon US East
        countryCode: US
        regionCode: VA
        city: Amazon US East (N. Virginia)
        latitude: 39.0436
        longitude: -77.4875
        cloudPlatform: AMAZON_EC2
        ips:
        - 134.189.153.97
        - 134.189.153.98
        stage: GA
        browserType: Chrome
        browserVersion: 69.0.3497.81
        status: ENABLED
        capabilities:
        - BROWSER
        - HTTP
      required:
      - browserType
      - browserVersion
      - cloudPlatform
      - entityId
      - ips
      - latitude
      - longitude
      - name
      - stage
      - type
      type: object
    SyntheticLocation:
      description: "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**,\
        \ **city** parameters are optional as they can be retrieved based on **latitude**\
        \ and **longitude** of location.\n\n The actual set of fields depends on the\
        \ **type** of the location."
      discriminator:
        propertyName: type
      example:
        regionCode: regionCode
        city: city
        countryCode: countryCode
        latitude: 0.8008281904610115
        name: name
        entityId: entityId
        type: CLUSTER
        geoLocationId: geoLocationId
        longitude: 6.027456183070403
        status: DISABLED
      properties:
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation\
            \ \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation\
            \ \n"
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
        name:
          description: The name of the location.
          type: string
        countryCode:
          description: "The country code of the location. \n\n Use the alpha-2 code\
            \ of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example,\
            \ `AT` for Austria or `PL` for Poland)."
          type: string
        regionCode:
          description: "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us)\
            \ or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes\
            \ (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR`\
            \ for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)."
          type: string
        city:
          description: The city of the location.
          type: string
        latitude:
          description: The latitude of the location in `DDD.dddd` format.
          format: double
          type: number
        longitude:
          description: The longitude of the location in `DDD.dddd` format.
          format: double
          type: number
        status:
          description: "The status of the location: \n\n* `ENABLED`: The location\
            \ is displayed as active in the UI. You can assign monitors to the location.\
            \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
            \ can't assign monitors to the location. Monitors already assigned to\
            \ the location will stay there and will be executed from the location.\
            \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
            \ monitors to the location. You can only set location as `HIDDEN` when\
            \ no monitor is assigned to it."
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        geoLocationId:
          description: The Dynatrace GeoLocation ID of the location.
          type: string
      required:
      - entityId
      - latitude
      - longitude
      - name
      - type
      type: object
    Node:
      description: "Configuration of a synthetic node. \n\n A *synthetic node* is\
        \ an ActiveGate that is able to execute synthetic monitors."
      example:
        entityId: "3086117876"
        hostname: gdn.dyna.trace
        ips:
        - 238.245.160.14
        version: 1.161.0.20181210-173639
        browserMonitorsEnabled: true
        activeGateVersion: 1.172.2.20190607-040913
        oneAgentRoutingEnabled: true
        operatingSystem: Linux
        autoUpdateEnabled: true
        status: Running
        playerVersion: 1.179.0.20190920-145430
        healthCheckStatus: Ok
        browserType: Chrome
        browserVersion: 69.0.3497.81
      properties:
        entityId:
          description: The ID of the synthetic node.
          type: string
        hostname:
          description: The hostname of the synthetic node.
          type: string
        ips:
          description: The IP of the synthetic node.
          items:
            type: string
          type: array
        version:
          description: The version of the synthetic node.
          type: string
        browserMonitorsEnabled:
          description: The synthetic node is able to execute browser monitors (`true`)
            or not (`false`).
          type: boolean
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        'oneAgentRoutingEnabled ':
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        status:
          description: The status of the synthetic node.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
        browserType:
          description: The browser type.
          type: string
        browserVersion:
          description: The browser version.
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - browserType
      - browserVersion
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - 'oneAgentRoutingEnabled '
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    NodeCollectionElement:
      description: The short representation of a synthetic object. Only contains the
        ID and the display name.
      properties:
        entityId:
          description: The ID of a node.
          type: string
        hostname:
          description: The hostname of a node.
          type: string
        ips:
          description: The IP of a node.
          items:
            type: string
          type: array
        version:
          description: The version of a node
          type: string
        browserMonitorsEnabled:
          description: Browser check capabilities enabled flag.
          type: boolean
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        'oneAgentRoutingEnabled ':
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        status:
          description: The status of the synthetic node.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - 'oneAgentRoutingEnabled '
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    Nodes:
      description: A list of synthetic nodes
      example:
        nodes:
        - entityId: "3086117876"
          hostname: gdn.dyna.trace
          ips:
          - 238.245.160.14
          version: 1.161.0.20181210-173639
          browserMonitorsEnabled: true
          activeGateVersion: 1.172.2.20190607-040913
          oneAgentRoutingEnabled: true
          operatingSystem: Linux
          autoUpdateEnabled: true
          status: Running
          playerVersion: 1.179.0.20190920-145430
          healthCheckStatus: Ok
      properties:
        nodes:
          description: A list of synthetic nodes
          items:
            $ref: '#/components/schemas/NodeCollectionElement'
          type: array
      required:
      - nodes
      type: object
    TenantToken:
      description: Tenant token
      example:
        value: value
      properties:
        value:
          description: The secret of the tenant token.
          type: string
      type: object
    TenantTokenConfig:
      description: Configuration of a [tenant token](https://dt-url.net/b403ss9).
      example:
        old:
          value: value
        active:
          value: value
      properties:
        active:
          $ref: '#/components/schemas/TenantToken'
        old:
          $ref: '#/components/schemas/TenantToken'
      type: object
    inline_object:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    SecurityProblemDetails_relatedContainerImages:
      description: A list of related container images.
      example:
        containerImages:
        - imageId: imageId
          imageName: imageName
          numberOfAffectedEntities: 3
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - imageId: imageId
          imageName: imageName
          numberOfAffectedEntities: 3
          affectedEntities:
          - affectedEntities
          - affectedEntities
      properties:
        containerImages:
          description: A list of related container images.
          items:
            $ref: '#/components/schemas/RelatedContainerImage'
          readOnly: true
          type: array
      type: object
    AvailabilityEvidence_allOf:
      properties:
        endTime:
          description: The end time of the evidence, in UTC milliseconds.
          format: int64
          type: integer
      type: object
    EventEvidence_allOf:
      properties:
        eventType:
          description: The type of the event.
          type: string
        eventId:
          description: The ID of the event.
          type: string
      type: object
    MaintenanceWindowEvidence_allOf:
      properties:
        maintenanceWindowConfigId:
          description: The ID of the related maintenance window.
          type: string
        endTime:
          description: The end time of the evidence, in UTC milliseconds.
          format: int64
          type: integer
      type: object
    MetricEvidence_allOf:
      properties:
        metricId:
          description: The ID of the metric.
          type: string
        valueBeforeChangePoint:
          description: The metric's value before the problem start.
          format: float
          type: number
        valueAfterChangePoint:
          description: The metric's value after the problem start.
          format: float
          type: number
        endTime:
          description: |-
            The end time of the evidence, in UTC milliseconds.

            The value `null` indicates that the evidence is still open.
          format: int64
          type: integer
        unit:
          description: The unit of the metric.
          enum:
          - Bit
          - BitPerHour
          - BitPerMinute
          - BitPerSecond
          - Byte
          - BytePerHour
          - BytePerMinute
          - BytePerSecond
          - Cores
          - Count
          - Day
          - DecibelMilliWatt
          - GibiByte
          - Giga
          - GigaByte
          - Hour
          - KibiByte
          - KibiBytePerHour
          - KibiBytePerMinute
          - KibiBytePerSecond
          - Kilo
          - KiloByte
          - KiloBytePerHour
          - KiloBytePerMinute
          - KiloBytePerSecond
          - MSU
          - MebiByte
          - MebiBytePerHour
          - MebiBytePerMinute
          - MebiBytePerSecond
          - Mega
          - MegaByte
          - MegaBytePerHour
          - MegaBytePerMinute
          - MegaBytePerSecond
          - MicroSecond
          - MilliCores
          - MilliSecond
          - MilliSecondPerMinute
          - Minute
          - Month
          - NanoSecond
          - NanoSecondPerMinute
          - NotApplicable
          - PerHour
          - PerMinute
          - PerSecond
          - Percent
          - Pixel
          - Promille
          - Ratio
          - Second
          - State
          - Unspecified
          - Week
          - Year
          type: string
      type: object
    ServiceImpact_allOf:
      properties:
        numberOfPotentiallyAffectedServiceCalls:
          description: The number of potentially impacted services.
          format: int64
          type: integer
      type: object
    TransactionalEvidence_allOf:
      properties:
        valueBeforeChangePoint:
          description: The metric's value before the problem start.
          format: float
          type: number
        valueAfterChangePoint:
          description: The metric's value after the problem start.
          format: float
          type: number
        endTime:
          description: The end time of the evidence, in UTC milliseconds
          format: int64
          type: integer
        unit:
          description: The unit of the metric.
          type: string
      type: object
    PrivateSyntheticLocation_allOf:
      properties:
        nodes:
          description: "A list of synthetic nodes belonging to the location. \n\n\
            \ You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl)\
            \ call."
          items:
            type: string
          type: array
        availabilityLocationOutage:
          description: The alerting of location outage is enabled (`true`) or disabled
            (`false`).
          type: boolean
        availabilityNodeOutage:
          description: "The alerting of node outage is enabled (`true`) or disabled\
            \ (`false`). \n\n If enabled, the outage of *any* node in the location\
            \ triggers an alert."
          type: boolean
        locationNodeOutageDelayInMinutes:
          description: "Alert if the location or node outage lasts longer than *X*\
            \ minutes. \n\n Only applicable when **availabilityLocationOutage** or\
            \ **availabilityNodeOutage** is set to `true`."
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        availabilityNotificationsEnabled:
          description: The notifications of location and node outage is enabled (`true`)
            or disabled (`false`).
          type: boolean
      type: object
    SyntheticPrivateLocationUpdate_allOf:
      properties:
        nodes:
          description: "A list of synthetic nodes belonging to the location. \n\n\
            \ You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl)\
            \ call."
          items:
            type: string
          type: array
        name:
          description: The name of the location.
          type: string
        countryCode:
          description: "The country code of the location. \n\n Use the alpha-2 code\
            \ of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example,\
            \ `AT` for Austria or `PL` for Poland)."
          type: string
        regionCode:
          description: "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us)\
            \ or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes\
            \ (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR`\
            \ for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)."
          type: string
        city:
          description: The city of the location.
          type: string
        latitude:
          description: The latitude of the location in `DDD.dddd` format.
          format: double
          type: number
        longitude:
          description: The longitude of the location in `DDD.dddd` format.
          format: double
          type: number
        status:
          description: "The status of the location: \n\n* `ENABLED`: The location\
            \ is displayed as active in the UI. You can assign monitors to the location.\
            \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
            \ can't assign monitors to the location. Monitors already assigned to\
            \ the location will stay there and will be executed from the location.\
            \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
            \ monitors to the location. You can only set location as `HIDDEN` when\
            \ no monitor is assigned to it."
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        availabilityLocationOutage:
          description: The alerting of location outage is enabled (`true`) or disabled
            (`false`).
          type: boolean
        availabilityNodeOutage:
          description: "The alerting of node outage is enabled (`true`) or disabled\
            \ (`false`). \n\n If enabled, the outage of *any* node in the location\
            \ triggers an alert."
          type: boolean
        locationNodeOutageDelayInMinutes:
          description: "Alert if the location or node outage lasts longer than *X*\
            \ minutes. \n\n Only applicable when **availabilityLocationOutage** or\
            \ **availabilityNodeOutage** is set to `true`."
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        availabilityNotificationsEnabled:
          description: The notifications of location and node outage is enabled (`true`)
            or disabled (`false`).
          type: boolean
      type: object
    SyntheticPublicLocationUpdate_allOf:
      properties:
        status:
          description: "The status of the location: \n\n* `ENABLED`: The location\
            \ is displayed as active in the UI. You can assign monitors to the location.\
            \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
            \ can't assign monitors to the location. Monitors already assigned to\
            \ the location will stay there and will be executed from the location.\
            \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
            \ monitors to the location. You can only set location as `HIDDEN` when\
            \ no monitor is assigned to it."
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
      type: object
    PublicSyntheticLocation_allOf:
      properties:
        cloudPlatform:
          description: The cloud provider where the location is hosted.
          enum:
          - ALIBABA
          - AMAZON_EC2
          - AZURE
          - DYNATRACE_CLOUD
          - GOOGLE_CLOUD
          - INTEROUTE
          - OTHER
          - UNDEFINED
          type: string
        ips:
          description: The list of IP addresses assigned to the location.
          items:
            type: string
          type: array
          uniqueItems: true
        stage:
          description: The stage of the location.
          enum:
          - BETA
          - COMING_SOON
          - GA
          type: string
        browserType:
          description: The type of the browser the location is using to execute browser
            monitors.
          type: string
        browserVersion:
          description: The version of the browser the location is using to execute
            browser monitors.
          type: string
        capabilities:
          description: A list of location capabilities.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    Api-Token:
      description: |-
        Dynatrace API Token

         The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.
      in: header
      name: Authorization
      type: apiKey
